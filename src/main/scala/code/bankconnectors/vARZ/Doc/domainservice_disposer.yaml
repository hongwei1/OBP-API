swagger: '2.0'
info:
  version: 0.0.1
  title: Disposer API
  description: API for disposer operations
host: "lnx0162a238:25012"
basePath: "/__arz_service/disposer/api/v1"
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  '/v1/disposers':
    post:
      summary: creates a new disposer
      description: creates a new EBP-disposer. SBP disposers are not supported by this resource. The header-parameter idempotency-key ensures the uniqueness the disposer creation.
      operationId: createDisposer
      parameters:
        - in: header
          name: idempotency-key
          type: string
          format: uuid
          required: true
          description: unique identifier determined by the client
        - in: body
          name: body
          description: object representation of a disposer
          required: true
          schema:
            $ref: '#/definitions/Disposer'
      responses:
        '201':
          description: disposer created
          schema:
            $ref: '#/definitions/DisposerNumber'
        '200':
          description: disposer with given idempotency-key already exists
          schema:
            $ref: '#/definitions/DisposerNumber'
        '400':
          description: invalid request; the given disposer-parameters are not valid.
        '409':
          description: invalid request; the given idempotency-key has already been used for another type of transaction. Please retry with a valid key.
        '503':
          description: service unavailable
  '/v1/disposers/{number}':
    get:
      summary: retrieve a disposer
      description: retrieve a disposer
      operationId: getDisposer
      parameters:
        - in: path
          name: number
          required: true
          type: integer
          description: unique number for the disposer
      responses:
        '200':
          description: returns the disposer as an object
          schema:
            $ref: '#/definitions/Disposer'
        '400':
          description: invalid request
        '404':
          description: disposer with the disposerId not found

  '/v1/disposers/{number}/auth-levels':
    post:
      summary: retrieve the auth. level(s) for the disposers auth. criteria
      operationId: getDisposerAuthLevel
      parameters:
        - in: path
          name: number
          required: true
          type: integer
          description: existing/valid number for the disposer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AuthCriteria'  
      responses:
        '200':
          description: auth. level response
          schema:
            $ref: '#/definitions/AuthLevel'
        '401':
          description: disposer criteria (credentials), the disposers login error counter may be affected.

definitions:
  AuthCriteria:
    type: object
    properties:
      disposerCredentailValue:
        type: string
        description: the disposer-name and disposers clear text pin sepearted by '::''
        
  AuthLevel:
    type: object
    required:
      - level
    properties:
      level:
        type: array
        items:
          $ref: '#/definitions/LevelType'
      token:
        type: string
        description: token to verify 'the' recent level against '/auth-levels/{token}'.
        
  LevelType:
    type: string
    enum: [FULL,MEDIUM,LOW]
    description: level of auth., priorety = semantic meaning ('TBD:' SCA/strong auth only?)      
        
  Disposer:
    type: object
    required:
      - status
      - language
      - type
      - customerNr
      - address
      - bankSupervisorId
    properties:
      number:
        $ref: '#/definitions/DisposerNumber'
      credentials:
        $ref: '#/definitions/DisposerCredentials'
      status:
        $ref: '#/definitions/DisposerStatus'
      language:
        $ref: '#/definitions/Language'
      type:
        $ref: '#/definitions/DisposerType'
      customerNr:
        type: integer
        format: int64
        minimum: 0
        maximum: 99999999999
      address:
        $ref: '#/definitions/Address'
      bankSupervisorId:
        type: string
        description: the supervisor equals the 'Betreuer'.
      bankAdvisorId:
        type: string
        description: the advisor equals the 'Berater'.

  DisposerNumber:
    type: object
    required:
      - number
    properties:
      value:
        type: integer
        minimum: 0
        maximum: 999999999
        readOnly: true
        description: the disposer-number is readOnly and will always be generated by the service

  DisposerCredentials:
    #TODO writeOnly with OpenAPI 3.0!
    description: disposer#DisposerCredentials is write-only and SHOULT NOT be sent in responses!
    type: object
    properties:
      name:
        type: string
        description: the disposers secret 'login' name (plain text)
      pin:
        type: string
        description: the disposers secret 'login' PIN (plain text)

  DisposerType:
    type: string
    enum: [FULL, MINI]
  
  DisposerStatus:
    type: string
    enum: [ACTIVE, TRANSACTION_LOCK, EPS_TRANSACTION_LOCK, KDEB_LOCK, INACTIVE, PIN_LOCK, TAN_LOCK, USER_LOCK, ITAN_TIMEOUT_LOCK, VERMITTLER_LOGIN_LOCK, QUARANTINE_LOCK, DELETED]

  Address:
    type: object
    required:
      - identifier
      - number
    properties:
      identifier:
        type: string
      number:
        type: integer
    
  Language:
    type: string
    enum: [DE, EN, HR, SK, SI, IT, HU, CZ, BA, RO, RS, PL, FR]