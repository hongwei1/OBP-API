// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package code.obp.grpc.api

object ApiProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.google.protobuf.empty.EmptyProto,
    com.google.protobuf.timestamp.TimestampProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      code.obp.grpc.api.BanksJson400Grpc,
      code.obp.grpc.api.AccountsJSONGrpc,
      code.obp.grpc.api.AccountJSONGrpc,
      code.obp.grpc.api.ViewsJSONV121Grpc,
      code.obp.grpc.api.ViewJSONV121Grpc,
      code.obp.grpc.api.AccountsGrpc,
      code.obp.grpc.api.BasicAccountJSONGrpc,
      code.obp.grpc.api.BankIdGrpc,
      code.obp.grpc.api.BankIdUserIdGrpc,
      code.obp.grpc.api.AccountIdGrpc,
      code.obp.grpc.api.CoreTransactionsJsonV300Grpc,
      code.obp.grpc.api.BankIdAndAccountIdGrpc,
      code.obp.grpc.api.BankIdAccountIdAndUserIdGrpc,
      code.obp.grpc.api.AccountsBalancesV310JsonGrpc
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """CglhcGkucHJvdG8SDWNvZGUub2JwLmdycGMaG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL
  3RpbWVzdGFtcC5wcm90byKNBAoQQmFua3NKc29uNDAwR3JwYxJRCgViYW5rcxgBIAMoCzIvLmNvZGUub2JwLmdycGMuQmFua3NKc
  29uNDAwR3JwYy5CYW5rSnNvbjQwMEdycGNCCuI/BxIFYmFua3NSBWJhbmtzGmYKF0JhbmtSb3V0aW5nSnNvblYxMjFHcnBjEiMKB
  nNjaGVtZRgBIAEoCUIL4j8IEgZzY2hlbWVSBnNjaGVtZRImCgdhZGRyZXNzGAIgASgJQgziPwkSB2FkZHJlc3NSB2FkZHJlc3Mav
  QIKD0JhbmtKc29uNDAwR3JwYxIXCgJpZBgBIAEoCUIH4j8EEgJpZFICaWQSLQoKc2hvcnRfbmFtZRgCIAEoCUIO4j8LEglzaG9yd
  E5hbWVSCXNob3J0TmFtZRIqCglmdWxsX25hbWUYAyABKAlCDeI/ChIIZnVsbE5hbWVSCGZ1bGxOYW1lEh0KBGxvZ28YBCABKAlCC
  eI/BhIEbG9nb1IEbG9nbxImCgd3ZWJzaXRlGAUgASgJQgziPwkSB3dlYnNpdGVSB3dlYnNpdGUSbwoNYmFua19yb3V0aW5ncxgGI
  AMoCzI3LmNvZGUub2JwLmdycGMuQmFua3NKc29uNDAwR3JwYy5CYW5rUm91dGluZ0pzb25WMTIxR3JwY0IR4j8OEgxiYW5rUm91d
  GluZ3NSDGJhbmtSb3V0aW5ncyJdChBBY2NvdW50c0pTT05HcnBjEkkKCGFjY291bnRzGAEgAygLMh4uY29kZS5vYnAuZ3JwYy5BY
  2NvdW50SlNPTkdycGNCDeI/ChIIYWNjb3VudHNSCGFjY291bnRzItIBCg9BY2NvdW50SlNPTkdycGMSFwoCaWQYASABKAlCB+I/B
  BICaWRSAmlkEiAKBWxhYmVsGAIgASgJQgriPwcSBWxhYmVsUgVsYWJlbBJeCg92aWV3c19hdmFpbGFibGUYAyADKAsyIC5jb2RlL
  m9icC5ncnBjLlZpZXdzSlNPTlYxMjFHcnBjQhPiPxASDnZpZXdzQXZhaWxhYmxlUg52aWV3c0F2YWlsYWJsZRIkCgdiYW5rX2lkG
  AQgASgJQgviPwgSBmJhbmtJZFIGYmFua0lkIlYKEVZpZXdzSlNPTlYxMjFHcnBjEkEKBXZpZXdzGAEgAygLMh8uY29kZS5vYnAuZ
  3JwYy5WaWV3SlNPTlYxMjFHcnBjQgriPwcSBXZpZXdzUgV2aWV3cyKZKQoQVmlld0pTT05WMTIxR3JwYxIXCgJpZBgBIAEoCUIH4
  j8EEgJpZFICaWQSLQoKc2hvcnRfbmFtZRgCIAEoCUIO4j8LEglzaG9ydE5hbWVSCXNob3J0TmFtZRIyCgtkZXNjcmlwdGlvbhgDI
  AEoCUIQ4j8NEgtkZXNjcmlwdGlvblILZGVzY3JpcHRpb24SKgoJaXNfcHVibGljGAQgASgIQg3iPwoSCGlzUHVibGljUghpc1B1Y
  mxpYxIgCgVhbGlhcxgFIAEoCUIK4j8HEgVhbGlhc1IFYWxpYXMSWgobaGlkZV9tZXRhZGF0YV9pZl9hbGlhc191c2VkGAYgASgIQ
  hziPxkSF2hpZGVNZXRhZGF0YUlmQWxpYXNVc2VkUhdoaWRlTWV0YWRhdGFJZkFsaWFzVXNlZBI6Cg9jYW5fYWRkX2NvbW1lbnQYB
  yABKAhCEuI/DxINY2FuQWRkQ29tbWVudFINY2FuQWRkQ29tbWVudBJZChpjYW5fYWRkX2NvcnBvcmF0ZV9sb2NhdGlvbhgIIAEoC
  EIc4j8ZEhdjYW5BZGRDb3Jwb3JhdGVMb2NhdGlvblIXY2FuQWRkQ29ycG9yYXRlTG9jYXRpb24SNAoNY2FuX2FkZF9pbWFnZRgJI
  AEoCEIQ4j8NEgtjYW5BZGRJbWFnZVILY2FuQWRkSW1hZ2USPgoRY2FuX2FkZF9pbWFnZV91cmwYCiABKAhCE+I/EBIOY2FuQWRkS
  W1hZ2VVcmxSDmNhbkFkZEltYWdlVXJsEj4KEWNhbl9hZGRfbW9yZV9pbmZvGAsgASgIQhPiPxASDmNhbkFkZE1vcmVJbmZvUg5jY
  W5BZGRNb3JlSW5mbxJaChtjYW5fYWRkX29wZW5fY29ycG9yYXRlc191cmwYDCABKAhCHOI/GRIXY2FuQWRkT3BlbkNvcnBvcmF0Z
  XNVcmxSF2NhbkFkZE9wZW5Db3Jwb3JhdGVzVXJsElYKGWNhbl9hZGRfcGh5c2ljYWxfbG9jYXRpb24YDSABKAhCG+I/GBIWY2FuQ
  WRkUGh5c2ljYWxMb2NhdGlvblIWY2FuQWRkUGh5c2ljYWxMb2NhdGlvbhJKChVjYW5fYWRkX3ByaXZhdGVfYWxpYXMYDiABKAhCF
  +I/FBISY2FuQWRkUHJpdmF0ZUFsaWFzUhJjYW5BZGRQcml2YXRlQWxpYXMSRwoUY2FuX2FkZF9wdWJsaWNfYWxpYXMYDyABKAhCF
  uI/ExIRY2FuQWRkUHVibGljQWxpYXNSEWNhbkFkZFB1YmxpY0FsaWFzEi4KC2Nhbl9hZGRfdGFnGBAgASgIQg7iPwsSCWNhbkFkZ
  FRhZ1IJY2FuQWRkVGFnEi4KC2Nhbl9hZGRfdXJsGBEgASgIQg7iPwsSCWNhbkFkZFVybFIJY2FuQWRkVXJsEj4KEWNhbl9hZGRfd
  2hlcmVfdGFnGBIgASgIQhPiPxASDmNhbkFkZFdoZXJlVGFnUg5jYW5BZGRXaGVyZVRhZxJDChJjYW5fZGVsZXRlX2NvbW1lbnQYE
  yABKAhCFeI/EhIQY2FuRGVsZXRlQ29tbWVudFIQY2FuRGVsZXRlQ29tbWVudBJiCh1jYW5fZGVsZXRlX2NvcnBvcmF0ZV9sb2Nhd
  GlvbhgUIAEoCEIf4j8cEhpjYW5EZWxldGVDb3Jwb3JhdGVMb2NhdGlvblIaY2FuRGVsZXRlQ29ycG9yYXRlTG9jYXRpb24SPQoQY
  2FuX2RlbGV0ZV9pbWFnZRgVIAEoCEIT4j8QEg5jYW5EZWxldGVJbWFnZVIOY2FuRGVsZXRlSW1hZ2USXwocY2FuX2RlbGV0ZV9wa
  HlzaWNhbF9sb2NhdGlvbhgWIAEoCEIe4j8bEhljYW5EZWxldGVQaHlzaWNhbExvY2F0aW9uUhljYW5EZWxldGVQaHlzaWNhbExvY
  2F0aW9uEjcKDmNhbl9kZWxldGVfdGFnGBcgASgIQhHiPw4SDGNhbkRlbGV0ZVRhZ1IMY2FuRGVsZXRlVGFnEkcKFGNhbl9kZWxld
  GVfd2hlcmVfdGFnGBggASgIQhbiPxMSEWNhbkRlbGV0ZVdoZXJlVGFnUhFjYW5EZWxldGVXaGVyZVRhZxJNChZjYW5fZWRpdF9vd
  25lcl9jb21tZW50GBkgASgIQhjiPxUSE2NhbkVkaXRPd25lckNvbW1lbnRSE2NhbkVkaXRPd25lckNvbW1lbnQSXQocY2FuX3NlZ
  V9iYW5rX2FjY291bnRfYmFsYW5jZRgaIAEoCEId4j8aEhhjYW5TZWVCYW5rQWNjb3VudEJhbGFuY2VSGGNhblNlZUJhbmtBY2Nvd
  W50QmFsYW5jZRJhCh5jYW5fc2VlX2JhbmtfYWNjb3VudF9iYW5rX25hbWUYGyABKAhCHuI/GxIZY2FuU2VlQmFua0FjY291bnRCY
  W5rTmFtZVIZY2FuU2VlQmFua0FjY291bnRCYW5rTmFtZRJgCh1jYW5fc2VlX2JhbmtfYWNjb3VudF9jdXJyZW5jeRgcIAEoCEIe4
  j8bEhljYW5TZWVCYW5rQWNjb3VudEN1cnJlbmN5UhljYW5TZWVCYW5rQWNjb3VudEN1cnJlbmN5ElQKGWNhbl9zZWVfYmFua19hY
  2NvdW50X2liYW4YHSABKAhCGuI/FxIVY2FuU2VlQmFua0FjY291bnRJYmFuUhVjYW5TZWVCYW5rQWNjb3VudEliYW4SVwoaY2FuX
  3NlZV9iYW5rX2FjY291bnRfbGFiZWwYHiABKAhCG+I/GBIWY2FuU2VlQmFua0FjY291bnRMYWJlbFIWY2FuU2VlQmFua0FjY291b
  nRMYWJlbBJ/CihjYW5fc2VlX2JhbmtfYWNjb3VudF9uYXRpb25hbF9pZGVudGlmaWVyGB8gASgIQijiPyUSI2NhblNlZUJhbmtBY
  2NvdW50TmF0aW9uYWxJZGVudGlmaWVyUiNjYW5TZWVCYW5rQWNjb3VudE5hdGlvbmFsSWRlbnRpZmllchJaChtjYW5fc2VlX2Jhb
  mtfYWNjb3VudF9udW1iZXIYICABKAhCHOI/GRIXY2FuU2VlQmFua0FjY291bnROdW1iZXJSF2NhblNlZUJhbmtBY2NvdW50TnVtY
  mVyEloKG2Nhbl9zZWVfYmFua19hY2NvdW50X293bmVycxghIAEoCEIc4j8ZEhdjYW5TZWVCYW5rQWNjb3VudE93bmVyc1IXY2FuU
  2VlQmFua0FjY291bnRPd25lcnMSYQoeY2FuX3NlZV9iYW5rX2FjY291bnRfc3dpZnRfYmljGCIgASgIQh7iPxsSGWNhblNlZUJhb
  mtBY2NvdW50U3dpZnRCaWNSGWNhblNlZUJhbmtBY2NvdW50U3dpZnRCaWMSVAoZY2FuX3NlZV9iYW5rX2FjY291bnRfdHlwZRgjI
  AEoCEIa4j8XEhVjYW5TZWVCYW5rQWNjb3VudFR5cGVSFWNhblNlZUJhbmtBY2NvdW50VHlwZRI9ChBjYW5fc2VlX2NvbW1lbnRzG
  CQgASgIQhPiPxASDmNhblNlZUNvbW1lbnRzUg5jYW5TZWVDb21tZW50cxJZChpjYW5fc2VlX2NvcnBvcmF0ZV9sb2NhdGlvbhglI
  AEoCEIc4j8ZEhdjYW5TZWVDb3Jwb3JhdGVMb2NhdGlvblIXY2FuU2VlQ29ycG9yYXRlTG9jYXRpb24SPgoRY2FuX3NlZV9pbWFnZ
  V91cmwYJiABKAhCE+I/EBIOY2FuU2VlSW1hZ2VVcmxSDmNhblNlZUltYWdlVXJsEjcKDmNhbl9zZWVfaW1hZ2VzGCcgASgIQhHiP
  w4SDGNhblNlZUltYWdlc1IMY2FuU2VlSW1hZ2VzEj4KEWNhbl9zZWVfbW9yZV9pbmZvGCggASgIQhPiPxASDmNhblNlZU1vcmVJb
  mZvUg5jYW5TZWVNb3JlSW5mbxJaChtjYW5fc2VlX29wZW5fY29ycG9yYXRlc191cmwYKSABKAhCHOI/GRIXY2FuU2VlT3BlbkNvc
  nBvcmF0ZXNVcmxSF2NhblNlZU9wZW5Db3Jwb3JhdGVzVXJsEmQKH2Nhbl9zZWVfb3RoZXJfYWNjb3VudF9iYW5rX25hbWUYKiABK
  AhCH+I/HBIaY2FuU2VlT3RoZXJBY2NvdW50QmFua05hbWVSGmNhblNlZU90aGVyQWNjb3VudEJhbmtOYW1lElcKGmNhbl9zZWVfb
  3RoZXJfYWNjb3VudF9pYmFuGCsgASgIQhviPxgSFmNhblNlZU90aGVyQWNjb3VudEliYW5SFmNhblNlZU90aGVyQWNjb3VudEliY
  W4SVwoaY2FuX3NlZV9vdGhlcl9hY2NvdW50X2tpbmQYLCABKAhCG+I/GBIWY2FuU2VlT3RoZXJBY2NvdW50S2luZFIWY2FuU2VlT
  3RoZXJBY2NvdW50S2luZBJjCh5jYW5fc2VlX290aGVyX2FjY291bnRfbWV0YWRhdGEYLSABKAhCH+I/HBIaY2FuU2VlT3RoZXJBY
  2NvdW50TWV0YWRhdGFSGmNhblNlZU90aGVyQWNjb3VudE1ldGFkYXRhEoIBCiljYW5fc2VlX290aGVyX2FjY291bnRfbmF0aW9uY
  WxfaWRlbnRpZmllchguIAEoCEIp4j8mEiRjYW5TZWVPdGhlckFjY291bnROYXRpb25hbElkZW50aWZpZXJSJGNhblNlZU90aGVyQ
  WNjb3VudE5hdGlvbmFsSWRlbnRpZmllchJdChxjYW5fc2VlX290aGVyX2FjY291bnRfbnVtYmVyGC8gASgIQh3iPxoSGGNhblNlZ
  U90aGVyQWNjb3VudE51bWJlclIYY2FuU2VlT3RoZXJBY2NvdW50TnVtYmVyEmQKH2Nhbl9zZWVfb3RoZXJfYWNjb3VudF9zd2lmd
  F9iaWMYMCABKAhCH+I/HBIaY2FuU2VlT3RoZXJBY2NvdW50U3dpZnRCaWNSGmNhblNlZU90aGVyQWNjb3VudFN3aWZ0QmljEkoKF
  WNhbl9zZWVfb3duZXJfY29tbWVudBgxIAEoCEIX4j8UEhJjYW5TZWVPd25lckNvbW1lbnRSEmNhblNlZU93bmVyQ29tbWVudBJWC
  hljYW5fc2VlX3BoeXNpY2FsX2xvY2F0aW9uGDIgASgIQhviPxgSFmNhblNlZVBoeXNpY2FsTG9jYXRpb25SFmNhblNlZVBoeXNpY
  2FsTG9jYXRpb24SSgoVY2FuX3NlZV9wcml2YXRlX2FsaWFzGDMgASgIQhfiPxQSEmNhblNlZVByaXZhdGVBbGlhc1ISY2FuU2VlU
  HJpdmF0ZUFsaWFzEkcKFGNhbl9zZWVfcHVibGljX2FsaWFzGDQgASgIQhbiPxMSEWNhblNlZVB1YmxpY0FsaWFzUhFjYW5TZWVQd
  WJsaWNBbGlhcxIxCgxjYW5fc2VlX3RhZ3MYNSABKAhCD+I/DBIKY2FuU2VlVGFnc1IKY2FuU2VlVGFncxJZChpjYW5fc2VlX3RyY
  W5zYWN0aW9uX2Ftb3VudBg2IAEoCEIc4j8ZEhdjYW5TZWVUcmFuc2FjdGlvbkFtb3VudFIXY2FuU2VlVHJhbnNhY3Rpb25BbW91b
  nQSXAobY2FuX3NlZV90cmFuc2FjdGlvbl9iYWxhbmNlGDcgASgIQh3iPxoSGGNhblNlZVRyYW5zYWN0aW9uQmFsYW5jZVIYY2FuU
  2VlVHJhbnNhY3Rpb25CYWxhbmNlEl8KHGNhbl9zZWVfdHJhbnNhY3Rpb25fY3VycmVuY3kYOCABKAhCHuI/GxIZY2FuU2VlVHJhb
  nNhY3Rpb25DdXJyZW5jeVIZY2FuU2VlVHJhbnNhY3Rpb25DdXJyZW5jeRJoCh9jYW5fc2VlX3RyYW5zYWN0aW9uX2Rlc2NyaXB0a
  W9uGDkgASgIQiHiPx4SHGNhblNlZVRyYW5zYWN0aW9uRGVzY3JpcHRpb25SHGNhblNlZVRyYW5zYWN0aW9uRGVzY3JpcHRpb24SZ
  gofY2FuX3NlZV90cmFuc2FjdGlvbl9maW5pc2hfZGF0ZRg6IAEoCEIg4j8dEhtjYW5TZWVUcmFuc2FjdGlvbkZpbmlzaERhdGVSG
  2NhblNlZVRyYW5zYWN0aW9uRmluaXNoRGF0ZRJfChxjYW5fc2VlX3RyYW5zYWN0aW9uX21ldGFkYXRhGDsgASgIQh7iPxsSGWNhb
  lNlZVRyYW5zYWN0aW9uTWV0YWRhdGFSGWNhblNlZVRyYW5zYWN0aW9uTWV0YWRhdGESeQomY2FuX3NlZV90cmFuc2FjdGlvbl9vd
  Ghlcl9iYW5rX2FjY291bnQYPCABKAhCJuI/IxIhY2FuU2VlVHJhbnNhY3Rpb25PdGhlckJhbmtBY2NvdW50UiFjYW5TZWVUcmFuc
  2FjdGlvbk90aGVyQmFua0FjY291bnQSYwoeY2FuX3NlZV90cmFuc2FjdGlvbl9zdGFydF9kYXRlGD0gASgIQh/iPxwSGmNhblNlZ
  VRyYW5zYWN0aW9uU3RhcnREYXRlUhpjYW5TZWVUcmFuc2FjdGlvblN0YXJ0RGF0ZRJ2CiVjYW5fc2VlX3RyYW5zYWN0aW9uX3Roa
  XNfYmFua19hY2NvdW50GD4gASgIQiXiPyISIGNhblNlZVRyYW5zYWN0aW9uVGhpc0JhbmtBY2NvdW50UiBjYW5TZWVUcmFuc2Fjd
  GlvblRoaXNCYW5rQWNjb3VudBJTChhjYW5fc2VlX3RyYW5zYWN0aW9uX3R5cGUYPyABKAhCGuI/FxIVY2FuU2VlVHJhbnNhY3Rpb
  25UeXBlUhVjYW5TZWVUcmFuc2FjdGlvblR5cGUSLgoLY2FuX3NlZV91cmwYQCABKAhCDuI/CxIJY2FuU2VlVXJsUgljYW5TZWVVc
  mwSPgoRY2FuX3NlZV93aGVyZV90YWcYQSABKAhCE+I/EBIOY2FuU2VlV2hlcmVUYWdSDmNhblNlZVdoZXJlVGFnIl4KDEFjY291b
  nRzR3JwYxJOCghhY2NvdW50cxgBIAMoCzIjLmNvZGUub2JwLmdycGMuQmFzaWNBY2NvdW50SlNPTkdycGNCDeI/ChIIYWNjb3Vud
  HNSCGFjY291bnRzIu4CChRCYXNpY0FjY291bnRKU09OR3JwYxIXCgJpZBgBIAEoCUIH4j8EEgJpZFICaWQSIAoFbGFiZWwYAiABK
  AlCCuI/BxIFbGFiZWxSBWxhYmVsEiQKB2JhbmtfaWQYAyABKAlCC+I/CBIGYmFua0lkUgZiYW5rSWQSbwoPdmlld3NfYXZhaWxhY
  mxlGAQgAygLMjEuY29kZS5vYnAuZ3JwYy5CYXNpY0FjY291bnRKU09OR3JwYy5CYXNpY1ZpZXdKc29uQhPiPxASDnZpZXdzQXZha
  WxhYmxlUg52aWV3c0F2YWlsYWJsZRqDAQoNQmFzaWNWaWV3SnNvbhIXCgJpZBgBIAEoCUIH4j8EEgJpZFICaWQSLQoKc2hvcnRfb
  mFtZRgCIAEoCUIO4j8LEglzaG9ydE5hbWVSCXNob3J0TmFtZRIqCglpc19wdWJsaWMYAyABKAhCDeI/ChIIaXNQdWJsaWNSCGlzU
  HVibGljIlMKCkJhbmtJZEdycGMSIAoFdmFsdWUYASABKAlCCuI/BxIFdmFsdWVSBXZhbHVlEiMKBnVzZXJJZBgCIAEoCUIL4j8IE
  gZ1c2VySWRSBnVzZXJJZCJcChBCYW5rSWRVc2VySWRHcnBjEiMKBmJhbmtJZBgBIAEoCUIL4j8IEgZiYW5rSWRSBmJhbmtJZBIjC
  gZ1c2VySWQYAiABKAlCC+I/CBIGdXNlcklkUgZ1c2VySWQiMQoNQWNjb3VudElkR3JwYxIgCgV2YWx1ZRgBIAEoCUIK4j8HEgV2Y
  Wx1ZVIFdmFsdWUi3hEKHENvcmVUcmFuc2FjdGlvbnNKc29uVjMwMEdycGMSfgoMdHJhbnNhY3Rpb25zGAEgAygLMkcuY29kZS5vY
  nAuZ3JwYy5Db3JlVHJhbnNhY3Rpb25zSnNvblYzMDBHcnBjLkNvcmVUcmFuc2FjdGlvbkpzb25WMzAwR3JwY0IR4j8OEgx0cmFuc
  2FjdGlvbnNSDHRyYW5zYWN0aW9ucxqnAwobQ29yZVRyYW5zYWN0aW9uSnNvblYzMDBHcnBjEhcKAmlkGAEgASgJQgfiPwQSAmlkU
  gJpZBJ4Cgx0aGlzX2FjY291bnQYAiABKAsyQy5jb2RlLm9icC5ncnBjLkNvcmVUcmFuc2FjdGlvbnNKc29uVjMwMEdycGMuVGhpc
  0FjY291bnRKc29uVjMwMEdycGNCEOI/DRILdGhpc0FjY291bnRSC3RoaXNBY2NvdW50EoABCg1vdGhlcl9hY2NvdW50GAMgASgLM
  kguY29kZS5vYnAuZ3JwYy5Db3JlVHJhbnNhY3Rpb25zSnNvblYzMDBHcnBjLkNvcmVDb3VudGVycGFydHlKc29uVjMwMEdycGNCE
  eI/DhIMb3RoZXJBY2NvdW50UgxvdGhlckFjY291bnQScgoHZGV0YWlscxgEIAEoCzJKLmNvZGUub2JwLmdycGMuQ29yZVRyYW5zY
  WN0aW9uc0pzb25WMzAwR3JwYy5Db3JlVHJhbnNhY3Rpb25EZXRhaWxzSlNPTkdycGNCDOI/CRIHZGV0YWlsc1IHZGV0YWlscxpfC
  hVBY2NvdW50SG9sZGVySlNPTkdycGMSHQoEbmFtZRgBIAEoCUIJ4j8GEgRuYW1lUgRuYW1lEicKCGlzX2FsaWFzGAIgASgIQgziP
  wkSB2lzQWxpYXNSB2lzQWxpYXMaaQoaQWNjb3VudFJvdXRpbmdKc29uVjEyMUdycGMSIwoGc2NoZW1lGAEgASgJQgviPwgSBnNja
  GVtZVIGc2NoZW1lEiYKB2FkZHJlc3MYAiABKAlCDOI/CRIHYWRkcmVzc1IHYWRkcmVzcxpmChdCYW5rUm91dGluZ0pzb25WMTIxR
  3JwYxIjCgZzY2hlbWUYASABKAlCC+I/CBIGc2NoZW1lUgZzY2hlbWUSJgoHYWRkcmVzcxgCIAEoCUIM4j8JEgdhZGRyZXNzUgdhZ
  GRyZXNzGqEDChdUaGlzQWNjb3VudEpzb25WMzAwR3JwYxIXCgJpZBgBIAEoCUIH4j8EEgJpZFICaWQSeAoMYmFua19yb3V0aW5nG
  AIgASgLMkMuY29kZS5vYnAuZ3JwYy5Db3JlVHJhbnNhY3Rpb25zSnNvblYzMDBHcnBjLkJhbmtSb3V0aW5nSnNvblYxMjFHcnBjQ
  hDiPw0SC2JhbmtSb3V0aW5nUgtiYW5rUm91dGluZxKHAQoQYWNjb3VudF9yb3V0aW5ncxgDIAMoCzJGLmNvZGUub2JwLmdycGMuQ
  29yZVRyYW5zYWN0aW9uc0pzb25WMzAwR3JwYy5BY2NvdW50Um91dGluZ0pzb25WMTIxR3JwY0IU4j8REg9hY2NvdW50Um91dGluZ
  3NSD2FjY291bnRSb3V0aW5ncxJpCgdob2xkZXJzGAQgAygLMkEuY29kZS5vYnAuZ3JwYy5Db3JlVHJhbnNhY3Rpb25zSnNvblYzM
  DBHcnBjLkFjY291bnRIb2xkZXJKU09OR3JwY0IM4j8JEgdob2xkZXJzUgdob2xkZXJzGqMDChxDb3JlQ291bnRlcnBhcnR5SnNvb
  lYzMDBHcnBjEhcKAmlkGAEgASgJQgfiPwQSAmlkUgJpZBJmCgZob2xkZXIYAiABKAsyQS5jb2RlLm9icC5ncnBjLkNvcmVUcmFuc
  2FjdGlvbnNKc29uVjMwMEdycGMuQWNjb3VudEhvbGRlckpTT05HcnBjQgviPwgSBmhvbGRlclIGaG9sZGVyEngKDGJhbmtfcm91d
  GluZxgDIAEoCzJDLmNvZGUub2JwLmdycGMuQ29yZVRyYW5zYWN0aW9uc0pzb25WMzAwR3JwYy5CYW5rUm91dGluZ0pzb25WMTIxR
  3JwY0IQ4j8NEgtiYW5rUm91dGluZ1ILYmFua1JvdXRpbmcShwEKEGFjY291bnRfcm91dGluZ3MYBCADKAsyRi5jb2RlLm9icC5nc
  nBjLkNvcmVUcmFuc2FjdGlvbnNKc29uVjMwMEdycGMuQWNjb3VudFJvdXRpbmdKc29uVjEyMUdycGNCFOI/ERIPYWNjb3VudFJvd
  XRpbmdzUg9hY2NvdW50Um91dGluZ3MaawoZQW1vdW50T2ZNb25leUpzb25WMTIxR3JwYxIpCghjdXJyZW5jeRgBIAEoCUIN4j8KE
  ghjdXJyZW5jeVIIY3VycmVuY3kSIwoGYW1vdW50GAIgASgJQgviPwgSBmFtb3VudFIGYW1vdW50GqgDCh5Db3JlVHJhbnNhY3Rpb
  25EZXRhaWxzSlNPTkdycGMSHQoEdHlwZRgBIAEoCUIJ4j8GEgR0eXBlUgR0eXBlEjIKC2Rlc2NyaXB0aW9uGAIgASgJQhDiPw0SC
  2Rlc2NyaXB0aW9uUgtkZXNjcmlwdGlvbhIjCgZwb3N0ZWQYAyABKAlCC+I/CBIGcG9zdGVkUgZwb3N0ZWQSLAoJY29tcGxldGVkG
  AQgASgJQg7iPwsSCWNvbXBsZXRlZFIJY29tcGxldGVkEncKC25ld19iYWxhbmNlGAUgASgLMkUuY29kZS5vYnAuZ3JwYy5Db3JlV
  HJhbnNhY3Rpb25zSnNvblYzMDBHcnBjLkFtb3VudE9mTW9uZXlKc29uVjEyMUdycGNCD+I/DBIKbmV3QmFsYW5jZVIKbmV3QmFsY
  W5jZRJnCgV2YWx1ZRgGIAEoCzJFLmNvZGUub2JwLmdycGMuQ29yZVRyYW5zYWN0aW9uc0pzb25WMzAwR3JwYy5BbW91bnRPZk1vb
  mV5SnNvblYxMjFHcnBjQgriPwcSBXZhbHVlUgV2YWx1ZSJrChZCYW5rSWRBbmRBY2NvdW50SWRHcnBjEiMKBmJhbmtJZBgBIAEoC
  UIL4j8IEgZiYW5rSWRSBmJhbmtJZBIsCglhY2NvdW50SWQYAiABKAlCDuI/CxIJYWNjb3VudElkUglhY2NvdW50SWQilgEKHEJhb
  mtJZEFjY291bnRJZEFuZFVzZXJJZEdycGMSIwoGYmFua0lkGAEgASgJQgviPwgSBmJhbmtJZFIGYmFua0lkEiwKCWFjY291bnRJZ
  BgCIAEoCUIO4j8LEglhY2NvdW50SWRSCWFjY291bnRJZBIjCgZ1c2VySWQYAyABKAlCC+I/CBIGdXNlcklkUgZ1c2VySWQigQcKH
  EFjY291bnRzQmFsYW5jZXNWMzEwSnNvbkdycGMSbQoIYWNjb3VudHMYASADKAsyQi5jb2RlLm9icC5ncnBjLkFjY291bnRzQmFsY
  W5jZXNWMzEwSnNvbkdycGMuQWNjb3VudEJhbGFuY2VWMzEwR3JwY0IN4j8KEghhY2NvdW50c1IIYWNjb3VudHMSewoPb3ZlcmFsb
  F9iYWxhbmNlGAIgASgLMj0uY29kZS5vYnAuZ3JwYy5BY2NvdW50c0JhbGFuY2VzVjMxMEpzb25HcnBjLkFtb3VudE9mTW9uZXlHc
  nBjQhPiPxASDm92ZXJhbGxCYWxhbmNlUg5vdmVyYWxsQmFsYW5jZRJJChRvdmVyYWxsX2JhbGFuY2VfZGF0ZRgDIAEoCUIX4j8UE
  hJvdmVyYWxsQmFsYW5jZURhdGVSEm92ZXJhbGxCYWxhbmNlRGF0ZRpjChFBbW91bnRPZk1vbmV5R3JwYxIpCghjdXJyZW5jeRgBI
  AEoCUIN4j8KEghjdXJyZW5jeVIIY3VycmVuY3kSIwoGYW1vdW50GAIgASgJQgviPwgSBmFtb3VudFIGYW1vdW50GmEKEkFjY291b
  nRSb3V0aW5nR3JwYxIjCgZzY2hlbWUYASABKAlCC+I/CBIGc2NoZW1lUgZzY2hlbWUSJgoHYWRkcmVzcxgCIAEoCUIM4j8JEgdhZ
  GRyZXNzUgdhZGRyZXNzGuECChZBY2NvdW50QmFsYW5jZVYzMTBHcnBjEhcKAmlkGAEgASgJQgfiPwQSAmlkUgJpZBIgCgVsYWJlb
  BgCIAEoCUIK4j8HEgVsYWJlbFIFbGFiZWwSJAoHYmFua19pZBgDIAEoCUIL4j8IEgZiYW5rSWRSBmJhbmtJZBJ/ChBhY2NvdW50X
  3JvdXRpbmdzGAQgAygLMj4uY29kZS5vYnAuZ3JwYy5BY2NvdW50c0JhbGFuY2VzVjMxMEpzb25HcnBjLkFjY291bnRSb3V0aW5nR
  3JwY0IU4j8REg9hY2NvdW50Um91dGluZ3NSD2FjY291bnRSb3V0aW5ncxJlCgdiYWxhbmNlGAUgASgLMj0uY29kZS5vYnAuZ3JwY
  y5BY2NvdW50c0JhbGFuY2VzVjMxMEpzb25HcnBjLkFtb3VudE9mTW9uZXlHcnBjQgziPwkSB2JhbGFuY2VSB2JhbGFuY2UymAMKC
  k9icFNlcnZpY2USRQoIZ2V0QmFua3MSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaHy5jb2RlLm9icC5ncnBjLkJhbmtzSnNvbjQwM
  EdycGMiABJdChtnZXRQcml2YXRlQWNjb3VudHNBdE9uZUJhbmsSHy5jb2RlLm9icC5ncnBjLkJhbmtJZFVzZXJJZEdycGMaGy5jb
  2RlLm9icC5ncnBjLkFjY291bnRzR3JwYyIAEmMKF2dldEJhbmtBY2NvdW50c0JhbGFuY2VzEhkuY29kZS5vYnAuZ3JwYy5CYW5rS
  WRHcnBjGisuY29kZS5vYnAuZ3JwYy5BY2NvdW50c0JhbGFuY2VzVjMxMEpzb25HcnBjIgASfwohZ2V0Q29yZVRyYW5zYWN0aW9uc
  0ZvckJhbmtBY2NvdW50EisuY29kZS5vYnAuZ3JwYy5CYW5rSWRBY2NvdW50SWRBbmRVc2VySWRHcnBjGisuY29kZS5vYnAuZ3JwY
  y5Db3JlVHJhbnNhY3Rpb25zSnNvblYzMDBHcnBjIgBiBnByb3RvMw=="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.google.protobuf.empty.EmptyProto.javaDescriptor,
      com.google.protobuf.timestamp.TimestampProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}