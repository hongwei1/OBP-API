{
  "resource_docs": [
    {
      "operation_id": "OBPv2.1.0-enableDisableConsumers",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "enableDisableConsumers"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v2.1.0/management/consumers/CONSUMER_ID",
      "summary": "启用或禁用消费者",
      "description": "<p>启用/禁用由CONSUMER_ID指定的使用者。 </p>",
      "description_markdown": "Enable/Disable a Consumer specified by CONSUMER_ID.\n\n",
      "example_request_body": {
        "enabled": false
      },
      "success_response_body": {
        "enabled": false
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Consumer",
        "API"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanEnableConsumers",
          "requires_bank_id": false
        },
        {
          "role": "CanDisableConsumers",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/consumers/CONSUMER_ID"
    },
    {
      "operation_id": "OBPv3.1.0-getTopAPIs",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getTopAPIs"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/metrics/top-apis",
      "summary": "获取顶级API",
      "description": "<p>获取有关最受欢迎的API的指标。例如：总计数，响应时间（以毫秒为单位）等。 </p><p>应该能够过滤以下字段</p><p>例如：/management/metrics/top-apis?from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-09-19T02:31:05.000Z&amp;consumer_id=5 <br /> ＆user_id = 66214b8e-259e-44ad-8868-3eb47be70646＆implemented_by_partial_function = getTransactionsForBankAccount <br /> ＆implemented_in_version = v3.0.0＆url = / obp / v3.0.0 / banks / gh.29.uk / accounts / 8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0 / owner / transactions <br /> ＆verb = GET＆anon = false＆app_name = MapperPostman <br /> ＆exclude_app_names = API-EXPLORER，API-Manager，SOFI，空</p><p> 1个from_date（默认为当前日期的前一天）：例如：from_date = 2017-09-19T02：31：05.000Z </p><p> 2 to_date（默认为当前日期），例如：to_date = 2017-09-19T02：31：05.000Z </p><p> 3 Consumer_id（如果为null，则忽略） </p><p> 4 user_id（如果为null，则忽略） </p><p> 5 anon（如果忽略null）仅支持两个值：true（返回user_id为null的位置）或false（返回user_id不为null的位置。） </p><p> 6 url（如果为null，则忽略），注意：不能包含&#39;＆&#39;。 </p><p> 7 app_name（如果为null，则忽略） </p><p> 8 Implemented_by_partial_function（如果为null，则忽略）， </p><p> 9 Implemented_in_version（如果为null则忽略） </p><p> 10个动词（如果为null，则忽略） </p><p> 11correlation_id（如果为null，则忽略） </p><p> 12个持续时间（如果忽略null）非数字字符将被忽略</p><p> 13 exclude_app_names（如果为null则忽略）。例如：＆exclude_app_names = API-EXPLORER，API-Manager，SOFI，null </p><p> 14 exclude_url_patterns（如果为null，则忽略）。您可以设计自己的SQL NOT LIKE模式。例如：＆exclude_url_patterns =％management / metrics％，％management / aggregate-metrics％ </p><p> 15 exclude_implemented_by_partial_functions（如果为null则忽略）。例如：＆exclude_implemented_by_partial_functions = getMetrics，getConnectorMetrics，getAggregateMetrics </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get metrics about the most popular APIs. e.g.: total count, response time (in ms), etc.\n\nShould be able to filter on the following fields\n\neg: /management/metrics/top-apis?from_date=2017-09-19T02:31:05.000Z&to_date=2017-09-19T02:31:05.000Z&consumer_id=5\n&user_id=66214b8e-259e-44ad-8868-3eb47be70646&implemented_by_partial_function=getTransactionsForBankAccount\n&implemented_in_version=v3.0.0&url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions\n&verb=GET&anon=false&app_name=MapperPostman\n&exclude_app_names=API-EXPLORER,API-Manager,SOFI,null\n\n1 from_date (defaults to the day before the current date): eg:from_date=2017-09-19T02:31:05.000Z\n\n2 to_date (defaults to the current date) eg:to_date=2017-09-19T02:31:05.000Z\n\n3 consumer_id  (if null ignore)\n\n4 user_id (if null ignore)\n\n5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)\n\n6 url (if null ignore), note: can not contain '&'.\n\n7 app_name (if null ignore)\n\n8 implemented_by_partial_function (if null ignore),\n\n9 implemented_in_version (if null ignore)\n\n10 verb (if null ignore)\n\n11 correlation_id (if null ignore)\n\n12 duration (if null ignore) non digit chars will be silently omitted\n\n13 exclude_app_names (if null ignore).eg: &exclude_app_names=API-EXPLORER,API-Manager,SOFI,null\n\n14 exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE pattern. eg: &exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%\n\n15 exclude_implemented_by_partial_functions (if null ignore).eg: &exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics\n\nAuthentication is Mandatory\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "top_apis": [
          {
            "count": 7076,
            "Implemented_by_partial_function": "getBanks",
            "implemented_in_version": "v1.2.1"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10016: Incorrect filter Parameters in URL. ",
        "OBP-30042: Could not get the top apis from database.  ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Metric",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "top_apis": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "implemented_in_version": {
                  "type": "string"
                },
                "Implemented_by_partial_function": {
                  "type": "string"
                },
                "count": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanReadMetrics",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/metrics/top-apis"
    },
    {
      "operation_id": "OBPv3.1.0-createProduct",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createProduct"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/products/PRODUCT_CODE",
      "summary": "创建产品",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Create or Update Product for the Bank.\n\n\nTypical Super Family values / Asset classes are:\n\nDebt\nEquity\nFX\nCommodity\nDerivative\n\n\n\nProduct hiearchy vs Product Collections:\n\n* You can define a hierarchy of products - so that a child Product inherits attributes of its parent Product -  using the parent_product_code in Product.\n\n* You can define a collection (also known as baskets or buckets) of products using Product Collections.\n\n      \n\n\nAuthentication is Mandatory\n\n\n",
      "example_request_body": {
        "bank_id": "GENODEM1GLS",
        "name": "product name",
        "parent_product_code": "parent product name",
        "category": "category",
        "family": "family",
        "super_family": "super family",
        "more_info_url": "www.example.com/prod1/more-info.html",
        "details": "Details",
        "description": "Description",
        "meta": {
          "license": {
            "id": "5",
            "name": "TESOBE"
          }
        }
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "code": "product_code",
        "parent_product_code": "parent",
        "name": "product name",
        "category": "category",
        "family": "family",
        "super_family": "super family",
        "more_info_url": "www.example.com/prod1/more-info.html",
        "details": "Details",
        "description": "Description",
        "meta": {
          "license": {
            "id": "5",
            "name": "TESOBE"
          }
        },
        "product_attributes": [
          {
            "product_code": "saving1",
            "product_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "name": "OVERDRAFT_START_DATE",
            "type": "DATE_WITH_DAY",
            "value": "2012-04-23"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Product"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "super_family": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "more_info_url": {
            "type": "string"
          },
          "family": {
            "type": "string"
          },
          "parent_product_code": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "super_family": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "product_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "product_attribute_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                }
              }
            }
          },
          "description": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "parent_product_code": {
            "type": "string"
          },
          "more_info_url": {
            "type": "string"
          },
          "family": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateProduct",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateProductAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/products/PRODUCT_CODE"
    },
    {
      "operation_id": "OBPv4.0.0-getCustomersByCustomerPhoneNumber",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCustomersByCustomerPhoneNumber"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/search/customers/mobile-phone-number",
      "summary": "按MOBILE_PHONE_NUMBER获取客户",
      "description": "<p>获取由MOBILE_PHONE_NUMBER指定的客户。 </p><p>通常将两个通配符与LIKE运算符结合使用： <br /> ％-百分号代表零个，一个或多个字符<br /> _-下划线表示单个字符<br />例如{“ customer_phone_number”：“％381％”}列出所有包含381序列的号码</p><p>身份验证是强制性的</p>",
      "description_markdown": "Gets the Customers specified by MOBILE_PHONE_NUMBER.\n\nThere are two wildcards often used in conjunction with the LIKE operator:\n    % - The percent sign represents zero, one, or multiple characters\n    _ - The underscore represents a single character\nFor example {\"customer_phone_number\":\"%381%\"} lists all numbers which contain 381 sequence\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "mobile_phone_number": "+44 07972 444 876"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "eveline@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "2017-09-18T22:00:00Z"
        },
        "date_of_birth": "2017-09-18T22:00:00Z",
        "relationship_status": "single",
        "dependants": 10,
        "dob_of_dependants": [
          "2017-09-18T22:00:00Z"
        ],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "10"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2017-09-18T22:00:00Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "KYC",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "mobile_phone_number": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "employment_status": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "rating": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "dependants": {
            "type": "integer"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/search/customers/mobile-phone-number"
    },
    {
      "operation_id": "OBPv2.0.0-elasticSearchMetrics",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "elasticSearchMetrics"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/search/metrics",
      "summary": "通过Elasticsearch搜索API指标。",
      "description": "<p>通过Elastic Search搜索对此API实例进行的API调用。 </p><p>需要登录。 </p><p>需要CanSearchMetrics授权才能搜索指标数据。 </p><p>参数： </p><p> esType-elasticsearch类型</p><p>简单查询： </p><p> q-plain_text_query </p><p> df-搜索的默认字段</p><p> sort-要排序的字段</p><p>大小-返回的匹配数，默认为10 </p><p> from-显示热门歌曲，起始于</p><p> json查询： </p><p>来源-JSON_query_（网址转义） </p><p>用法示例： </p><p> / search / metrics / q = findThis </p><p>要么： </p><p> / search / metrics / source = {“ query”：{“ query_string”：{“ query”：“ findThis”}}} </p><p>注意！！ </p><p>整个JSON查询字符串必须使用URL编码： </p><ul><li>对于{使用％7B </li><li>对于}，请使用％7D </li><li>对于：使用％3A </li><li>对于“使用％22 </li></ul><p>等等.. </p><p>仅q，source和esType传递给Elastic </p><p>弹性简单查询： <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\">https</a> : <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\">//www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a> </p><p>弹性JSON查询： <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html\">https</a> : <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html\">//www.elastic.co/guide/zh-CN/elasticsearch/reference/current/query-filter-context.html</a> </p>",
      "description_markdown": "\nSearch the API calls made to this API instance via Elastic Search.\n\nLogin is required.\n\nCanSearchMetrics entitlement is required to search metrics data.\n\n\nparameters:\n\n esType  - elasticsearch type\n\n simple query:\n\n q       - plain_text_query\n\n df      - default field to search\n\n sort    - field to sort on\n\n size    - number of hits returned, default 10\n\n from    - show hits starting from\n\n json query:\n\n source  - JSON_query_(URL-escaped)\n\n\nexample usage:\n\n /search/metrics/q=findThis\n\nor:\n\n /search/metrics/source={\"query\":{\"query_string\":{\"query\":\"findThis\"}}}\n\n\nNote!!\n\nThe whole JSON query string MUST be URL-encoded:\n\n* For {  use %7B\n* For }  use %7D\n* For : use %3A\n* For \" use %22\n\netc..\n\n\n\nOnly q, source and esType are passed to Elastic\n\nElastic simple query: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\n\nElastic JSON query: https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html\n\n\n        ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Metric",
        "API"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanSearchMetrics",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/search/metrics"
    },
    {
      "operation_id": "OBPv1.2.1-deleteTransactionNarrative",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteTransactionNarrative"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative",
      "summary": "删除叙述。",
      "description": "<p>删除事务TRANSACTION_ID的描述。 </p><p>如果视图不是公开的，则需要通过OAuth进行身份验证。 </p>",
      "description_markdown": "Deletes the description of the transaction TRANSACTION_ID.\n\nAuthentication via OAuth is required if the view is not public.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative"
    },
    {
      "operation_id": "OBPv4.0.0-createStandingOrder",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createStandingOrder"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/standing-order",
      "summary": "创建常规",
      "description": "<p>创建一个帐户的常规订单。 </p><p>当-&gt;频率= {&#39;YEARLY&#39;，&#39;MONTHLY，&#39;WEEKLY&#39;，&#39;BI-WEEKLY&#39;，DAILY&#39;} <br />当-&gt;详细信息= {&#39;FIRST_MONDAY&#39;，&#39;FIRST_DAY&#39;，&#39;LAST_DAY&#39;}} </p><p>身份验证是强制性的</p>",
      "description_markdown": "Create standing order for an account.\n\nwhen -> frequency = {‘YEARLY’,’MONTHLY, ‘WEEKLY’, ‘BI-WEEKLY’, DAILY’}\nwhen -> detail = { ‘FIRST_MONDAY’, ‘FIRST_DAY’, ‘LAST_DAY’}}\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "amount": {
          "currency": "EUR",
          "amount": "10"
        },
        "when": {
          "frequency": "YEARLY",
          "detail": "LAST_DAY"
        },
        "date_signed": "2017-09-18T22:00:00Z",
        "date_starts": "2017-09-18T22:00:00Z",
        "date_expires": "2017-09-18T22:00:00Z"
      },
      "success_response_body": {
        "standing_order_id": "aa0533bd-eb22-4bff-af75-d45240361b05",
        "bank_id": "GENODEM1GLS",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "amount": {
          "currency": "EUR",
          "amount": "10"
        },
        "date_signed": "2019-12-02T09:27:34Z",
        "date_starts": "2019-12-02T09:27:34Z",
        "date_expires": "2019-12-02T09:27:34Z",
        "date_cancelled": "2019-12-02T09:27:34Z",
        "active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. ",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-20057: User not found by userId.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Standing-Order",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "when": {
            "type": "object",
            "properties": {
              "detail": {
                "type": "string"
              },
              "frequency": {
                "type": "string"
              }
            }
          },
          "amount": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "standing_order_id": {
            "type": "string"
          },
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "counterparty_id": {
            "type": "string"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "date_cancelled": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "account_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/standing-order"
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyMoreInfo",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyMoreInfo"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/more_info",
      "summary": "删除其他银行帐户的更多信息。",
      "description": "",
      "description_markdown": "",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "the view does not allow deleting more info",
        "More Info cannot be deleted",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/more_info"
    },
    {
      "operation_id": "OBPv3.0.0-getEntitlementRequestsForCurrentUser",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getEntitlementRequestsForCurrentUser"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/my/entitlement-requests",
      "summary": "获取当前用户的权利请求。",
      "description": "<p>获取当前用户的权利请求。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get Entitlement Requests for the current User.\n\n\nAuthentication is Mandatory\n\n        ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "entitlement_requests": [
          {
            "entitlement_request_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
            "user": {
              "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
              "email": "eveline@example.com",
              "provider_id": "Chris",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith",
              "entitlements": {
                "list": [
                  {
                    "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
                    "role_name": "CanQueryOtherUser",
                    "bank_id": "GENODEM1GLS"
                  }
                ]
              }
            },
            "role_name": "CanQueryOtherUser",
            "bank_id": "GENODEM1GLS",
            "created": "2017-09-18T22:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20050: Current User is not a Super Admin!",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Role",
        "Entitlement",
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "entitlement_requests": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "entitlement_request_id": {
                  "type": "string"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "entitlements": {
                      "type": "object",
                      "properties": {
                        "list": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "bank_id": {
                                "type": "string"
                              },
                              "role_name": {
                                "type": "string"
                              },
                              "entitlement_id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider_id": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  }
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "role_name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/my/entitlement-requests"
    },
    {
      "operation_id": "OBPv1.2.1-addTransactionNarrative",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addTransactionNarrative"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative",
      "summary": "添加叙述。",
      "description": "<p>创建事务TRANSACTION_ID的描述。 </p><p>注意：与元数据的其他项目不同，每个事务在所有视图中只有一个“叙述”。 <br />如果您通过视图（例如view-x）设置叙述，则将通过view-y看到（只要view-y有权查看该叙述）。 </p><p>身份验证是可选的<br />如果视图不是公共的，则需要认证。 </p>",
      "description_markdown": "Creates a description of the transaction TRANSACTION_ID.\n\nNote: Unlike other items of metadata, there is only one \"narrative\" per transaction accross all views.\nIf you set narrative via a view e.g. view-x it will be seen via view-y (as long as view-y has permission to see the narrative).\n\nAuthentication is Optional\nAuthentication is required if the view is not public.\n",
      "example_request_body": {
        "narrative": "narative"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "narrative": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative"
    },
    {
      "operation_id": "OBPv4.0.0-deleteTagForViewOnAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteTagForViewOnAccount"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/metadata/tags/TAG_ID",
      "summary": "删除帐户标签。",
      "description": "<p>删除有关在<a href=\"#1_2_1-getViewsForBankAccount\">view</a>上创建的帐户ACCOUNT_ID的标签TAG_ID。 </p><p>身份验证是强制性的</p><p>由于标签与用户链接，因此需要进行身份验证。 </p>",
      "description_markdown": "Deletes the tag TAG_ID about the account ACCOUNT_ID made on [view](#1_2_1-getViewsForBankAccount).\n\nAuthentication is Mandatory\n\nAuthentication is required as the tag is linked with the user.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account-Metadata",
        "Account"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/metadata/tags/TAG_ID"
    },
    {
      "operation_id": "OBPv2.1.0-getMetrics",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "getMetrics"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.1.0/management/metrics",
      "summary": "获取指标",
      "description": "",
      "description_markdown": "Get the all metrics\n\nrequire CanReadMetrics role\n\nFilters Part 1.*filtering* (no wilde cards etc.) parameters to GET /management/metrics\n\nShould be able to filter on the following metrics fields\n\neg: /management/metrics?from_date=2017-09-19T02:31:05.000Z&to_date=2017-09-19T02:31:05.000Z&limit=50&offset=2\n\n1 from_date (defaults to one week before current date): eg:from_date=2017-09-19T02:31:05.000Z\n\n2 to_date (defaults to current date) eg:to_date=2017-09-19T02:31:05.000Z\n\n3 limit (for pagination: defaults to 50)  eg:limit=200\n\n4 offset (for pagination: zero index, defaults to 0) eg: offset=10\n\n5 sort_by (defaults to date field) eg: sort_by=date\n  possible values:\n    \"url\",\n    \"date\",\n    \"user_name\",\n    \"app_name\",\n    \"developer_email\",\n    \"implemented_by_partial_function\",\n    \"implemented_in_version\",\n    \"consumer_id\",\n    \"verb\"\n\n6 direction (defaults to date desc) eg: direction=desc\n\neg: /management/metrics?from_date=2017-09-19T02:31:05.000Z&to_date=2017-09-19T02:31:05.000Z&limit=10000&offset=0&anon=false&app_name=TeatApp&implemented_in_version=v2.1.0&verb=POST&user_id=c7b6cb47-cb96-4441-8801-35b57456753a&user_name=susan.uk.29@example.com&consumer_id=78\n\nOther filters:\n\n7 consumer_id  (if null ignore)\n\n8 user_id (if null ignore)\n\n9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)\n\n10 url (if null ignore), note: can not contain '&'.\n\n11 app_name (if null ignore)\n\n12 implemented_by_partial_function (if null ignore),\n\n13 implemented_in_version (if null ignore)\n\n14 verb (if null ignore)\n\n15 correlation_id (if null ignore)\n\n16 duration (if null ignore) non digit chars will be silently omitted\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "metrics": [
          {
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "url": "www.openbankproject.com",
            "date": "2017-09-18T22:00:00Z",
            "user_name": "OBP",
            "app_name": "SOFI",
            "developer_email": "eveline@example.com",
            "implemented_by_partial_function": "getBanks",
            "implemented_in_version": "v210",
            "consumer_id": "123",
            "verb": "get",
            "correlation_id": "v8ho6h5ivel3uq7a5zcnv0w1",
            "duration": 39
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Metric",
        "API"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "app_name": {
                  "type": "string"
                },
                "implemented_in_version": {
                  "type": "string"
                },
                "consumer_id": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "verb": {
                  "type": "string"
                },
                "implemented_by_partial_function": {
                  "type": "string"
                },
                "user_name": {
                  "type": "string"
                },
                "developer_email": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "duration": {
                  "type": "integer"
                },
                "correlation_id": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanReadMetrics",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/metrics"
    },
    {
      "operation_id": "OBPv2.2.0-getMessageDocs",
      "implemented_by": {
        "version": "OBPv2.2.0",
        "function": "getMessageDocs"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.2.0/message-docs/CONNECTOR",
      "summary": "获取消息文档",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "These message docs provide example messages sent by OBP to the (Kafka) message queue for processing by the Core Banking / Payment system Adapter - together with an example expected response and possible error codes.\n Integrators can use these messages to build Adapters that provide core banking services to OBP.\n\n Note: API Explorer provides a Message Docs page where these messages are displayed.\n \n `CONNECTOR`: kafka_vSept2018 ... \n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "message_docs": [
          {
            "process": "getAccounts",
            "message_format": "KafkaV2017",
            "outbound_topic": "to.obp.api.1.caseclass.OutboundGetAccounts",
            "inbound_topic": "from.obp.api.1.to.adapter.mf.caseclass.OutboundGetAccounts",
            "description": "get Banks",
            "example_outbound_message": {
              "jsonString": "{}"
            },
            "example_inbound_message": {
              "jsonString": "{}"
            },
            "outboundAvroSchema": {
              "jsonString": "{}"
            },
            "inboundAvroSchema": {
              "jsonString": "{}"
            },
            "adapter_implementation": {
              "group": "CORE",
              "suggested_order": 3
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Documentation",
        "API"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "message_docs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "inbound_topic": {
                  "type": "string"
                },
                "message_format": {
                  "type": "string"
                },
                "outbound_topic": {
                  "type": "string"
                },
                "outboundAvroSchema": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                },
                "adapter_implementation": {
                  "type": "object",
                  "properties": {
                    "suggested_order": {
                      "type": "integer"
                    },
                    "group": {
                      "type": "string"
                    }
                  }
                },
                "example_inbound_message": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                },
                "process": {
                  "type": "string"
                },
                "inboundAvroSchema": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                },
                "description": {
                  "type": "string"
                },
                "example_outbound_message": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/message-docs/CONNECTOR"
    },
    {
      "operation_id": "OBPv2.0.0-getTransactionTypes",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "getTransactionTypes"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/transaction-types",
      "summary": "映射（类型-&gt;字符串）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Get Transaction Types for the bank specified by BANK_ID:\n\nLists the possible Transaction Types available at the bank (as opposed to Transaction Request Types which are the possible ways Transactions can be created by this API Server).\n\n  * id : Unique transaction type id across the API instance. SHOULD be a UUID. MUST be unique.\n  * bank_id : The bank that supports this TransactionType\n  * short_code : A short code (SHOULD have no-spaces) which MUST be unique across the bank. May be stored with Transactions to link here\n  * summary : A succinct summary\n  * description : A longer description\n  * charge : The charge to the customer for each one of these\n\nAuthentication is Optional",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "transaction_types": [
          {
            "id": {
              "value": "123"
            },
            "bank_id": "GENODEM1GLS",
            "short_code": "PlaceholderString",
            "summary": "PlaceholderString",
            "description": "PlaceholderString",
            "charge": {
              "currency": "EUR",
              "amount": "10"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": false,
      "tags": [
        "Bank",
        "Account Information Service (AIS)"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transaction_types": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "charge": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string"
                    }
                  }
                },
                "description": {
                  "type": "string"
                },
                "short_code": {
                  "type": "string"
                },
                "summary": {
                  "type": "string"
                },
                "id": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/transaction-types"
    },
    {
      "operation_id": "OBPv3.0.0-getPrivateAccountIdsbyBankId",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getPrivateAccountIdsbyBankId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/account_ids/private",
      "summary": "在银行获取帐户（仅ID）。",
      "description": "<p>仅返回用户有权访问的BANK_ID上的帐户ID列表。 </p><p>每个帐户必须至少有一个私有视图。 </p><p>对于每个帐户，API都会返回其帐户ID。 </p><p>如果要在视图上查看更多信息，请使用“帐户详细信息”调用。 </p><p>可选的请求参数： </p><ul><li> account_type_filter：一个或多个accountType值，以逗号分隔</li><li> account_type_filter_operation：account_type_filter的过滤器类型，值必须为INCLUDE或EXCLUDE </li></ul><p>整个网址示例： <br /> / banks / BANK_ID / accounts / account_ids / private？account_type_filter = 330，CURRENT + PLUS＆account_type_filter_operation = INCLUDE </p><p>身份验证是强制性的</p>",
      "description_markdown": "Returns only the list of accounts ids at BANK_ID that the user has access to.\n\nEach account must have at least one private View.\n\nFor each account the API returns its account ID.\n\nIf you want to see more information on the Views, use the Account Detail call.\n\n\noptional request parameters:\n\n* account_type_filter: one or many accountType value, split by comma\n* account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE\n\nwhole url example:\n/banks/BANK_ID/accounts/account_ids/private?account_type_filter=330,CURRENT+PLUS&account_type_filter_operation=INCLUDE\n    \n\nAuthentication is Mandatory",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "accounts": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Account",
        "Account Information Service (AIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/account_ids/private"
    },
    {
      "operation_id": "OBPv2.0.0-createUser",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "createUser"
      },
      "request_verb": "POST",
      "request_url": "/obp/v2.0.0/users",
      "summary": "创建用户。",
      "description": "<p>创建OBP用户。 <br />无需授权（当前）。 </p><p>模仿当前的Webform进行注册。 </p><p>需要用户名（电子邮件）和密码。 </p><p>如果用户名不唯一，则返回409错误。 </p><p>可能需要验证电子邮件地址。 </p>",
      "description_markdown": "Creates OBP user.\n No authorisation (currently) required.\n\n Mimics current webform to Register.\n\n Requires username(email) and password.\n\n Returns 409 error if username not unique.\n\n May require validation of email address.\n\n",
      "example_request_body": {
        "email": "eveline@example.com",
        "username": "felixsmith",
        "password": "String",
        "first_name": "Simon",
        "last_name": "Redfern"
      },
      "success_response_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "email": "eveline@example.com",
        "provider_id": "Chris",
        "provider": "http://127.0.0.1:8080",
        "username": "felixsmith",
        "entitlements": {
          "list": [
            {
              "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
              "role_name": "CanQueryOtherUser",
              "bank_id": "GENODEM1GLS"
            }
          ]
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30207: Invalid Password Format. Your password should EITHER be at least 10 characters long and contain mixed numbers and both upper and lower case letters and at least one special character, OR be longer than 16 characters.",
        "Error occurred during user creation.",
        "User with the same username already exists.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "User",
        "Onboarding"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "entitlements": {
            "type": "object",
            "properties": {
              "list": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "bank_id": {
                      "type": "string"
                    },
                    "role_name": {
                      "type": "string"
                    },
                    "entitlement_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "provider": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "provider_id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users"
    },
    {
      "operation_id": "OBPv3.1.0-getCreditLimitRequestByRequestId",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCreditLimitRequestByRequestId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/credit_limit/requests/REQUEST_ID",
      "summary": "通过请求ID获取信用额度订单请求",
      "description": "<p> <strong>注意：此端点当前仅返回示例数据。</strong> </p><pre> <code> Get Credit Limit Order Request By Request Id</code> </pre>",
      "description_markdown": "**NOTE: This endpoint currently only returns example data.**\n\n      \n        Get Credit Limit Order Request By Request Id\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "rank_amount_1": "String",
        "nominal_interest_1": "String",
        "rank_amount_2": "String",
        "nominal_interest_2": "String"
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Customer",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "nominal_interest_2": {
            "type": "string"
          },
          "rank_amount_2": {
            "type": "string"
          },
          "nominal_interest_1": {
            "type": "string"
          },
          "rank_amount_1": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/credit_limit/requests/REQUEST_ID"
    },
    {
      "operation_id": "OBPv1.2.1-deleteViewForBankAccount",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteViewForBankAccount"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/views/VIEW_ID",
      "summary": "删除检视",
      "description": "<p>删除银行BANK_ID上ACCOUNT_ID指定的银行帐户上VIEW_ID指定的视图。 </p>",
      "description_markdown": "Deletes the view specified by VIEW_ID on the bank account specified by ACCOUNT_ID at bank BANK_ID.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error.",
        "user does not have owner access"
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "View",
        "Account"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/views/VIEW_ID"
    },
    {
      "operation_id": "OBPv1.2.1-deleteWhereTagForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteWhereTagForViewOnTransaction"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where",
      "summary": "删除where标记。",
      "description": "<p>删除在<a href=\"#1_2_1-getViewsForBankAccount\">view</a>上进行的事务TRANSACTION_ID的where标记。 </p><p>身份验证是强制性的</p><p>该用户必须对此帐户拥有所有者特权，或者必须是发布了地理位置标记的用户。 </p>",
      "description_markdown": "Deletes the where tag of the transaction TRANSACTION_ID made on [view](#1_2_1-getViewsForBankAccount).\n\nAuthentication is Mandatory\n\nThe user must either have owner privileges for this account, or must be the user that posted the geo tag.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "there is no tag to delete",
        "Delete not completed",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where"
    },
    {
      "operation_id": "OBPv4.0.0-createTransactionRequestAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createTransactionRequestAccount"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/ACCOUNT/transaction-requests",
      "summary": "映射（类型-&gt;字符串）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "When using ACCOUNT, the payee is set in the request body.\n\nMoney goes into the BANK_ID and ACCOUNT_ID specified in the request body.\n\nInitiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\nlocalhost:8082/more?version=OBPv4.0.0&list-all-banks=false&core=&psd2=&obwg=#OBPv2_2_0-getCurrentFxRate\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\nAuthentication is Mandatory\n\n\n\n       ",
      "example_request_body": {
        "to": {
          "bank_id": "GENODEM1GLS",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "value": {
          "currency": "EUR",
          "amount": "10"
        },
        "description": "this is for work"
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "GENODEM1GLS",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "String"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "10"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": [
          "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
        ],
        "status": "COMPLETED",
        "start_date": "2017-09-18T22:00:00Z",
        "end_date": "2017-09-18T22:00:00Z",
        "challenge": {
          "id": "be1a183d-b301-4b83-b855-5eeffdd3526f",
          "allowed_attempts": 3,
          "challenge_type": "SANDBOX_TAN"
        },
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "10"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because you don't have access to the owner view of the from account or you don't have access to canCreateAnyTransactionRequest.",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Transaction-Request",
        "Payment Initiation Service (PIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "to": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenge": {
            "type": "object",
            "properties": {
              "challenge_type": {
                "type": "string"
              },
              "allowed_attempts": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "string"
          },
          "charge": {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      },
                      "date_of_birth": {
                        "type": "string"
                      },
                      "legal_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "creditorName": {
                    "type": "string"
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "account": {
                        "type": "object",
                        "properties": {
                          "iban": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "branch_number": {
                        "type": "string"
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "future_date": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/ACCOUNT/transaction-requests"
    },
    {
      "operation_id": "OBPv3.1.0-createAccount",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createAccount"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/accounts/ACCOUNT_ID",
      "summary": "创建帐号",
      "description": "<p>在BANK_ID指定的银行和ACCOUNT_ID指定的ID处创建帐户。 </p><p>用户可以为自己创建一个帐户-或-在POST正文中指定了USER_ID的用户。 </p><p>如果指定了PUT体USER_ID <em>时</em> ，登录的用户必须具有角色canCreateAccount。创建帐户后，该帐户将归USER_ID指定的用户所有。 </p><p>如果<em>未</em>指定PUT主体USER_ID，则该帐户将由登录的用户拥有。 </p><p> “ product_code”字段应为Product的product_code。 <br />如果“产品代码”与产品中的产品代码匹配，则将创建与产品属性匹配的帐户属性。 </p><p>注意：金额必须为零。 </p>",
      "description_markdown": "Create Account at bank specified by BANK_ID with Id specified by ACCOUNT_ID.\n\nThe User can create an Account for themself  - or -  the User that has the USER_ID specified in the POST body.\n\nIf the PUT body USER_ID *is* specified, the logged in user must have the Role canCreateAccount. Once created, the Account will be owned by the User specified by USER_ID.\n\nIf the PUT body USER_ID is *not* specified, the account will be owned by the logged in User.\n\nThe 'product_code' field SHOULD be a product_code from Product.\nIf the 'product_code' matches a product_code from Product, account attributes will be created that match the Product Attributes.\n\nNote: The Amount MUST be zero.",
      "example_request_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "label": "My Account",
        "product_code": "AC",
        "balance": {
          "currency": "EUR",
          "amount": "10"
        },
        "branch_id": "DERBY6",
        "account_routing": {
          "scheme": "AccountNumber",
          "address": "4930396"
        },
        "account_attributes": [
          {
            "product_code": "saving1",
            "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "name": "OVERDRAFT_START_DATE",
            "type": "DATE_WITH_DAY",
            "value": "2012-04-23"
          }
        ]
      },
      "success_response_body": {
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "label": "My Account",
        "product_code": "AC",
        "balance": {
          "currency": "EUR",
          "amount": "10"
        },
        "branch_id": "DERBY6",
        "account_routing": {
          "scheme": "AccountNumber",
          "address": "4930396"
        },
        "account_attributes": [
          {
            "product_code": "saving1",
            "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "name": "OVERDRAFT_START_DATE",
            "type": "DATE_WITH_DAY",
            "value": "2012-04-23"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30107: Invalid User Id.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-20005: User not found. Please specify a valid value for USER_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30106: Invalid Balance Amount.",
        "OBP-30112: Invalid Number. Initial balance must be a number, e.g 1000.00",
        "OBP-30109: Initial Balance of Account must be Zero (0).",
        "OBP-30105: Invalid Balance Currency.",
        "OBP-30208: Account_ID already exists at the Bank.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account",
        "Onboarding"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "account_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "account_attribute_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                }
              }
            }
          },
          "label": {
            "type": "string"
          },
          "account_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          },
          "balance": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "product_code": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "account_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "account_attribute_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                }
              }
            }
          },
          "label": {
            "type": "string"
          },
          "account_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          },
          "balance": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "product_code": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateAccount",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID"
    },
    {
      "operation_id": "OBPv3.0.0-deleteScope",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "deleteScope"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.0.0/consumers/CONSUMER_ID/scope/SCOPE_ID",
      "summary": "删除消费者范围",
      "description": "<p>对于由CONSUMER_ID指定的使用者，删除由SCOPE_ID指定的使用者范围</p><p>必须进行身份验证，并且用户必须是超级管理员。 <br />超级管理员列在“道具”文件中。 </p>",
      "description_markdown": "Delete Consumer Scope specified by SCOPE_ID for an consumer specified by CONSUMER_ID\n\nAuthentication is required and the user needs to be a Super Admin.\nSuper Admins are listed in the Props file.\n\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20050: Current User is not a Super Admin!",
        "OBP-30212: EntitlementId not found",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Scope",
        "Role",
        "Entitlement",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/consumers/CONSUMER_ID/scope/SCOPE_ID"
    },
    {
      "operation_id": "OBPv3.1.0-revokeConsent",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "revokeConsent"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/my/consents/CONSENT_ID/revoke",
      "summary": "撤销同意",
      "description": "<p> OBP同意书允许同意书持有人呼叫一个或多个端点。 </p><p>必须使用SCA（严格的客户身份验证）来创建和授权同意书。 </p><p>也就是说，可以由授权用户通过OBP REST API创建同意书，但是必须通过带外（OOB）机制（例如发送到手机的代码）进行确认。 </p><p>每个同意书都具有以下状态之一：初始化，接受，拒绝，撤回，已接收，有效，撤回BYPSU，已过期，终止DBP。 </p><p>撤销由CONSENT_ID指定的当前用户的同意书</p><p>身份验证是强制性的</p>",
      "description_markdown": "\n\n\nAn OBP Consent allows the holder of the Consent to call one or more endpoints.\n\nConsents must be created and authorisied using SCA (Strong Customer Authentication).\n\nThat is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.\n\nEach Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP.\n\n\n\n      \n\n\nRevoke Consent for current user specified by CONSENT_ID\n\n\nAuthentication is Mandatory\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
        "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
        "status": "REJECTED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": false,
      "tags": [
        "Consent",
        "Account Information Service (AIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          },
          "consent_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/my/consents/CONSENT_ID/revoke"
    },
    {
      "operation_id": "OBPv3.1.0-getStatusOfCreditCardOrder",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getStatusOfCreditCardOrder"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/credit_cards/orders",
      "summary": "获取信用卡订单状态 ",
      "description": "<p> <strong>注意：此端点当前仅返回示例数据。</strong> </p><pre> <code> Get status of Credit Card orders</code> </pre><p>获取所有订单</p>",
      "description_markdown": "**NOTE: This endpoint currently only returns example data.**\n\n      Get status of Credit Card orders\nGet all orders\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "cards": [
          {
            "card_type": "5",
            "card_description": "good",
            "use_type": "3"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50212: Connector did not return the set of status of credit card.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Card",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "cards": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "use_type": {
                  "type": "string"
                },
                "card_description": {
                  "type": "string"
                },
                "card_type": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/credit_cards/orders"
    },
    {
      "operation_id": "OBPv3.1.0-createCustomerAddress",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createCustomerAddress"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/address",
      "summary": "向客户添加地址",
      "description": "<p>向CUSTOMER_ID指定的客户添加地址。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Add an Address to the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "line_1": "No 1 the Road",
        "line_2": "The Place",
        "line_3": "The Hill",
        "city": "Berlin",
        "county": "",
        "state": "Brandenburg",
        "postcode": "13359",
        "country_code": "DE",
        "tags": [
          "mailing",
          "home"
        ],
        "status": "OK"
      },
      "success_response_body": {
        "customer_address_id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "line_1": "No 1 the Road",
        "line_2": "The Place",
        "line_3": "The Hill",
        "city": "Berlin",
        "county": "",
        "state": "Brandenburg",
        "postcode": "13359",
        "country_code": "DE",
        "tags": [
          "mailing",
          "home"
        ],
        "status": "OK",
        "insert_date": "2017-09-18T22:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postcode": {
            "type": "string"
          },
          "line_1": {
            "type": "string"
          },
          "line_2": {
            "type": "string"
          },
          "line_3": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "county": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "insert_date": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postcode": {
            "type": "string"
          },
          "line_1": {
            "type": "string"
          },
          "line_2": {
            "type": "string"
          },
          "line_3": {
            "type": "string"
          },
          "customer_address_id": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "county": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateCustomerAddress",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/address"
    },
    {
      "operation_id": "OBPv4.0.0-deleteDynamicEntity",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "deleteDynamicEntity"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v4.0.0/management/dynamic_entities/DYNAMIC_ENTITY_ID",
      "summary": "删除动态实体",
      "description": "<p>删除由DYNAMIC_ENTITY_ID指定的DynamicEntity。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Delete a DynamicEntity specified by DYNAMIC_ENTITY_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Dynamic-Entity",
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanDeleteDynamicEntity",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/dynamic_entities/DYNAMIC_ENTITY_ID"
    },
    {
      "operation_id": "OBPv3.1.0-getUserAuthContexts",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getUserAuthContexts"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/users/USER_ID/auth-context",
      "summary": "获取用户身份验证上下文",
      "description": "<p>获取用户的用户身份验证上下文。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get User Auth Contexts for a User.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "user_auth_contexts": [
          {
            "user_auth_context_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "key": "CUSTOMER_NUMBER",
            "value": "78987432"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30053: Could not insert the UserAuthContext",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user_auth_contexts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                },
                "user_auth_context_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetUserAuthContext",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/USER_ID/auth-context"
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerBranch",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerBranch"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/branch",
      "summary": "更新客户分支",
      "description": "<p>更新CUSTOMER_ID指定的客户分支。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Update the Branch of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "branch_id": "123"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "eveline@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "2017-09-18T22:00:00Z"
        },
        "date_of_birth": "2017-09-18T22:00:00Z",
        "relationship_status": "single",
        "dependants": 10,
        "dob_of_dependants": [
          "2017-09-18T22:00:00Z"
        ],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "10"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2017-09-18T22:00:00Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "branch_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "employment_status": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "rating": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "dependants": {
            "type": "integer"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerIdentity",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/branch"
    },
    {
      "operation_id": "OBPv3.1.0-getMethodRoutings",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getMethodRoutings"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/method_routings",
      "summary": "获取MethodRoutings",
      "description": "<p>获取所有MethodRoutings。 </p><p>查询网址参数： </p><ul><li> method_name：使用method_name进行过滤</li><li> active：如果active = true，它将显示所有webui_道具。即使已设置，我们也会重新运行所有默认的webui_ props </li></ul><p>例如： <br /> <a href=\"http://localhost:8080/obp/v3.1.0/management/method_routings?active=true\">http：// localhost：8080 / obp / v3.1.0 / management / method_routings？active = true</a> <br /> <a href=\"http://localhost:8080/obp/v3.1.0/management/method_routings?method_name=getBank\">http：// localhost：8080 / obp / v3.1.0 / management / method_routings？method_name = getBank</a> </p>",
      "description_markdown": "Get the all MethodRoutings.\n\nQuery url parameters:\n\n* method_name: filter with method_name\n* active: if active = true, it will show all the webui_ props. Even if they are set yet, we will retrun all the default webui_ props\n\neg: \nhttp://localhost:8080/obp/v3.1.0/management/method_routings?active=true\nhttp://localhost:8080/obp/v3.1.0/management/method_routings?method_name=getBank\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "method_routings": [
          {
            "is_bank_id_exact_match": false,
            "method_name": "getBanks",
            "connector_name": "rest_vMar2019",
            "method_routing_id": "method-routing-id",
            "bank_id_pattern": "some_bank_.*",
            "parameters": [
              {
                "key": "url",
                "value": "http://mydomain.com/xxx"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Method-Routing",
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "method_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "parameters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      }
                    }
                  }
                },
                "is_bank_id_exact_match": {
                  "type": "boolean"
                },
                "method_name": {
                  "type": "string"
                },
                "connector_name": {
                  "type": "string"
                },
                "bank_id_pattern": {
                  "type": "string"
                },
                "method_routing_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetMethodRoutings",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/method_routings"
    },
    {
      "operation_id": "OBPv1.4.0-getCrmEvents",
      "implemented_by": {
        "version": "OBPv1.4.0",
        "function": "getCrmEvents"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.4.0/banks/BANK_ID/crm-events",
      "summary": "获取CRM活动",
      "description": "",
      "description_markdown": "",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "crm_events": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "bank_id": "GENODEM1GLS",
            "customer_name": "String",
            "customer_number": "5987953",
            "category": "String",
            "detail": "String",
            "channel": "String",
            "scheduled_date": "2017-09-18T22:00:00Z",
            "actual_date": "2017-09-18T22:00:00Z",
            "result": "String"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "No CRM Events available.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "crm_events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "actual_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "scheduled_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "customer_number": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "result": {
                  "type": "string"
                },
                "customer_name": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "detail": {
                  "type": "string"
                },
                "channel": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/crm-events"
    },
    {
      "operation_id": "OBPv2.0.0-getPrivateAccountsAtOneBank",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "getPrivateAccountsAtOneBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/accounts",
      "summary": "在银行获取帐户。",
      "description": "<p>返回用户有权访问的BANK_ID帐户列表。 <br />对于每个帐户，API都会返回帐户ID和用户可用的视图。 <br />每个帐户必须至少有一个私有视图。 </p><p>可选的请求参数： </p><ul><li> account_type_filter：一个或多个accountType值，以逗号分隔</li><li> account_type_filter_operation：account_type_filter的过滤器类型，值必须为INCLUDE或EXCLUDE </li></ul><p>整个网址示例： <br /> / banks / BANK_ID / accounts？account_type_filter = 330，CURRENT + PLUS＆account_type_filter_operation = INCLUDE </p><p>身份验证是强制性的</p>",
      "description_markdown": "\nReturns the list of accounts at BANK_ID that the user has access to.\nFor each account the API returns the account ID and the views available to the user..\nEach account must have at least one private View.\n\n\noptional request parameters:\n\n* account_type_filter: one or many accountType value, split by comma\n* account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE\n\nwhole url example:\n/banks/BANK_ID/accounts?account_type_filter=330,CURRENT+PLUS&account_type_filter_operation=INCLUDE\n    \n\nAuthentication is Mandatory\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "accounts": [
          {
            "id": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0",
            "label": "NoneLabel",
            "bank_id": "GENODEM1GLS",
            "views_available": [
              {
                "id": "1",
                "short_name": "HHH",
                "is_public": true
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account",
        "PrivateData",
        "PublicData",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "views_available": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "is_public": {
                        "type": "boolean"
                      },
                      "short_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "bank_id": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts"
    },
    {
      "operation_id": "OBPv4.0.0-getTagsForViewOnAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getTagsForViewOnAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/metadata/tags",
      "summary": "获取帐户标签。",
      "description": "<p>返回在<a href=\"#1_2_1-getViewsForBankAccount\">视图</a> （VIEW_ID）上创建的帐户ACCOUNT_ID标签。 <br />身份验证是强制性的</p><p>由于标签与用户链接，因此需要进行身份验证。 </p>",
      "description_markdown": "Returns the account ACCOUNT_ID tags made on a [view](#1_2_1-getViewsForBankAccount) (VIEW_ID).\nAuthentication is Mandatory\n\nAuthentication is required as the tag is linked with the user.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "tags": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "value": "OBP",
            "date": "2017-09-18T22:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account-Metadata",
        "Account"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "display_name": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "value": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/metadata/tags"
    },
    {
      "operation_id": "OBPv2.0.0-addSocialMediaHandle",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "addSocialMediaHandle"
      },
      "request_verb": "POST",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/customers/CUSTOMER_ID/social_media_handles",
      "summary": "添加社交媒体句柄",
      "description": "<p>为CUSTOMER_ID指定的客户添加社交媒体句柄。 </p>",
      "description_markdown": "Add a social media handle for the customer specified by CUSTOMER_ID.",
      "example_request_body": {
        "customer_number": "5987953",
        "type": "PlaceholderString",
        "handle": "PlaceholderString",
        "date_added": "2017-09-18T22:00:00Z",
        "date_activated": "2017-09-18T22:00:00Z"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "date_added": {
            "type": "string",
            "format": "date-time"
          },
          "handle": {
            "type": "string"
          },
          "date_activated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanAddSocialMediaHandle",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/social_media_handles"
    },
    {
      "operation_id": "OBPv3.0.0-createViewForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "createViewForBankAccount"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/views",
      "summary": "创建视图。",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Create a view on bank account\n\n Authentication is Mandatory and the user needs to have access to the owner view.\n The 'alias' field in the JSON can take one of three values:\n\n * _public_: to use the public alias if there is one specified for the other account.\n * _private_: to use the public alias if there is one specified for the other account.\n\n * _''(empty string)_: to use no alias; the view shows the real name of the other account.\n\n The 'hide_metadata_if_alias_used' field in the JSON can take boolean values. If it is set to `true` and there is an alias on the other account then the other accounts' metadata (like more_info, url, image_url, open_corporates_url, etc.) will be hidden. Otherwise the metadata will be shown.\n\n The 'allowed_actions' field is a list containing the name of the actions allowed on this view, all the actions contained will be set to `true` on the view creation, the rest will be set to `false`.\n\n You MUST use a leading _ (underscore) in the view name because other view names are reserved for OBP system views.\n ",
      "example_request_body": {
        "name": "_test",
        "description": "This view is for family",
        "metadata_view": "_test",
        "is_public": true,
        "which_alias_to_use": "family",
        "hide_metadata_if_alias_used": false,
        "allowed_actions": [
          "can_see_transaction_this_bank_account",
          "can_see_transaction_other_bank_account",
          "can_see_transaction_metadata",
          "can_see_transaction_label",
          "can_see_transaction_amount",
          "can_see_transaction_type",
          "can_see_transaction_currency",
          "can_see_transaction_start_date",
          "can_see_transaction_finish_date",
          "can_see_transaction_balance",
          "can_see_comments",
          "can_see_narrative",
          "can_see_tags",
          "can_see_images",
          "can_see_bank_account_owners",
          "can_see_bank_account_type",
          "can_see_bank_account_balance",
          "can_see_bank_account_currency",
          "can_see_bank_account_label",
          "can_see_bank_account_national_identifier",
          "can_see_bank_account_swift_bic",
          "can_see_bank_account_iban",
          "can_see_bank_account_number",
          "can_see_bank_account_bank_name",
          "can_see_other_account_national_identifier",
          "can_see_other_account_swift_bic",
          "can_see_other_account_iban",
          "can_see_other_account_bank_name",
          "can_see_other_account_number",
          "can_see_other_account_metadata",
          "can_see_other_account_kind",
          "can_see_more_info",
          "can_see_url",
          "can_see_image_url",
          "can_see_open_corporates_url",
          "can_see_corporate_location",
          "can_see_physical_location",
          "can_see_public_alias",
          "can_see_private_alias",
          "can_add_more_info",
          "can_add_url",
          "can_add_image_url",
          "can_add_open_corporates_url",
          "can_add_corporate_location",
          "can_add_physical_location",
          "can_add_public_alias",
          "can_add_private_alias",
          "can_delete_corporate_location",
          "can_delete_physical_location",
          "can_edit_narrative",
          "can_add_comment",
          "can_delete_comment",
          "can_add_tag",
          "can_delete_tag",
          "can_add_image",
          "can_delete_image",
          "can_add_where_tag",
          "can_see_where_tag",
          "can_delete_where_tag",
          "can_create_counterparty",
          "can_see_bank_routing_scheme",
          "can_see_bank_routing_address",
          "can_see_bank_account_routing_scheme",
          "can_see_bank_account_routing_address",
          "can_see_other_bank_routing_scheme",
          "can_see_other_bank_routing_address",
          "can_see_other_account_routing_scheme",
          "can_see_other_account_routing_address",
          "can_query_available_funds"
        ]
      },
      "success_response_body": {
        "id": "1234",
        "short_name": "short_name",
        "description": "description",
        "metadata_view": "owner",
        "is_public": true,
        "alias": "No",
        "hide_metadata_if_alias_used": true,
        "can_add_comment": true,
        "can_add_corporate_location": true,
        "can_add_image": true,
        "can_add_image_url": true,
        "can_add_more_info": true,
        "can_add_open_corporates_url": true,
        "can_add_physical_location": true,
        "can_add_private_alias": true,
        "can_add_public_alias": true,
        "can_add_tag": true,
        "can_add_url": true,
        "can_add_where_tag": true,
        "can_delete_comment": true,
        "can_add_counterparty": true,
        "can_delete_corporate_location": true,
        "can_delete_image": true,
        "can_delete_physical_location": true,
        "can_delete_tag": true,
        "can_delete_where_tag": true,
        "can_edit_owner_comment": true,
        "can_see_bank_account_balance": true,
        "can_query_available_funds": true,
        "can_see_bank_account_bank_name": true,
        "can_see_bank_account_currency": true,
        "can_see_bank_account_iban": true,
        "can_see_bank_account_label": true,
        "can_see_bank_account_national_identifier": true,
        "can_see_bank_account_number": true,
        "can_see_bank_account_owners": true,
        "can_see_bank_account_swift_bic": true,
        "can_see_bank_account_type": true,
        "can_see_comments": true,
        "can_see_corporate_location": true,
        "can_see_image_url": true,
        "can_see_images": true,
        "can_see_more_info": true,
        "can_see_open_corporates_url": true,
        "can_see_other_account_bank_name": true,
        "can_see_other_account_iban": true,
        "can_see_other_account_kind": true,
        "can_see_other_account_metadata": true,
        "can_see_other_account_national_identifier": true,
        "can_see_other_account_number": true,
        "can_see_other_account_swift_bic": true,
        "can_see_owner_comment": true,
        "can_see_physical_location": true,
        "can_see_private_alias": true,
        "can_see_public_alias": true,
        "can_see_tags": true,
        "can_see_transaction_amount": true,
        "can_see_transaction_balance": true,
        "can_see_transaction_currency": true,
        "can_see_transaction_description": true,
        "can_see_transaction_finish_date": true,
        "can_see_transaction_metadata": true,
        "can_see_transaction_other_bank_account": true,
        "can_see_transaction_start_date": true,
        "can_see_transaction_this_bank_account": true,
        "can_see_transaction_type": true,
        "can_see_url": true,
        "can_see_where_tag": true,
        "can_see_bank_routing_scheme": true,
        "can_see_bank_routing_address": true,
        "can_see_bank_account_routing_scheme": true,
        "can_see_bank_account_routing_address": true,
        "can_see_other_bank_routing_scheme": true,
        "can_see_other_bank_routing_address": true,
        "can_see_other_account_routing_scheme": true,
        "can_see_other_account_routing_address": true,
        "can_add_transaction_request_to_own_account": true,
        "can_add_transaction_request_to_any_account": true,
        "can_see_bank_account_credit_limit": true,
        "can_create_direct_debit": true,
        "can_create_standing_order": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "View",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "allowed_actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_public": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "which_alias_to_use": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_see_other_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_where_tag": {
            "type": "boolean"
          },
          "can_see_url": {
            "type": "boolean"
          },
          "can_create_direct_debit": {
            "type": "boolean"
          },
          "can_see_bank_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_address": {
            "type": "boolean"
          },
          "can_see_tags": {
            "type": "boolean"
          },
          "can_see_transaction_balance": {
            "type": "boolean"
          },
          "can_delete_corporate_location": {
            "type": "boolean"
          },
          "can_add_image_url": {
            "type": "boolean"
          },
          "can_see_public_alias": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_own_account": {
            "type": "boolean"
          },
          "can_add_comment": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_scheme": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "can_see_corporate_location": {
            "type": "boolean"
          },
          "can_see_other_account_bank_name": {
            "type": "boolean"
          },
          "can_see_more_info": {
            "type": "boolean"
          },
          "can_add_counterparty": {
            "type": "boolean"
          },
          "can_see_physical_location": {
            "type": "boolean"
          },
          "can_query_available_funds": {
            "type": "boolean"
          },
          "can_edit_owner_comment": {
            "type": "boolean"
          },
          "can_see_private_alias": {
            "type": "boolean"
          },
          "can_see_bank_account_credit_limit": {
            "type": "boolean"
          },
          "can_see_other_account_routing_address": {
            "type": "boolean"
          },
          "can_see_bank_account_balance": {
            "type": "boolean"
          },
          "can_add_public_alias": {
            "type": "boolean"
          },
          "can_see_bank_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_owners": {
            "type": "boolean"
          },
          "can_see_other_account_metadata": {
            "type": "boolean"
          },
          "can_delete_physical_location": {
            "type": "boolean"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "can_see_transaction_this_bank_account": {
            "type": "boolean"
          },
          "can_see_image_url": {
            "type": "boolean"
          },
          "can_see_transaction_type": {
            "type": "boolean"
          },
          "can_see_images": {
            "type": "boolean"
          },
          "can_see_transaction_amount": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "can_see_transaction_metadata": {
            "type": "boolean"
          },
          "can_see_comments": {
            "type": "boolean"
          },
          "can_see_other_account_iban": {
            "type": "boolean"
          },
          "can_add_image": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_type": {
            "type": "boolean"
          },
          "can_see_other_account_kind": {
            "type": "boolean"
          },
          "can_see_bank_account_currency": {
            "type": "boolean"
          },
          "can_add_where_tag": {
            "type": "boolean"
          },
          "can_see_transaction_start_date": {
            "type": "boolean"
          },
          "can_see_bank_account_label": {
            "type": "boolean"
          },
          "can_add_private_alias": {
            "type": "boolean"
          },
          "can_see_transaction_currency": {
            "type": "boolean"
          },
          "can_add_more_info": {
            "type": "boolean"
          },
          "can_delete_comment": {
            "type": "boolean"
          },
          "can_create_standing_order": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_address": {
            "type": "boolean"
          },
          "can_see_transaction_other_bank_account": {
            "type": "boolean"
          },
          "can_see_bank_account_number": {
            "type": "boolean"
          },
          "can_add_corporate_location": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "can_add_url": {
            "type": "boolean"
          },
          "short_name": {
            "type": "string"
          },
          "can_delete_where_tag": {
            "type": "boolean"
          },
          "is_public": {
            "type": "boolean"
          },
          "can_see_owner_comment": {
            "type": "boolean"
          },
          "can_see_transaction_finish_date": {
            "type": "boolean"
          },
          "can_see_open_corporates_url": {
            "type": "boolean"
          },
          "can_add_physical_location": {
            "type": "boolean"
          },
          "can_see_bank_account_iban": {
            "type": "boolean"
          },
          "can_see_other_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_bank_routing_address": {
            "type": "boolean"
          },
          "can_delete_image": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_any_account": {
            "type": "boolean"
          },
          "can_add_tag": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "can_see_other_account_routing_scheme": {
            "type": "boolean"
          },
          "can_add_open_corporates_url": {
            "type": "boolean"
          },
          "can_delete_tag": {
            "type": "boolean"
          },
          "can_see_transaction_description": {
            "type": "boolean"
          },
          "can_see_bank_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_other_account_number": {
            "type": "boolean"
          },
          "can_see_bank_account_bank_name": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/views"
    },
    {
      "operation_id": "OBPv1.2.1-addCounterpartyImageUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCounterpartyImageUrl"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/image_url",
      "summary": "将图片网址添加到其他银行帐户。",
      "description": "<p>添加指向交易对手徽标的网址</p>",
      "description_markdown": "Add a url that points to the logo of the counterparty",
      "example_request_body": {
        "image_URL": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow adding an image url",
        "URL cannot be added",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "image_URL": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/image_url"
    },
    {
      "operation_id": "OBPv3.1.0-getBadLoginStatus",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getBadLoginStatus"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/users/USERNAME/lock-status",
      "summary": "获取用户锁定状态",
      "description": "<p>获取用户登录状态。 <br />身份验证是强制性的</p>",
      "description_markdown": "\nGet User Login Status.\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "username": "felixsmith",
        "bad_attempts_since_last_success_or_reset": 0,
        "last_failure_date": "2017-09-18T22:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20027: User not found by username.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "last_failure_date": {
            "type": "string",
            "format": "date-time"
          },
          "bad_attempts_since_last_success_or_reset": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanReadUserLockedStatus",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/USERNAME/lock-status"
    },
    {
      "operation_id": "OBPv1.2.1-updateTransactionNarrative",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateTransactionNarrative"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative",
      "summary": "更新叙述。",
      "description": "<p>更新事务TRANSACTION_ID的描述。 </p><p>如果视图不是公开的，则需要通过OAuth进行身份验证。 </p>",
      "description_markdown": "Updates the description of the transaction TRANSACTION_ID.\n\nAuthentication via OAuth is required if the view is not public.",
      "example_request_body": {
        "narrative": "narative"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "narrative": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative"
    },
    {
      "operation_id": "OBPv3.1.0-getConsumers",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getConsumers"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/consumers",
      "summary": "吸引消费者",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Get the all Consumers.\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "consumers": [
          {
            "consumer_id": "8e716299-4668-4efd-976a-67f57a9984ec",
            "app_name": "SOFI",
            "app_type": "Web",
            "description": "Account Management",
            "developer_email": "eveline@example.com",
            "redirect_url": "www.openbankproject.com",
            "created_by_user": {
              "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
              "email": "eveline@example.com",
              "provider_id": "Chris",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            },
            "enabled": true,
            "created": "2017-09-18T22:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Consumer",
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consumers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "app_name": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "created_by_user": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider_id": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  }
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "consumer_id": {
                  "type": "string"
                },
                "developer_email": {
                  "type": "string"
                },
                "redirect_url": {
                  "type": "string"
                },
                "app_type": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetConsumers",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/consumers"
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyCorporateLocation",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyCorporateLocation"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/corporate_location",
      "summary": "更新交易对手公司位置",
      "description": "<p>更新交易对手注册地址的地理位置</p>",
      "description_markdown": "Update the geolocation of the counterparty's registered address",
      "example_request_body": {
        "corporate_location": {
          "latitude": 1.532,
          "longitude": 1.535
        }
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow updating a corporate location",
        "Coordinates not possible",
        "Corporate Location cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "corporate_location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/corporate_location"
    },
    {
      "operation_id": "OBPv2.0.0-addKycMedia",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "addKycMedia"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_media/KYC_MEDIA_ID",
      "summary": "添加KYC Media。",
      "description": "<p>为CUSTOMER_ID指定的客户添加一些KYC媒体。 KYC媒体资源与KYC文档和KYC检查有关，并包含用于扫描护照，公用事业账单等的媒体URL。 </p>",
      "description_markdown": "Add some KYC media for the customer specified by CUSTOMER_ID. KYC Media resources relate to KYC Documents and KYC Checks and contain media urls for scans of passports, utility bills etc.",
      "example_request_body": {
        "customer_number": "5987953",
        "type": "image",
        "url": "http://www.example.com/id-docs/123/image.png",
        "date": "2017-09-18T22:00:00Z",
        "relates_to_kyc_document_id": "123",
        "relates_to_kyc_check_id": "123"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "customer_id": "PlaceholderString",
        "id": "PlaceholderString",
        "customer_number": "5987953",
        "type": "PlaceholderString",
        "url": "PlaceholderString",
        "date": "2017-09-18T22:00:00Z",
        "relates_to_kyc_document_id": "PlaceholderString",
        "relates_to_kyc_check_id": "PlaceholderString"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-00004: Server error: could not add message",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "KYC",
        "Customer"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "relates_to_kyc_check_id": {
            "type": "string"
          },
          "relates_to_kyc_document_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "relates_to_kyc_document_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "relates_to_kyc_check_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanAddKycMedia",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_media/KYC_MEDIA_ID"
    },
    {
      "operation_id": "OBPv1.2.1-addCounterpartyCorporateLocation",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCounterpartyCorporateLocation"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/corporate_location",
      "summary": "将公司位置添加到交易对手",
      "description": "<p>添加交易对手注册地址的地理位置</p>",
      "description_markdown": "Add the geolocation of the counterparty's registered address",
      "example_request_body": {
        "corporate_location": {
          "latitude": 1.532,
          "longitude": 1.535
        }
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "the view does not allow adding a corporate location",
        "Coordinates not possible",
        "Corporate Location cannot be deleted",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "corporate_location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/corporate_location"
    },
    {
      "operation_id": "OBPv3.0.0-getAccountsHeld",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getAccountsHeld"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts-held",
      "summary": "获取持有的帐户",
      "description": "<p>如果尚未为该用户分配所有者视图，则获取当前用户拥有的帐户。 </p><p>可用于将帐户加入API-因为所有其他帐户和交易端点都需要分配视图。 </p><p>可选的请求参数： </p><ul><li> account_type_filter：一个或多个accountType值，以逗号分隔</li><li> account_type_filter_operation：account_type_filter的过滤器类型，值必须为INCLUDE或EXCLUDE </li></ul><p>整个网址示例： <br /> / banks / BANK_ID / accounts-held？account_type_filter = 330，CURRENT + PLUS＆account_type_filter_operation = INCLUDE </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get Accounts held by the current User if even the User has not been assigned the owner View yet.\n\nCan be used to onboard the account to the API - since all other account and transaction endpoints require views to be assigned.\n\n\noptional request parameters:\n\n* account_type_filter: one or many accountType value, split by comma\n* account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE\n\nwhole url example:\n/banks/BANK_ID/accounts-held?account_type_filter=330,CURRENT+PLUS&account_type_filter_operation=INCLUDE\n    \n\nAuthentication is Mandatory\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "accounts": [
          {
            "id": "12314",
            "bank_id": "123",
            "number": "123",
            "account_routings": [
              {
                "scheme": "AccountNumber",
                "address": "4930396"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Account",
        "Account Information Service (AIS)",
        "View",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "scheme": {
                        "type": "string"
                      }
                    }
                  }
                },
                "number": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts-held"
    },
    {
      "operation_id": "OBPv1.2.1-addTagForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addTagForViewOnTransaction"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/tags",
      "summary": "添加标签。",
      "description": "<p>在<a href=\"#1_2_1-getViewsForBankAccount\">视图</a> VIEW_ID上发布有关交易TRANSACTION_ID的标签。 </p><p>身份验证是强制性的</p><p>由于标签与用户链接，因此需要进行身份验证。 </p>",
      "description_markdown": "Posts a tag about a transaction TRANSACTION_ID on a [view](#1_2_1-getViewsForBankAccount) VIEW_ID.\n\nAuthentication is Mandatory\n\nAuthentication is required as the tag is linked with the user.",
      "example_request_body": {
        "value": "String"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "value": "OBP",
        "date": "2017-09-18T22:00:00Z",
        "user": {
          "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
          "provider": "http://127.0.0.1:8080",
          "display_name": "OBP"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "display_name": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/tags"
    },
    {
      "operation_id": "OBPv3.1.0-callsLimit",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "callsLimit"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/management/consumers/CONSUMER_ID/consumer/call-limits",
      "summary": "设置消费者的通话限制",
      "description": "<p>设置使用者的API调用限制： </p><p>每秒<br />每分钟<br />每小时<br />每个星期<br />每月</p><p>身份验证是强制性的</p>",
      "description_markdown": "\nSet the API call limits for a Consumer:\n\nPer Second\nPer Minute\nPer Hour\nPer Week\nPer Month\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "from_date": "2017-09-18T22:00:00Z",
        "to_date": "2017-09-18T22:00:00Z",
        "per_second_call_limit": "-1",
        "per_minute_call_limit": "-1",
        "per_hour_call_limit": "-1",
        "per_day_call_limit": "-1",
        "per_week_call_limit": "-1",
        "per_month_call_limit": "-1"
      },
      "success_response_body": {
        "from_date": "2017-09-18T22:00:00Z",
        "to_date": "2017-09-18T22:00:00Z",
        "per_second_call_limit": "-1",
        "per_minute_call_limit": "-1",
        "per_hour_call_limit": "-1",
        "per_day_call_limit": "-1",
        "per_week_call_limit": "-1",
        "per_month_call_limit": "-1"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-20014: Invalid Consumer ID. Please specify a valid value for CONSUMER_ID.",
        "OBP-30019: Consumer not found. Please specify a valid value for CONSUMER_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30023: Cannot update Consumer ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Consumer",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "to_date": {
            "type": "string",
            "format": "date-time"
          },
          "from_date": {
            "type": "string",
            "format": "date-time"
          },
          "per_week_call_limit": {
            "type": "string"
          },
          "per_day_call_limit": {
            "type": "string"
          },
          "per_second_call_limit": {
            "type": "string"
          },
          "per_month_call_limit": {
            "type": "string"
          },
          "per_hour_call_limit": {
            "type": "string"
          },
          "per_minute_call_limit": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "to_date": {
            "type": "string",
            "format": "date-time"
          },
          "from_date": {
            "type": "string",
            "format": "date-time"
          },
          "per_week_call_limit": {
            "type": "string"
          },
          "per_day_call_limit": {
            "type": "string"
          },
          "per_second_call_limit": {
            "type": "string"
          },
          "per_month_call_limit": {
            "type": "string"
          },
          "per_hour_call_limit": {
            "type": "string"
          },
          "per_minute_call_limit": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanSetCallLimits",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/consumers/CONSUMER_ID/consumer/call-limits"
    },
    {
      "operation_id": "OBPv3.0.0-getAllEntitlementRequests",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getAllEntitlementRequests"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/entitlement-requests",
      "summary": "获取所有权利请求",
      "description": "<p>获取所有权利请求</p><p>身份验证是强制性的</p>",
      "description_markdown": "\nGet all Entitlement Requests\n\nAuthentication is Mandatory\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "entitlement_requests": [
          {
            "entitlement_request_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
            "user": {
              "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
              "email": "eveline@example.com",
              "provider_id": "Chris",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith",
              "entitlements": {
                "list": [
                  {
                    "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
                    "role_name": "CanQueryOtherUser",
                    "bank_id": "GENODEM1GLS"
                  }
                ]
              }
            },
            "role_name": "CanQueryOtherUser",
            "bank_id": "GENODEM1GLS",
            "created": "2017-09-18T22:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20050: Current User is not a Super Admin!",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Role",
        "Entitlement",
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "entitlement_requests": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "entitlement_request_id": {
                  "type": "string"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "entitlements": {
                      "type": "object",
                      "properties": {
                        "list": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "bank_id": {
                                "type": "string"
                              },
                              "role_name": {
                                "type": "string"
                              },
                              "entitlement_id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider_id": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  }
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "role_name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetEntitlementRequestsAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/entitlement-requests"
    },
    {
      "operation_id": "OBPv1.4.0-testResourceDoc",
      "implemented_by": {
        "version": "OBPv1.4.0",
        "function": "testResourceDoc"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.4.0/dummy",
      "summary": "测试资源文档",
      "description": "<p>我只是一个测试资源文档</p><h1> <a href=\"#this-should-be-h1\" id=\"this-should-be-h1\">这应该是H1</a> </h1><h2> <a href=\"#this-should-be-h2\" id=\"this-should-be-h2\">这应该是H2</a> </h2><h3> <a href=\"#this-should-be-h3\" id=\"this-should-be-h3\">这应该是H3</a> </h3><h4> <a href=\"#this-should-be-h4\" id=\"this-should-be-h4\">这应该是H4</a> </h4><p>这是包含两个项目的列表： </p><ul><li>一</li><li>二</li></ul><p>他们自己有下划线_ </p><p>单词周围有<em>下划线</em> </p><p>有下划线_in_words </p><p>有“ underscores_in_words_inside_quotes” </p><p>有（underscores_in_words_in_brackets） </p><p> <em>等</em> ... </p>",
      "description_markdown": "\nI am only a test Resource Doc\n\n#This should be H1\n\n##This should be H2\n\n###This should be H3\n\n####This should be H4\n\nHere is a list with two items:\n\n* One\n* Two\n\nThere are underscores by them selves _\n\nThere are _underscores_ around a word\n\nThere are underscores_in_words\n\nThere are 'underscores_in_words_inside_quotes'\n\nThere are (underscores_in_words_in_brackets)\n\n_etc_...",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Documentation"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/dummy"
    },
    {
      "operation_id": "OBPv3.1.0-getSystemView",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getSystemView"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/system-views/VIEW_ID",
      "summary": "获取系统视图",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Get System View\n\nAuthentication is Mandatory\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "id": "1234",
        "short_name": "short_name",
        "description": "description",
        "is_public": true,
        "alias": "No",
        "hide_metadata_if_alias_used": true,
        "can_add_comment": true,
        "can_add_corporate_location": true,
        "can_add_image": true,
        "can_add_image_url": true,
        "can_add_more_info": true,
        "can_add_open_corporates_url": true,
        "can_add_physical_location": true,
        "can_add_private_alias": true,
        "can_add_public_alias": true,
        "can_add_tag": true,
        "can_add_url": true,
        "can_add_where_tag": true,
        "can_delete_comment": true,
        "can_add_counterparty": true,
        "can_delete_corporate_location": true,
        "can_delete_image": true,
        "can_delete_physical_location": true,
        "can_delete_tag": true,
        "can_delete_where_tag": true,
        "can_edit_owner_comment": true,
        "can_see_bank_account_balance": true,
        "can_see_bank_account_bank_name": true,
        "can_see_bank_account_currency": true,
        "can_see_bank_account_iban": true,
        "can_see_bank_account_label": true,
        "can_see_bank_account_national_identifier": true,
        "can_see_bank_account_number": true,
        "can_see_bank_account_owners": true,
        "can_see_bank_account_swift_bic": true,
        "can_see_bank_account_type": true,
        "can_see_comments": true,
        "can_see_corporate_location": true,
        "can_see_image_url": true,
        "can_see_images": true,
        "can_see_more_info": true,
        "can_see_open_corporates_url": true,
        "can_see_other_account_bank_name": true,
        "can_see_other_account_iban": true,
        "can_see_other_account_kind": true,
        "can_see_other_account_metadata": true,
        "can_see_other_account_national_identifier": true,
        "can_see_other_account_number": true,
        "can_see_other_account_swift_bic": true,
        "can_see_owner_comment": true,
        "can_see_physical_location": true,
        "can_see_private_alias": true,
        "can_see_public_alias": true,
        "can_see_tags": true,
        "can_see_transaction_amount": true,
        "can_see_transaction_balance": true,
        "can_see_transaction_currency": true,
        "can_see_transaction_description": true,
        "can_see_transaction_finish_date": true,
        "can_see_transaction_metadata": true,
        "can_see_transaction_other_bank_account": true,
        "can_see_transaction_start_date": true,
        "can_see_transaction_this_bank_account": true,
        "can_see_transaction_type": true,
        "can_see_url": true,
        "can_see_where_tag": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "System-View",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_see_other_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_where_tag": {
            "type": "boolean"
          },
          "can_see_url": {
            "type": "boolean"
          },
          "can_see_bank_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_tags": {
            "type": "boolean"
          },
          "can_see_transaction_balance": {
            "type": "boolean"
          },
          "can_delete_corporate_location": {
            "type": "boolean"
          },
          "can_add_image_url": {
            "type": "boolean"
          },
          "can_see_public_alias": {
            "type": "boolean"
          },
          "can_add_comment": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "can_see_corporate_location": {
            "type": "boolean"
          },
          "can_see_other_account_bank_name": {
            "type": "boolean"
          },
          "can_see_more_info": {
            "type": "boolean"
          },
          "can_add_counterparty": {
            "type": "boolean"
          },
          "can_see_physical_location": {
            "type": "boolean"
          },
          "can_edit_owner_comment": {
            "type": "boolean"
          },
          "can_see_private_alias": {
            "type": "boolean"
          },
          "can_see_bank_account_balance": {
            "type": "boolean"
          },
          "can_add_public_alias": {
            "type": "boolean"
          },
          "can_see_bank_account_owners": {
            "type": "boolean"
          },
          "can_see_other_account_metadata": {
            "type": "boolean"
          },
          "can_delete_physical_location": {
            "type": "boolean"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "can_see_transaction_this_bank_account": {
            "type": "boolean"
          },
          "can_see_image_url": {
            "type": "boolean"
          },
          "can_see_transaction_type": {
            "type": "boolean"
          },
          "can_see_images": {
            "type": "boolean"
          },
          "can_see_transaction_amount": {
            "type": "boolean"
          },
          "can_see_transaction_metadata": {
            "type": "boolean"
          },
          "can_see_comments": {
            "type": "boolean"
          },
          "can_see_other_account_iban": {
            "type": "boolean"
          },
          "can_add_image": {
            "type": "boolean"
          },
          "can_see_bank_account_type": {
            "type": "boolean"
          },
          "can_see_other_account_kind": {
            "type": "boolean"
          },
          "can_see_bank_account_currency": {
            "type": "boolean"
          },
          "can_add_where_tag": {
            "type": "boolean"
          },
          "can_see_transaction_start_date": {
            "type": "boolean"
          },
          "can_see_bank_account_label": {
            "type": "boolean"
          },
          "can_add_private_alias": {
            "type": "boolean"
          },
          "can_see_transaction_currency": {
            "type": "boolean"
          },
          "can_add_more_info": {
            "type": "boolean"
          },
          "can_delete_comment": {
            "type": "boolean"
          },
          "can_see_transaction_other_bank_account": {
            "type": "boolean"
          },
          "can_see_bank_account_number": {
            "type": "boolean"
          },
          "can_add_corporate_location": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "can_add_url": {
            "type": "boolean"
          },
          "short_name": {
            "type": "string"
          },
          "can_delete_where_tag": {
            "type": "boolean"
          },
          "is_public": {
            "type": "boolean"
          },
          "can_see_owner_comment": {
            "type": "boolean"
          },
          "can_see_transaction_finish_date": {
            "type": "boolean"
          },
          "can_see_open_corporates_url": {
            "type": "boolean"
          },
          "can_add_physical_location": {
            "type": "boolean"
          },
          "can_see_bank_account_iban": {
            "type": "boolean"
          },
          "can_see_other_account_national_identifier": {
            "type": "boolean"
          },
          "can_delete_image": {
            "type": "boolean"
          },
          "can_add_tag": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "can_add_open_corporates_url": {
            "type": "boolean"
          },
          "can_delete_tag": {
            "type": "boolean"
          },
          "can_see_transaction_description": {
            "type": "boolean"
          },
          "can_see_bank_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_other_account_number": {
            "type": "boolean"
          },
          "can_see_bank_account_bank_name": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetSystemView",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/system-views/VIEW_ID"
    },
    {
      "operation_id": "OBPv2.1.0-getCustomersForCurrentUserAtBank",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "getCustomersForCurrentUserAtBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.1.0/banks/BANK_ID/customers",
      "summary": "在银行获取当前用户的客户",
      "description": "<p>返回链接到当前已验证用户的银行客户列表。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Returns a list of Customers at the Bank that are linked to the currently authenticated User.\n\n\nAuthentication is Mandatory",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "customers": [
          {
            "bank_id": "GENODEM1GLS",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "customer_number": "5987953",
            "legal_name": "Eveline Tripman",
            "mobile_phone_number": "+44 07972 444 876",
            "email": "eveline@example.com",
            "face_image": {
              "url": "www.openbankproject",
              "date": "2017-09-18T22:00:00Z"
            },
            "date_of_birth": "2017-09-18T22:00:00Z",
            "relationship_status": "single",
            "dependants": 10,
            "dob_of_dependants": [
              "2017-09-18T22:00:00Z"
            ],
            "credit_rating": {
              "rating": "OBP",
              "source": "OBP"
            },
            "credit_limit": {
              "currency": "EUR",
              "amount": "10"
            },
            "highest_education_attained": "Master",
            "employment_status": "worker",
            "kyc_status": true,
            "last_ok_date": "2017-09-18T22:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "dob_of_dependants": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "employment_status": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "relationship_status": {
                  "type": "string"
                },
                "date_of_birth": {
                  "type": "string",
                  "format": "date-time"
                },
                "last_ok_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "highest_education_attained": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "credit_rating": {
                  "type": "object",
                  "properties": {
                    "source": {
                      "type": "string"
                    },
                    "rating": {
                      "type": "string"
                    }
                  }
                },
                "credit_limit": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string"
                    }
                  }
                },
                "dependants": {
                  "type": "integer"
                },
                "legal_name": {
                  "type": "string"
                },
                "face_image": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                },
                "mobile_phone_number": {
                  "type": "string"
                },
                "kyc_status": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers"
    },
    {
      "operation_id": "OBPv3.0.0-getPublicAccountById",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getPublicAccountById"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/public/accounts/ACCOUNT_ID/VIEW_ID/account",
      "summary": "通过ID获取公共帐户",
      "description": "<p>返回有关具有公开视图的帐户的信息。 </p><p>该帐户由ACCOUNT_ID指定。该信息由VIEW_ID指定的视图审核。 </p><ul><li>数</li><li>拥有者</li><li>类型</li><li>平衡</li><li>路由</li></ul><p> PSD2上下文：PSD2要求客户可以通过第三方应用程序访问其帐户信息。 <br />此调用使用OAuth通过委托身份验证提供余额和其他帐户信息。 </p><p>身份验证是可选的</p>",
      "description_markdown": "\nReturns information about an account that has a public view.\n\nThe account is specified by ACCOUNT_ID. The information is moderated by the view specified by VIEW_ID.\n\n* Number\n* Owners\n* Type\n* Balance\n* Routing\n\n\nPSD2 Context: PSD2 requires customers to have access to their account information via third party applications.\nThis call provides balance and other account information via delegated authentication using OAuth.\n\nAuthentication is Optional\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "bank_id": "String",
        "label": "String",
        "number": "String",
        "owners": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "provider": "http://127.0.0.1:8080",
            "display_name": "OBP"
          }
        ],
        "type": "String",
        "balance": {
          "currency": "EUR",
          "amount": "10"
        },
        "account_routings": [
          {
            "scheme": "AccountNumber",
            "address": "4930396"
          }
        ],
        "account_rules": [
          {
            "scheme": "OVERDRAFT",
            "value": "10"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account-Public",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "account_rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "scheme": {
                  "type": "string"
                }
              }
            }
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "display_name": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "id": {
            "type": "string"
          },
          "balance": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "label": {
            "type": "string"
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string"
                },
                "scheme": {
                  "type": "string"
                }
              }
            }
          },
          "bank_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/public/accounts/ACCOUNT_ID/VIEW_ID/account"
    },
    {
      "operation_id": "OBPv3.1.0-getWebUiProps",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getWebUiProps"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/webui_props",
      "summary": "获取WebUiProps",
      "description": "<p>获取所有WebUiProps键值，带有“ webui_”的那些props键可以存储在DB中，此端点从DB获取所有。 </p><p>网址查询参数： <br /> active：必须为布尔字符串。如果active = true，它将显示<br />显式（插入）+隐式（默认）method_routings的组合。 </p><p>例如： <br /> <a href=\"http://localhost:8080/obp/v3.1.0/management/webui_props\">http：// localhost：8080 / obp / v3.1.0 / management / webui_props</a> <br /> <a href=\"http://localhost:8080/obp/v3.1.0/management/webui_props?active=true\">http：// localhost：8080 / obp / v3.1.0 / management / webui_props？active = true</a> </p>",
      "description_markdown": "\n\nGet the all WebUiProps key values, those props key with \"webui_\" can be stored in DB, this endpoint get all from DB.\n\nurl query parameter: \nactive: It must be a boolean string. and If active = true, it will show\n          combination of explicit (inserted) + implicit (default)  method_routings.\n\neg:  \nhttp://localhost:8080/obp/v3.1.0/management/webui_props\nhttp://localhost:8080/obp/v3.1.0/management/webui_props?active=true\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "webui_props": [
          {
            "name": "webui_api_explorer_url",
            "value": "https://apiexplorer.openbankproject.com",
            "web_ui_props_id": "web-ui-props-id"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "WebUi-Props",
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "webui_props": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "web_ui_props_id": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetWebUiProps",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/webui_props"
    },
    {
      "operation_id": "OBPv1.2.1-addCounterpartyPhysicalLocation",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCounterpartyPhysicalLocation"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/physical_location",
      "summary": "将实际位置添加到其他银行帐户。",
      "description": "<p>添加交易对手主要位置的地理坐标</p>",
      "description_markdown": "Add geocoordinates of the counterparty's main location",
      "example_request_body": {
        "physical_location": {
          "latitude": 1.532,
          "longitude": 1.535
        }
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow adding a physical location",
        "Coordinates not possible",
        "Physical Location cannot be added",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "physical_location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/physical_location"
    },
    {
      "operation_id": "OBPv4.0.0-createBank",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createBank"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks",
      "summary": "建立银行",
      "description": "<p>创建一个新的银行（授权访问）。 <br />身份验证是强制性的</p>",
      "description_markdown": "Create a new bank (Authenticated access).\nAuthentication is Mandatory\n",
      "example_request_body": {
        "id": "gh.29.uk.x",
        "full_name": "uk",
        "short_name": "uk",
        "logo_url": "https://static.openbankproject.com/images/sandbox/bank_x.png",
        "website_url": "https://www.example.com",
        "swift_bic": "IIIGGB22",
        "national_identifier": "UK97ZZZ1234567890",
        "bank_routing": {
          "scheme": "BIC",
          "address": "OKOYFIHH"
        }
      },
      "success_response_body": {
        "id": "gh.29.uk.x",
        "full_name": "uk",
        "short_name": "uk",
        "logo_url": "https://static.openbankproject.com/images/sandbox/bank_x.png",
        "website_url": "https://www.example.com",
        "swift_bic": "IIIGGB22",
        "national_identifier": "UK97ZZZ1234567890",
        "bank_routing": {
          "scheme": "BIC",
          "address": "OKOYFIHH"
        }
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30210: Insufficient authorisation to Create Bank. You do not have the role CanCreateBank.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Bank"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "bank_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          },
          "full_name": {
            "type": "string"
          },
          "national_identifier": {
            "type": "string"
          },
          "swift_bic": {
            "type": "string"
          },
          "website_url": {
            "type": "string"
          },
          "short_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          },
          "full_name": {
            "type": "string"
          },
          "national_identifier": {
            "type": "string"
          },
          "swift_bic": {
            "type": "string"
          },
          "website_url": {
            "type": "string"
          },
          "short_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks"
    },
    {
      "operation_id": "OBPv1.2.1-addCounterpartyMoreInfo",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCounterpartyMoreInfo"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/more_info",
      "summary": "添加交易对手更多信息",
      "description": "<p>从帐户的角度（例如，我的牙医）添加对对方的描述。 </p>",
      "description_markdown": "Add a description of the counter party from the perpestive of the account e.g. My dentist.",
      "example_request_body": {
        "more_info": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-30022: The current view does not have the permission: ",
        "the view ownerdoes not allow adding more info",
        "More Info cannot be added",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "more_info": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/more_info"
    },
    {
      "operation_id": "OBPv2.0.0-getKycChecks",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "getKycChecks"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/customers/CUSTOMER_ID/kyc_checks",
      "summary": "获取客户KYC检查",
      "description": "<p>获取由CUSTOMER_ID指定的客户的KYC检查。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get KYC checks for the Customer specified by CUSTOMER_ID.\n\nAuthentication is Mandatory",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "checks": [
          {
            "bank_id": "GENODEM1GLS",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "id": "PlaceholderString",
            "customer_number": "5987953",
            "date": "2017-09-18T22:00:00Z",
            "how": "PlaceholderString",
            "staff_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "staff_name": "PlaceholderString",
            "satisfied": true,
            "comments": "PlaceholderString"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "KYC",
        "Customer"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "checks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "comments": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "staff_user_id": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "satisfied": {
                  "type": "boolean"
                },
                "how": {
                  "type": "string"
                },
                "staff_name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyKycChecks",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/customers/CUSTOMER_ID/kyc_checks"
    },
    {
      "operation_id": "OBPv2.1.0-getEntitlementsByBankAndUser",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "getEntitlementsByBankAndUser"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.1.0/banks/BANK_ID/users/USER_ID/entitlements",
      "summary": "获取银行用户的权利。",
      "description": "<p>获取由BANK_ID和USER_ID指定的权利</p><p>身份验证是强制性的</p>",
      "description_markdown": "\n\nGet Entitlements specified by BANK_ID and USER_ID\n\nAuthentication is Mandatory\n\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "list": [
          {
            "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
            "role_name": "CanQueryOtherUser",
            "bank_id": "GENODEM1GLS"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Role",
        "Entitlement",
        "User"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                },
                "entitlement_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetEntitlementsForAnyUserAtOneBank",
          "requires_bank_id": true
        },
        {
          "role": "CanGetEntitlementsForAnyUserAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/users/USER_ID/entitlements"
    },
    {
      "operation_id": "OBPv3.1.0-createAccountWebhook",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createAccountWebhook"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/account-web-hooks",
      "summary": "创建一个帐户Webhook",
      "description": "<p>创建一个帐户Webhook </p><p>当某些事件发生时，Webhooks用于调用外部URL。 </p><p>帐户Webhooks专注于帐户事件。 </p><p>例如，如果帐户中的余额发生变化，则可以使用Webhook通知外部服务。 </p><p>此功能正在开发中！请注意，只有实现的触发器是：OnBalanceChange </p>",
      "description_markdown": "Create an Account Webhook\n\nWebhooks are used to call external URLs when certain events happen.\n\nAccount Webhooks focus on events around accounts.\n\nFor instance, a webhook could be used to notify an external service if a balance changes on an account.\n\nThis functionality is work in progress! Please note that only implemented trigger is: OnBalanceChange\n",
      "example_request_body": {
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "trigger_name": "OnBalanceChange",
        "url": "https://localhost.openbankproject.com",
        "http_method": "POST",
        "http_protocol": "HTTP/1.1",
        "is_active": "true"
      },
      "success_response_body": {
        "account_webhook_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "bank_id": "GENODEM1GLS",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "trigger_name": "OnBalanceChange",
        "url": "https://localhost.openbankproject.com",
        "http_method": "POST",
        "http_protocol": "HTTP/1.1",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Webhook",
        "Bank",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "http_method": {
            "type": "string"
          },
          "is_active": {
            "type": "string"
          },
          "http_protocol": {
            "type": "string"
          },
          "trigger_name": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "created_by_user_id": {
            "type": "string"
          },
          "http_method": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "http_protocol": {
            "type": "string"
          },
          "account_webhook_id": {
            "type": "string"
          },
          "trigger_name": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateWebhook",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/account-web-hooks"
    },
    {
      "operation_id": "OBPv3.1.0-deleteTaxResidence",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteTaxResidence"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/tax_residencies/TAX_RESIDENCE_ID",
      "summary": "删除税收居民",
      "description": "<p>删除由TAX_RESIDENCE_ID指定的客户的税收居所。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Delete a Tax Residence of the Customer specified by TAX_RESIDENCE_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "KYC",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/tax_residencies/TAX_RESIDENCE_ID"
    },
    {
      "operation_id": "OBPv3.1.0-getCallsLimit",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCallsLimit"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/consumers/CONSUMER_ID/consumer/call-limits",
      "summary": "获取消费者的通话限制",
      "description": "<p>获取每个消费者的通话限制。 <br />身份验证是强制性的</p>",
      "description_markdown": "\nGet Calls limits per Consumer.\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "per_second_call_limit": "-1",
        "per_minute_call_limit": "-1",
        "per_hour_call_limit": "-1",
        "per_day_call_limit": "-1",
        "per_week_call_limit": "-1",
        "per_month_call_limit": "-1",
        "current_state": {
          "per_second": {
            "calls_made": -1,
            "reset_in_seconds": -1
          },
          "per_minute": {
            "calls_made": -1,
            "reset_in_seconds": -1
          },
          "per_hour": {
            "calls_made": -1,
            "reset_in_seconds": -1
          },
          "per_day": {
            "calls_made": -1,
            "reset_in_seconds": -1
          },
          "per_week": {
            "calls_made": -1,
            "reset_in_seconds": -1
          },
          "per_month": {
            "calls_made": -1,
            "reset_in_seconds": -1
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-20014: Invalid Consumer ID. Please specify a valid value for CONSUMER_ID.",
        "OBP-30019: Consumer not found. Please specify a valid value for CONSUMER_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30023: Cannot update Consumer ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Consumer",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "current_state": {
            "type": "object",
            "properties": {
              "per_week": {
                "type": "object",
                "properties": {
                  "reset_in_seconds": {
                    "type": "integer"
                  },
                  "calls_made": {
                    "type": "integer"
                  }
                }
              },
              "per_day": {
                "type": "object",
                "properties": {
                  "reset_in_seconds": {
                    "type": "integer"
                  },
                  "calls_made": {
                    "type": "integer"
                  }
                }
              },
              "per_minute": {
                "type": "object",
                "properties": {
                  "reset_in_seconds": {
                    "type": "integer"
                  },
                  "calls_made": {
                    "type": "integer"
                  }
                }
              },
              "per_month": {
                "type": "object",
                "properties": {
                  "reset_in_seconds": {
                    "type": "integer"
                  },
                  "calls_made": {
                    "type": "integer"
                  }
                }
              },
              "per_second": {
                "type": "object",
                "properties": {
                  "reset_in_seconds": {
                    "type": "integer"
                  },
                  "calls_made": {
                    "type": "integer"
                  }
                }
              },
              "per_hour": {
                "type": "object",
                "properties": {
                  "reset_in_seconds": {
                    "type": "integer"
                  },
                  "calls_made": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "per_week_call_limit": {
            "type": "string"
          },
          "per_day_call_limit": {
            "type": "string"
          },
          "per_second_call_limit": {
            "type": "string"
          },
          "per_month_call_limit": {
            "type": "string"
          },
          "per_hour_call_limit": {
            "type": "string"
          },
          "per_minute_call_limit": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanSetCallLimits",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/consumers/CONSUMER_ID/consumer/call-limits"
    },
    {
      "operation_id": "OBPv3.1.0-answerConsentChallenge",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "answerConsentChallenge"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/consents/CONSENT_ID/challenge",
      "summary": "回答同意挑战",
      "description": "<p> OBP同意书允许同意书持有人呼叫一个或多个端点。 </p><p>必须使用SCA（严格的客户身份验证）来创建和授权同意书。 </p><p>也就是说，可以由授权用户通过OBP REST API创建同意书，但是必须通过带外（OOB）机制（例如发送到手机的代码）进行确认。 </p><p>每个同意书都具有以下状态之一：初始化，接受，拒绝，撤回，已接收，有效，撤回BYPSU，已过期，终止DBP。 </p><p>该端点用于确认先前创建的同意。 </p><p>用户必须提供例如通过SMS带外（OOB）发送的代码。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "\n\n\n\nAn OBP Consent allows the holder of the Consent to call one or more endpoints.\n\nConsents must be created and authorisied using SCA (Strong Customer Authentication).\n\nThat is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.\n\nEach Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP.\n\n\n\n      \n\n\nThis endpoint is used to confirm a Consent previously created.\n\nThe User must supply a code that was sent out of band (OOB) for example via an SMS.\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "answer": "12345678"
      },
      "success_response_body": {
        "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
        "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
        "status": "INITIATED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Consent",
        "Account Information Service (AIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          },
          "consent_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/consents/CONSENT_ID/challenge"
    },
    {
      "operation_id": "OBPv2.2.0-createFx",
      "implemented_by": {
        "version": "OBPv2.2.0",
        "function": "createFx"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v2.2.0/banks/BANK_ID/fx",
      "summary": "创建效果图",
      "description": "<p>为银行创建或更新Fx。 </p><p>例： </p><p> “ from_currency_code”：“ EUR”， <br /> “ to_currency_code”：“ USD”， <br /> “ conversion_value”：1.136305， <br /> “ inverse_conversion_value”：1 / 1.136305 = 0.8800454103431737， </p><p>因此1欧元= 1.136305美元<br />和<br /> 1美元= 0.8800欧元</p><p>身份验证是强制性的</p>",
      "description_markdown": "Create or Update Fx for the Bank.\n\nExample:\n\n“from_currency_code”:“EUR”,\n“to_currency_code”:“USD”,\n“conversion_value”: 1.136305,\n“inverse_conversion_value”: 1 / 1.136305 = 0.8800454103431737,\n\n Thus 1 Euro = 1.136305 US Dollar\n and\n 1 US Dollar = 0.8800 Euro\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "bank_id": "GENODEM1GLS",
        "from_currency_code": "EUR",
        "to_currency_code": "USD",
        "conversion_value": 1.136305,
        "inverse_conversion_value": 0.8800454103431737,
        "effective_date": "2017-09-18T22:00:00Z"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "from_currency_code": "EUR",
        "to_currency_code": "USD",
        "conversion_value": 1.136305,
        "inverse_conversion_value": 0.8800454103431737,
        "effective_date": "2017-09-18T22:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "FX"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "conversion_value": {
            "type": "number"
          },
          "from_currency_code": {
            "type": "string"
          },
          "effective_date": {
            "type": "string",
            "format": "date-time"
          },
          "inverse_conversion_value": {
            "type": "number"
          },
          "to_currency_code": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "conversion_value": {
            "type": "number"
          },
          "from_currency_code": {
            "type": "string"
          },
          "effective_date": {
            "type": "string",
            "format": "date-time"
          },
          "inverse_conversion_value": {
            "type": "number"
          },
          "to_currency_code": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateFxRate",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateFxRateAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/fx"
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyUrl"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/url",
      "summary": "更新其他银行帐户的网址。",
      "description": "<p>代表交易对手的网址（首页网址等） </p>",
      "description_markdown": "A url which represents the counterparty (home page url etc.)",
      "example_request_body": {
        "URL": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "URL cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "URL": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/url"
    },
    {
      "operation_id": "OBPv3.1.0-updateAccountApplicationStatus",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateAccountApplicationStatus"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/account-applications/ACCOUNT_APPLICATION_ID",
      "summary": "更新帐户申请状态",
      "description": "<p>更新帐户申请状态</p><p>身份验证是强制性的</p>",
      "description_markdown": "Update an Account Application status\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "status": "ACCEPTED"
      },
      "success_response_body": {
        "account_application_id": "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763",
        "product_code": "saveing1",
        "user": {
          "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "email": "eveline@example.com",
          "provider_id": "Chris",
          "provider": "http://127.0.0.1:8080",
          "username": "felixsmith"
        },
        "customer": {
          "bank_id": "GENODEM1GLS",
          "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
          "customer_number": "5987953",
          "legal_name": "Eveline Tripman",
          "mobile_phone_number": "+44 07972 444 876",
          "email": "eveline@example.com",
          "face_image": {
            "url": "www.openbankproject",
            "date": "2017-09-18T22:00:00Z"
          },
          "date_of_birth": "2017-09-18T22:00:00Z",
          "relationship_status": "single",
          "dependants": 10,
          "dob_of_dependants": [
            "2017-09-18T22:00:00Z"
          ],
          "credit_rating": {
            "rating": "OBP",
            "source": "OBP"
          },
          "credit_limit": {
            "currency": "EUR",
            "amount": "10"
          },
          "highest_education_attained": "Master",
          "employment_status": "worker",
          "kyc_status": true,
          "last_ok_date": "2017-09-18T22:00:00Z",
          "title": "Dr.",
          "branch_id": "DERBY6",
          "name_suffix": "Sr"
        },
        "date_of_application": "2017-09-18T22:00:00Z",
        "status": "REQUESTED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account-Application",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "customer": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "dob_of_dependants": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "employment_status": {
                "type": "string"
              },
              "customer_id": {
                "type": "string"
              },
              "relationship_status": {
                "type": "string"
              },
              "date_of_birth": {
                "type": "string",
                "format": "date-time"
              },
              "last_ok_date": {
                "type": "string",
                "format": "date-time"
              },
              "highest_education_attained": {
                "type": "string"
              },
              "customer_number": {
                "type": "string"
              },
              "credit_rating": {
                "type": "object",
                "properties": {
                  "source": {
                    "type": "string"
                  },
                  "rating": {
                    "type": "string"
                  }
                }
              },
              "name_suffix": {
                "type": "string"
              },
              "credit_limit": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "dependants": {
                "type": "integer"
              },
              "legal_name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "face_image": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "url": {
                    "type": "string"
                  }
                }
              },
              "branch_id": {
                "type": "string"
              },
              "mobile_phone_number": {
                "type": "string"
              },
              "kyc_status": {
                "type": "boolean"
              }
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "user_id": {
                "type": "string"
              }
            }
          },
          "date_of_application": {
            "type": "string",
            "format": "date-time"
          },
          "account_application_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/account-applications/ACCOUNT_APPLICATION_ID"
    },
    {
      "operation_id": "OBPv2.0.0-getPermissionsForBankAccount",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "getPermissionsForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/permissions",
      "summary": "获得访问权限。",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Returns the list of the permissions at BANK_ID for account ACCOUNT_ID, with each time a pair composed of the user and the views that he has access to.\n\nAuthentication is Mandatory\nand the user needs to have access to the owner view.\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "permissions": [
          {
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            },
            "views": [
              {
                "id": "123",
                "short_name": "short_name",
                "description": "description",
                "is_public": true,
                "alias": "None",
                "hide_metadata_if_alias_used": true,
                "can_add_comment": true,
                "can_add_corporate_location": true,
                "can_add_image": true,
                "can_add_image_url": true,
                "can_add_more_info": true,
                "can_add_open_corporates_url": true,
                "can_add_physical_location": true,
                "can_add_private_alias": true,
                "can_add_public_alias": true,
                "can_add_tag": true,
                "can_add_url": true,
                "can_add_where_tag": true,
                "can_delete_comment": true,
                "can_delete_corporate_location": true,
                "can_delete_image": true,
                "can_delete_physical_location": true,
                "can_delete_tag": true,
                "can_delete_where_tag": true,
                "can_edit_owner_comment": true,
                "can_see_bank_account_balance": true,
                "can_see_bank_account_bank_name": true,
                "can_see_bank_account_currency": true,
                "can_see_bank_account_iban": true,
                "can_see_bank_account_label": true,
                "can_see_bank_account_national_identifier": true,
                "can_see_bank_account_number": true,
                "can_see_bank_account_owners": true,
                "can_see_bank_account_swift_bic": true,
                "can_see_bank_account_type": true,
                "can_see_comments": true,
                "can_see_corporate_location": true,
                "can_see_image_url": true,
                "can_see_images": true,
                "can_see_more_info": true,
                "can_see_open_corporates_url": true,
                "can_see_other_account_bank_name": true,
                "can_see_other_account_iban": true,
                "can_see_other_account_kind": true,
                "can_see_other_account_metadata": true,
                "can_see_other_account_national_identifier": true,
                "can_see_other_account_number": true,
                "can_see_other_account_swift_bic": true,
                "can_see_owner_comment": true,
                "can_see_physical_location": true,
                "can_see_private_alias": true,
                "can_see_public_alias": true,
                "can_see_tags": true,
                "can_see_transaction_amount": true,
                "can_see_transaction_balance": true,
                "can_see_transaction_currency": true,
                "can_see_transaction_description": true,
                "can_see_transaction_finish_date": true,
                "can_see_transaction_metadata": true,
                "can_see_transaction_other_bank_account": true,
                "can_see_transaction_start_date": true,
                "can_see_transaction_this_bank_account": true,
                "can_see_transaction_type": true,
                "can_see_url": true,
                "can_see_where_tag": true
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "View",
        "Account",
        "User",
        "Entitlement"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "views": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "can_see_other_account_swift_bic": {
                        "type": "boolean"
                      },
                      "can_see_where_tag": {
                        "type": "boolean"
                      },
                      "can_see_url": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_swift_bic": {
                        "type": "boolean"
                      },
                      "can_see_tags": {
                        "type": "boolean"
                      },
                      "can_see_transaction_balance": {
                        "type": "boolean"
                      },
                      "can_delete_corporate_location": {
                        "type": "boolean"
                      },
                      "can_add_image_url": {
                        "type": "boolean"
                      },
                      "can_see_public_alias": {
                        "type": "boolean"
                      },
                      "can_add_comment": {
                        "type": "boolean"
                      },
                      "description": {
                        "type": "string"
                      },
                      "can_see_corporate_location": {
                        "type": "boolean"
                      },
                      "can_see_other_account_bank_name": {
                        "type": "boolean"
                      },
                      "can_see_more_info": {
                        "type": "boolean"
                      },
                      "can_see_physical_location": {
                        "type": "boolean"
                      },
                      "can_edit_owner_comment": {
                        "type": "boolean"
                      },
                      "can_see_private_alias": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_balance": {
                        "type": "boolean"
                      },
                      "can_add_public_alias": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_owners": {
                        "type": "boolean"
                      },
                      "can_see_other_account_metadata": {
                        "type": "boolean"
                      },
                      "can_delete_physical_location": {
                        "type": "boolean"
                      },
                      "hide_metadata_if_alias_used": {
                        "type": "boolean"
                      },
                      "can_see_transaction_this_bank_account": {
                        "type": "boolean"
                      },
                      "can_see_image_url": {
                        "type": "boolean"
                      },
                      "can_see_transaction_type": {
                        "type": "boolean"
                      },
                      "can_see_images": {
                        "type": "boolean"
                      },
                      "can_see_transaction_amount": {
                        "type": "boolean"
                      },
                      "can_see_transaction_metadata": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "can_see_comments": {
                        "type": "boolean"
                      },
                      "can_see_other_account_iban": {
                        "type": "boolean"
                      },
                      "can_add_image": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_type": {
                        "type": "boolean"
                      },
                      "can_see_other_account_kind": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_currency": {
                        "type": "boolean"
                      },
                      "can_add_where_tag": {
                        "type": "boolean"
                      },
                      "can_see_transaction_start_date": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_label": {
                        "type": "boolean"
                      },
                      "can_add_private_alias": {
                        "type": "boolean"
                      },
                      "can_see_transaction_currency": {
                        "type": "boolean"
                      },
                      "can_add_more_info": {
                        "type": "boolean"
                      },
                      "can_delete_comment": {
                        "type": "boolean"
                      },
                      "can_see_transaction_other_bank_account": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_number": {
                        "type": "boolean"
                      },
                      "can_add_corporate_location": {
                        "type": "boolean"
                      },
                      "can_add_url": {
                        "type": "boolean"
                      },
                      "short_name": {
                        "type": "string"
                      },
                      "can_delete_where_tag": {
                        "type": "boolean"
                      },
                      "is_public": {
                        "type": "boolean"
                      },
                      "can_see_owner_comment": {
                        "type": "boolean"
                      },
                      "can_see_transaction_finish_date": {
                        "type": "boolean"
                      },
                      "can_see_open_corporates_url": {
                        "type": "boolean"
                      },
                      "can_add_physical_location": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_iban": {
                        "type": "boolean"
                      },
                      "can_see_other_account_national_identifier": {
                        "type": "boolean"
                      },
                      "can_delete_image": {
                        "type": "boolean"
                      },
                      "can_add_tag": {
                        "type": "boolean"
                      },
                      "can_add_open_corporates_url": {
                        "type": "boolean"
                      },
                      "can_delete_tag": {
                        "type": "boolean"
                      },
                      "can_see_transaction_description": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_national_identifier": {
                        "type": "boolean"
                      },
                      "can_see_other_account_number": {
                        "type": "boolean"
                      },
                      "can_see_bank_account_bank_name": {
                        "type": "boolean"
                      },
                      "alias": {
                        "type": "string"
                      }
                    }
                  }
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "display_name": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/permissions"
    },
    {
      "operation_id": "OBPv1.4.0-getResourceDocsSwagger",
      "implemented_by": {
        "version": "OBPv1.4.0",
        "function": "getResourceDocsSwagger"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.4.0/resource-docs/API_VERSION/swagger",
      "summary": "获取Swagger文档",
      "description": "<p>以Swagger格式返回有关此服务器上RESTful资源的文档。 </p><p> API_VERSION是您想要有关例如v3.0.0的文档的版本</p><p>您可以使用&#39;tags&#39;网址参数过滤此端点，例如？tags = Account，Bank </p><p> （给所有端点一个或多个用于分组的标签） </p><p>您可以使用&#39;functions&#39;url参数过滤此端点，例如？functions = getBanks，bankById </p><p> （每个端点通过“功能”在OBP Scala代码中实现） </p><p>您可以使用“目录” URL参数过滤此端点，例如？core =＆psd2 = true＆obwg = </p><p>有关更多信息，请参见Resource Doc端点。 </p><p>以下是更多示例： <br /> <a href=\"http://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/swagger\">http：// localhost：8080 / obp / v3.1.0 / resource-docs / v3.1.0 / swagger</a> <br /> <a href=\"http://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/swagger?psd2=true\">http：// localhost：8080 / obp / v3.1.0 / resource-docs / v3.1.0 / swagger？psd2 = true</a> <br /> <a href=\"http://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank\">http：// localhost：8080 / obp / v3.1.0 / resource-docs / v3.1.0 / swagger？tags = Account，Bank</a> <br /> <a href=\"http://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById\">http：// localhost：8080 / obp / v3.1.0 / resource-docs / v3.1.0 / swagger？functions = getBanks，bankById</a> <br /> <a href=\"http://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/swagger?psd2=true&amp;tags=Account,Bank&amp;functions=getBanks,bankById\">http：// localhost：8080 / obp / v3.1.0 / resource-docs / v3.1.0 / swagger？psd2 = true＆tags = Account，Bank＆functions = getBanks，bankById</a> </p>",
      "description_markdown": "Returns documentation about the RESTful resources on this server in Swagger format.\n\nAPI_VERSION is the version you want documentation about e.g. v3.0.0\n\nYou may filter this endpoint using the 'tags' url parameter e.g. ?tags=Account,Bank\n\n(All endpoints are given one or more tags which for used in grouping)\n\nYou may filter this endpoint using the 'functions' url parameter e.g. ?functions=getBanks,bankById\n\n(Each endpoint is implemented in the OBP Scala code by a 'function')\n\nYou may filter this endpoint using the 'Catalogs' url parameter e.g. ?core=&psd2=true&obwg=\n\nSee the Resource Doc endpoint for more information.\n\nFollowing are more examples:\nhttp://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/swagger\nhttp://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/swagger?psd2=true\nhttp://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank\nhttp://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById\nhttp://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/swagger?psd2=true&tags=Account,Bank&functions=getBanks,bankById\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Documentation",
        "API"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/resource-docs/API_VERSION/swagger"
    },
    {
      "operation_id": "OBPv3.1.0-getAllEntitlements",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getAllEntitlements"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/entitlements",
      "summary": "获取所有权利",
      "description": "<p>需要登录。 </p><p>角色字段上可能的过滤器： </p><p>例如：/ entitlements？role = CanGetCustomer </p>",
      "description_markdown": "\n\nLogin is required.\n\nPossible filter on the role field:\n\neg: /entitlements?role=CanGetCustomer\n\n\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "list": [
          {
            "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
            "role_name": "CanQueryOtherUser",
            "bank_id": "GENODEM1GLS"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20050: Current User is not a Super Admin!",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Role",
        "Entitlement",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                },
                "entitlement_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/entitlements"
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyPrivateAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyPrivateAlias"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias",
      "summary": "删除交易对手私人别名",
      "description": "<p>删除其他帐户OTHER_ACCOUNT_ID的私人别名。 </p><p>身份验证是可选的<br />如果视图不是公共的，则需要认证。 </p>",
      "description_markdown": "Deletes the private alias of the other account OTHER_ACCOUNT_ID.\n\nAuthentication is Optional\nAuthentication is required if the view is not public.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "the view does not allow deleting the private alias",
        "Alias cannot be deleted",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias"
    },
    {
      "operation_id": "OBPv3.0.0-getTransactionsForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getTransactionsForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions",
      "summary": "获取帐户交易（完整）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Returns transactions list of the account specified by ACCOUNT_ID and [moderated](#1_2_1-getViewsForBankAccount) by the view (VIEW_ID).\n\nAuthentication is Optional\n\nAuthentication is required if the view is not public.\n\nPossible custom headers for pagination:\n\n* sort_direction=ASC/DESC ==> default value: DESC. The sort field is the completed date.\n* limit=NUMBER ==> default value: 50\n* offset=NUMBER ==> default value: 0\n* from_date=DATE => default value: 0000-00-00T00:00:00.000Z\n* to_date=DATE => default value: 3049-01-01T00:00:00.000Z\n\n**Date format parameter**: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(2017-09-19T02:31:05.000Z) ==> time zone is UTC.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "transactions": [
          {
            "id": "String",
            "this_account": {
              "id": "String",
              "bank_routing": {
                "scheme": "Bank_ID",
                "address": "gh.29.uk"
              },
              "account_routings": [
                {
                  "scheme": "AccountNumber",
                  "address": "4930396"
                }
              ],
              "holders": [
                {
                  "name": "OBP",
                  "is_alias": true
                }
              ]
            },
            "other_account": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "holder": {
                "name": "OBP",
                "is_alias": true
              },
              "bank_routing": {
                "scheme": "Bank_ID",
                "address": "gh.29.uk"
              },
              "account_routings": [
                {
                  "scheme": "AccountNumber",
                  "address": "4930396"
                }
              ],
              "metadata": {
                "public_alias": "NONE",
                "private_alias": "NONE",
                "more_info": "www.openbankproject.com",
                "URL": "www.openbankproject.com",
                "image_URL": "www.openbankproject.com",
                "open_corporates_URL": "www.openbankproject.com",
                "corporate_location": {
                  "latitude": 1.231,
                  "longitude": 1.231,
                  "date": "2017-09-18T22:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                },
                "physical_location": {
                  "latitude": 1.231,
                  "longitude": 1.231,
                  "date": "2017-09-18T22:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              }
            },
            "details": {
              "type": "AC",
              "description": "this is for family",
              "posted": "2017-09-18T22:00:00Z",
              "completed": "2017-09-18T22:00:00Z",
              "new_balance": {
                "currency": "EUR",
                "amount": "10"
              },
              "value": {
                "currency": "EUR",
                "amount": "10"
              }
            },
            "metadata": {
              "narrative": "NONE",
              "comments": [
                {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "value": "OBP",
                  "date": "2017-09-18T22:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              ],
              "tags": [
                {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "value": "OBP",
                  "date": "2017-09-18T22:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              ],
              "images": [
                {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "label": "NONE",
                  "URL": "www.openbankproject.com",
                  "date": "2017-09-18T22:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              ],
              "where": {
                "latitude": 1.231,
                "longitude": 1.231,
                "date": "2017-09-18T22:00:00Z",
                "user": {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "provider": "http://127.0.0.1:8080",
                  "display_name": "OBP"
                }
              }
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-10023: obp_sort_direction parameter can only take two values: DESC or ASC!",
        "OBP-10024: wrong value for obp_offset parameter. Please send a positive integer (=>0)!",
        "OBP-10025: wrong value for obp_limit parameter. Please send a positive integer (=>1)!",
        "OBP-10026: Failed to parse date string. Please use this format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'!",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "this_account": {
                  "type": "object",
                  "properties": {
                    "holders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "is_alias": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "account_routings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "scheme": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "bank_routing": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "scheme": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "details": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        }
                      }
                    },
                    "new_balance": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        }
                      }
                    },
                    "posted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completed": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user": {
                            "type": "object",
                            "properties": {
                              "display_name": {
                                "type": "string"
                              },
                              "provider": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "value": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "URL": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "display_name": {
                                "type": "string"
                              },
                              "provider": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "label": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "narrative": {
                      "type": "string"
                    },
                    "where": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "display_name": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "longitude": {
                          "type": "number"
                        },
                        "latitude": {
                          "type": "number"
                        }
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user": {
                            "type": "object",
                            "properties": {
                              "display_name": {
                                "type": "string"
                              },
                              "provider": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "value": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "other_account": {
                  "type": "object",
                  "properties": {
                    "holder": {
                      "type": "object",
                      "properties": {
                        "is_alias": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "image_URL": {
                          "type": "string"
                        },
                        "corporate_location": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "object",
                              "properties": {
                                "display_name": {
                                  "type": "string"
                                },
                                "provider": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            },
                            "date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "longitude": {
                              "type": "number"
                            },
                            "latitude": {
                              "type": "number"
                            }
                          }
                        },
                        "URL": {
                          "type": "string"
                        },
                        "open_corporates_URL": {
                          "type": "string"
                        },
                        "physical_location": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "object",
                              "properties": {
                                "display_name": {
                                  "type": "string"
                                },
                                "provider": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            },
                            "date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "longitude": {
                              "type": "number"
                            },
                            "latitude": {
                              "type": "number"
                            }
                          }
                        },
                        "public_alias": {
                          "type": "string"
                        },
                        "private_alias": {
                          "type": "string"
                        },
                        "more_info": {
                          "type": "string"
                        }
                      }
                    },
                    "account_routings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "scheme": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "bank_routing": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "scheme": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions"
    },
    {
      "operation_id": "OBPv4.0.0-createStandingOrderManagement",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createStandingOrderManagement"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/standing-order",
      "summary": "创建常规订单（管理）",
      "description": "<p>创建一个帐户的常规订单。 </p><p>当-&gt;频率= {&#39;YEARLY&#39;，&#39;MONTHLY，&#39;WEEKLY&#39;，&#39;BI-WEEKLY&#39;，DAILY&#39;} <br />当-&gt;详细信息= {&#39;FIRST_MONDAY&#39;，&#39;FIRST_DAY&#39;，&#39;LAST_DAY&#39;}} </p><p>身份验证是强制性的</p>",
      "description_markdown": "Create standing order for an account.\n\nwhen -> frequency = {‘YEARLY’,’MONTHLY, ‘WEEKLY’, ‘BI-WEEKLY’, DAILY’}\nwhen -> detail = { ‘FIRST_MONDAY’, ‘FIRST_DAY’, ‘LAST_DAY’}}\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "amount": {
          "currency": "EUR",
          "amount": "10"
        },
        "when": {
          "frequency": "YEARLY",
          "detail": "LAST_DAY"
        },
        "date_signed": "2017-09-18T22:00:00Z",
        "date_starts": "2017-09-18T22:00:00Z",
        "date_expires": "2017-09-18T22:00:00Z"
      },
      "success_response_body": {
        "standing_order_id": "aa0533bd-eb22-4bff-af75-d45240361b05",
        "bank_id": "GENODEM1GLS",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "amount": {
          "currency": "EUR",
          "amount": "10"
        },
        "date_signed": "2019-12-02T09:27:34Z",
        "date_starts": "2019-12-02T09:27:34Z",
        "date_expires": "2019-12-02T09:27:34Z",
        "date_cancelled": "2019-12-02T09:27:34Z",
        "active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. ",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-20057: User not found by userId.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Standing-Order",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "when": {
            "type": "object",
            "properties": {
              "detail": {
                "type": "string"
              },
              "frequency": {
                "type": "string"
              }
            }
          },
          "amount": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "standing_order_id": {
            "type": "string"
          },
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "counterparty_id": {
            "type": "string"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "date_cancelled": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "account_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/standing-order"
    },
    {
      "operation_id": "OBPv3.0.0-getCoreTransactionsForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getCoreTransactionsForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/my/banks/BANK_ID/accounts/ACCOUNT_ID/transactions",
      "summary": "获取帐户交易（核心）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Returns transactions list (Core info) of the account specified by ACCOUNT_ID.\n\nAuthentication is Mandatory\n\nPossible custom headers for pagination:\n\n* sort_direction=ASC/DESC ==> default value: DESC. The sort field is the completed date.\n* limit=NUMBER ==> default value: 50\n* offset=NUMBER ==> default value: 0\n* from_date=DATE => default value: 0000-00-00T00:00:00.000Z\n* to_date=DATE => default value: 3049-01-01T00:00:00.000Z\n\n**Date format parameter**: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(2017-09-19T02:31:05.000Z) ==> time zone is UTC.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "transactions": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "this_account": {
              "id": "String",
              "bank_routing": {
                "scheme": "Bank_ID",
                "address": "gh.29.uk"
              },
              "account_routings": [
                {
                  "scheme": "AccountNumber",
                  "address": "4930396"
                }
              ],
              "holders": [
                {
                  "name": "OBP",
                  "is_alias": true
                }
              ]
            },
            "other_account": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "holder": {
                "name": "OBP",
                "is_alias": true
              },
              "bank_routing": {
                "scheme": "Bank_ID",
                "address": "gh.29.uk"
              },
              "account_routings": [
                {
                  "scheme": "AccountNumber",
                  "address": "4930396"
                }
              ]
            },
            "details": {
              "type": "AC",
              "description": "OBP",
              "posted": "2017-09-18T22:00:00Z",
              "completed": "2017-09-18T22:00:00Z",
              "new_balance": {
                "currency": "EUR",
                "amount": "10"
              },
              "value": {
                "currency": "EUR",
                "amount": "10"
              }
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-10023: obp_sort_direction parameter can only take two values: DESC or ASC!",
        "OBP-10024: wrong value for obp_offset parameter. Please send a positive integer (=>0)!",
        "OBP-10025: wrong value for obp_limit parameter. Please send a positive integer (=>1)!",
        "OBP-10026: Failed to parse date string. Please use this format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'!",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Transaction",
        "Account Information Service (AIS)",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "details": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        }
                      }
                    },
                    "new_balance": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        }
                      }
                    },
                    "posted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completed": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "other_account": {
                  "type": "object",
                  "properties": {
                    "account_routings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "scheme": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "bank_routing": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "scheme": {
                          "type": "string"
                        }
                      }
                    },
                    "holder": {
                      "type": "object",
                      "properties": {
                        "is_alias": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "this_account": {
                  "type": "object",
                  "properties": {
                    "holders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "is_alias": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "account_routings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "scheme": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "bank_routing": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "scheme": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/my/banks/BANK_ID/accounts/ACCOUNT_ID/transactions"
    },
    {
      "operation_id": "OBPv4.0.0-updateDynamicEntity",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "updateDynamicEntity"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v4.0.0/management/dynamic_entities/DYNAMIC_ENTITY_ID",
      "summary": "更新DynamicEntity",
      "description": "<p>更新DynamicEntity。 </p><p>身份验证是强制性的</p><p>更新一个DynamicEntity，更新完成后，将更改相应的CRUD端点。 </p><p>当前的支持文件类型如下： <br /> [字符串，数字，整数，布尔值] </p>",
      "description_markdown": "Update a DynamicEntity.\n\n\nAuthentication is Mandatory\n\nUpdate one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.\n\nThe following field types are as supported:\n[string, number, integer, boolean]\n\n",
      "example_request_body": {
        "FooBar": {
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "James Brown"
            },
            "number": {
              "type": "integer",
              "example": 698761728
            }
          }
        }
      },
      "success_response_body": {
        "FooBar": {
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "James Brown"
            },
            "number": {
              "type": "integer",
              "example": 698761728
            }
          }
        },
        "dynamicEntityId": "dynamic-entity-id"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Dynamic-Entity",
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "FooBar": {
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "object",
                    "properties": {
                      "example": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "string",
                          "number",
                          "integer",
                          "boolean"
                        ]
                      }
                    }
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "example": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "string",
                          "number",
                          "integer",
                          "boolean"
                        ]
                      }
                    }
                  }
                }
              },
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamicEntityId": {
            "type": "string"
          },
          "FooBar": {
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "object",
                    "properties": {
                      "example": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "string",
                          "number",
                          "integer",
                          "boolean"
                        ]
                      }
                    }
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "example": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "string",
                          "number",
                          "integer",
                          "boolean"
                        ]
                      }
                    }
                  }
                }
              },
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateDynamicEntity",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/dynamic_entities/DYNAMIC_ENTITY_ID"
    },
    {
      "operation_id": "OBPv3.0.0-bankById",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "bankById"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID",
      "summary": "取得银行",
      "description": "<p>获取由BANK_ID指定的银行<br />返回有关BANK_ID指定的单个银行的信息，包括： </p><ul><li>银行简称</li><li>徽标网址</li><li>网站</li></ul>",
      "description_markdown": "Get the bank specified by BANK_ID\nReturns information about a single bank specified by BANK_ID including:\n\n* Short and full name of bank\n* Logo URL\n* Website",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "id": "gh.29.uk",
        "short_name": "short_name ",
        "full_name": "full_name",
        "logo": "logo",
        "website": "www.openbankproject.com",
        "bank_routing": {
          "scheme": "Bank_ID",
          "address": "gh.29.uk"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Bank",
        "Account Information Service (AIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "website": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "short_name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "bank_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID"
    },
    {
      "operation_id": "OBPv1.2.1-getWhereTagForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getWhereTagForViewOnTransaction"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where",
      "summary": "获取标签。",
      "description": "<p>返回添加到在<a href=\"#1_2_1-getViewsForBankAccount\">视图</a> （VIEW_ID）上进行的交易TRANSACTION_ID的“ where”地理标签。 <br />它代表交易已开始的位置。 </p><p>如果视图不是公开的，则需要通过OAuth进行身份验证。 </p>",
      "description_markdown": "Returns the \"where\" Geo tag added to the transaction TRANSACTION_ID made on a [view](#1_2_1-getViewsForBankAccount) (VIEW_ID).\nIt represents the location where the transaction has been initiated.\n\nAuthentication via OAuth is required if the view is not public.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "where": {
          "latitude": 1.231,
          "longitude": 1.231,
          "date": "2017-09-18T22:00:00Z",
          "user": {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "provider": "http://127.0.0.1:8080",
            "display_name": "OBP"
          }
        }
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "where": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              },
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where"
    },
    {
      "operation_id": "OBPv3.1.0-checkFundsAvailable",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "checkFundsAvailable"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/funds-available",
      "summary": "查看可用资金",
      "description": "<p>查看可用资金<br />强制性URL参数： </p><ul><li>数量= NUM​​BER </li><li>货币= STRING </li></ul>",
      "description_markdown": "Check Available Funds\nMandatory URL parameters:\n\n* amount=NUMBER\n* currency=STRING\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "answer": "yes",
        "date": "2019-12-02T09:27:34Z",
        "available_funds_request_id": "c4ykz59svsr9b7fmdxk8ezs7"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20054: Invalid amount. Please specify a valid value for amount.",
        "OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Account",
        "Confirmation of Funds Service (PIIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "available_funds_request_id": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "answer": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/funds-available"
    },
    {
      "operation_id": "OBPv1.4.0-createCustomerMessage",
      "implemented_by": {
        "version": "OBPv1.4.0",
        "function": "createCustomerMessage"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.4.0/banks/BANK_ID/customer/CUSTOMER_ID/messages",
      "summary": "创建客户留言。",
      "description": "<p>为CUSTOMER_ID指定的客户创建一条消息</p>",
      "description_markdown": "Create a message for the customer specified by CUSTOMER_ID",
      "example_request_body": {
        "message": "String",
        "from_department": "String",
        "from_person": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer-Message",
        "Customer",
        "Person"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "from_person": {
            "type": "string"
          },
          "from_department": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customer/CUSTOMER_ID/messages"
    },
    {
      "operation_id": "OBPv3.1.0-createProductCollection",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createProductCollection"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/product-collections/COLLECTION_CODE",
      "summary": "创建产品集",
      "description": "<p>在银行创建或更新产品集合。 </p><p>使用产品集合来创建产品“购物篮”，“组合”，“指数”，“集合”，“基础清单”，“桶”等。 </p><p>产品与产品系列之间存在多对多关系： </p><ul><li><p>一个产品可以存在于许多集合中</p></li><li><p>一个集合可以包含许多产品。 </p></li></ul><p>集合具有集合代码，一个父产品和一个或多个子产品。 </p><p>产品组vs产品系列： </p><ul><li><p>您可以使用Product中的parent_product_code定义产品的层次结构-以便子Product继承其父Product的属性。 </p></li><li><p>您可以使用“产品集合”定义产品的集合（也称为篮子或桶）。 </p></li></ul><p>身份验证是强制性的</p>",
      "description_markdown": "Create or Update a Product Collection at the Bank.\n\nUse Product Collections to create Product \"Baskets\", \"Portfolios\", \"Indices\", \"Collections\", \"Underlyings-lists\", \"Buckets\" etc. etc.\n\nThere is a many to many relationship between Products and Product Collections:\n\n* A Product can exist in many Collections\n\n* A Collection can contain many Products.\n\nA collection has collection code, one parent Product and one or more child Products.\n\n\n\n\nProduct hiearchy vs Product Collections:\n\n* You can define a hierarchy of products - so that a child Product inherits attributes of its parent Product -  using the parent_product_code in Product.\n\n* You can define a collection (also known as baskets or buckets) of products using Product Collections.\n\n      \n\nAuthentication is Mandatory\n\n\n",
      "example_request_body": {
        "parent_product_code": "A",
        "children_product_codes": [
          "B",
          "C",
          "D"
        ]
      },
      "success_response_body": {
        "product_collection": [
          {
            "collection_code": "C",
            "product_code": "D",
            "items": [
              {
                "member_product_code": "A"
              },
              {
                "member_product_code": "B"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Product-Collection",
        "Product"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "children_product_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parent_product_code": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "product_collection": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "member_product_code": {
                        "type": "string"
                      }
                    }
                  }
                },
                "product_code": {
                  "type": "string"
                },
                "collection_code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanMaintainProductCollection",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/product-collections/COLLECTION_CODE"
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyOpenCorporatesUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyOpenCorporatesUrl"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/open_corporates_url",
      "summary": "更新交易对手的公开公司网址",
      "description": "<p>更新其他银行帐户的未清公司网址。 </p>",
      "description_markdown": "Update open corporate url of other bank account.",
      "example_request_body": {
        "open_corporates_URL": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow updating an open corporate url",
        "URL cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "open_corporates_URL": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/open_corporates_url"
    },
    {
      "operation_id": "OBPv3.1.0-getProductTree",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getProductTree"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/product-tree/PRODUCT_CODE",
      "summary": "获取产品树",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Returns information about a particular financial product specified by BANK_ID and PRODUCT_CODE\nand it's parent product(s) recursively as specified by parent_product_code.\n\nEach product includes the following information.\n\n* Name\n* Code\n* Parent Product Code\n* Category\n* Family\n* Super Family\n* More info URL\n* Description\n* Terms and Conditions\n* License: The licence under which this product data is released. Licence can be an Open Data licence such as Open Data Commons Public Domain Dedication and License (PDDL) or Copyright etc.\n\n\n\nAuthentication is Mandatory",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "bank_id": "testBank2",
        "code": "PRODUCT_CODE",
        "name": "product name",
        "category": "category",
        "family": "family",
        "super_family": "super family",
        "more_info_url": "www.example.com/prod1/more-info.html",
        "details": "Details",
        "description": "Description",
        "meta": {
          "license": {
            "id": "5",
            "name": "TESOBE"
          }
        },
        "parent_product": {
          "bank_id": "testBank2",
          "code": "PARENT_CODE",
          "name": "product name",
          "category": "category",
          "family": "family",
          "super_family": "super family",
          "more_info_url": "www.example.com/prod1/more-info.html",
          "details": "Details",
          "description": "Description",
          "meta": {
            "license": {
              "id": "5",
              "name": "TESOBE"
            }
          },
          "parent_product": {
            "bank_id": "testBank2",
            "code": "GRANDPARENT_CODE",
            "name": "product name",
            "category": "category",
            "family": "family",
            "super_family": "super family",
            "more_info_url": "www.example.com/prod1/more-info.html",
            "details": "Details",
            "description": "Description",
            "meta": {
              "license": {
                "id": "5",
                "name": "TESOBE"
              }
            }
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30011: Product not found. Please specify a valid value for PRODUCT_CODE.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Product"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "super_family": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "more_info_url": {
            "type": "string"
          },
          "family": {
            "type": "string"
          },
          "parent_product": {
            "type": "object",
            "properties": {
              "super_family": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "details": {
                "type": "string"
              },
              "parent_product": {
                "type": "object",
                "properties": {
                  "super_family": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "details": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "more_info_url": {
                    "type": "string"
                  },
                  "family": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  },
                  "meta": {
                    "type": "object",
                    "properties": {
                      "license": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string"
                  }
                }
              },
              "code": {
                "type": "string"
              },
              "more_info_url": {
                "type": "string"
              },
              "family": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              },
              "meta": {
                "type": "object",
                "properties": {
                  "license": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "name": {
                "type": "string"
              },
              "category": {
                "type": "string"
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/product-tree/PRODUCT_CODE"
    },
    {
      "operation_id": "OBPv3.0.0-getAtms",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getAtms"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/atms",
      "summary": "获取银行ATMS",
      "description": "<p>返回有关BANK_ID指定的单个银行的ATM的信息，包括： </p><ul><li>地址</li><li>地理位置</li><li>许可此端点下的数据在以下位置发布</li></ul><p>分页： </p><p>默认情况下，返回100条记录。 </p><p>您可以使用url查询参数<em>limit</em>和<em>offset</em>进行分页</p><p>身份验证是可选的</p>",
      "description_markdown": "Returns information about ATMs for a single bank specified by BANK_ID including:\n\n* Address\n* Geo Location\n* License the data under this endpoint is released under\n\nPagination:\n\nBy default, 100 records are returned.\n\nYou can use the url query parameters *limit* and *offset* for pagination\n\nAuthentication is Optional",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "id": "atm-id-123",
        "bank_id": "GENODEM1GLS",
        "name": "Atm by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 11.45,
          "longitude": 11.45
        },
        "meta": {
          "license": {
            "id": "5",
            "name": "TESOBE"
          }
        },
        "monday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "tuesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "wednesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "thursday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "friday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "saturday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "sunday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "is_accessible": "true",
        "located_at": "Full service store",
        "more_info": "short walk to the lake from here",
        "has_deposit_capability": "true"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "No ATMs available. License may not be set.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "ATM",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "has_deposit_capability": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "friday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "monday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "saturday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "thursday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "tuesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "wednesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "sunday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              },
              "county": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "located_at": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/atms"
    },
    {
      "operation_id": "OBPv3.1.0-createTaxResidence",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createTaxResidence"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/tax-residence",
      "summary": "为客户增加税收居住",
      "description": "<p>向CUSTOMER_ID指定的客户添加税收住所。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Add a Tax Residence to the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "domain": "Enter some domain",
        "tax_number": "Enter some number"
      },
      "success_response_body": {
        "domain": "Enter some domain",
        "tax_number": "Enter some number",
        "tax_residence_id": "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "KYC",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "tax_number": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "tax_residence_id": {
            "type": "string"
          },
          "tax_number": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateTaxResidence",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/tax-residence"
    },
    {
      "operation_id": "OBPv2.1.0-createTransactionRequestSandboxTan",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "createTransactionRequestSandboxTan"
      },
      "request_verb": "POST",
      "request_url": "/obp/v2.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/SANDBOX_TAN/transaction-requests",
      "summary": "映射（类型-&gt;字符串）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "When using SANDBOX_TAN, the payee is set in the request body.\n\nMoney goes into the BANK_ID and ACCOUNT_ID specified in the request body.\n\nInitiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\n{\n  \"XAF\":{\n    \"HKD\":0.0135503,\n    \"AUD\":0.00228226,\n    \"KRW\":1.87975,\n    \"JOD\":0.00127784,\n    \"GBP\":0.00131092,\n    \"AED\":0.00601555,\n    \"INR\":0.110241,\n    \"JPY\":0.185328,\n    \"USD\":0.00163773,\n    \"ILS\":0.00641333,\n    \"EUR\":0.00152449\n  },\n  \"HKD\":{\n    \"XAF\":73.8049,\n    \"AUD\":0.178137,\n    \"KRW\":143.424,\n    \"JOD\":0.0903452,\n    \"GBP\":0.0985443,\n    \"AED\":0.467977,\n    \"INR\":9.09325,\n    \"JPY\":14.0867,\n    \"USD\":0.127427,\n    \"ILS\":0.460862,\n    \"EUR\":0.112495\n  },\n  \"AUD\":{\n    \"XAF\":438.162,\n    \"HKD\":5.61346,\n    \"KRW\":895.304,\n    \"JOD\":0.556152,\n    \"GBP\":0.609788,\n    \"AED\":2.88368,\n    \"INR\":50.4238,\n    \"JPY\":87.0936,\n    \"USD\":0.785256,\n    \"ILS\":2.83558,\n    \"EUR\":0.667969\n  },\n  \"KRW\":{\n    \"XAF\":0.531986,\n    \"HKD\":0.00697233,\n    \"AUD\":0.00111694,\n    \"JOD\":6.30634E-4,\n    \"GBP\":6.97389E-4,\n    \"AED\":0.00320019,\n    \"INR\":0.0586469,\n    \"JPY\":0.0985917,\n    \"USD\":8.7125E-4,\n    \"ILS\":0.00316552,\n    \"EUR\":8.11008E-4\n  },\n  \"JOD\":{\n    \"XAF\":782.572,\n    \"HKD\":11.0687,\n    \"AUD\":1.63992,\n    \"KRW\":1585.68,\n    \"GBP\":1.06757,\n    \"AED\":5.18231,\n    \"INR\":90.1236,\n    \"JPY\":156.304,\n    \"USD\":1.41112,\n    \"ILS\":5.02018,\n    \"EUR\":0.237707\n  },\n  \"GBP\":{\n    \"XAF\":762.826,\n    \"HKD\":10.1468,\n    \"AUD\":1.63992,\n    \"KRW\":1433.92,\n    \"JOD\":0.936707,\n    \"AED\":4.58882,\n    \"INR\":84.095,\n    \"JPY\":141.373,\n    \"USD\":1.2493,\n    \"ILS\":4.7002,\n    \"EUR\":1.16278\n  },\n  \"AED\":{\n    \"XAF\":166.236,\n    \"HKD\":2.13685,\n    \"AUD\":0.346779,\n    \"KRW\":312.482,\n    \"GBP\":0.217921,\n    \"AED\":0.192964,\n    \"INR\":18.3255,\n    \"JPY\":30.8081,\n    \"USD\":0.27225,\n    \"ILS\":0.968033,\n    \"EUR\":0.253425\n  },\n  \"INR\":{\n    \"XAF\":9.07101,\n    \"HKD\":0.109972,\n    \"AUD\":0.0198319,\n    \"KRW\":17.0512,\n    \"JOD\":0.0110959,\n    \"GBP\":0.0118913,\n    \"AED\":0.0545671,\n    \"JPY\":1.68111,\n    \"USD\":0.0148559,\n    \"ILS\":0.0556764,\n    \"EUR\":0.0138287\n  },\n  \"JPY\":{\n    \"XAF\":5.39585,\n    \"HKD\":0.0709891,\n    \"AUD\":0.0114819,\n    \"KRW\":10.1428,\n    \"JOD\":0.00639777,\n    \"GBP\":0.0070735,\n    \"AED\":0.032459,\n    \"INR\":0.594846,\n    \"USD\":0.00883695,\n    \"ILS\":0.0320926,\n    \"EUR\":0.00822592\n  },\n  \"USD\":{\n    \"XAF\":610.601,\n    \"HKD\":7.84766,\n    \"AUD\":1.27347,\n    \"KRW\":1147.78,\n    \"JOD\":0.708659,\n    \"GBP\":0.800446,\n    \"AED\":3.6731,\n    \"INR\":67.3135,\n    \"JPY\":113.161,\n    \"ILS\":3.55495,\n    \"EUR\":0.930886\n  },\n  \"ILS\":{\n    \"XAF\":155.925,\n    \"HKD\":2.16985,\n    \"AUD\":0.352661,\n    \"KRW\":315.903,\n    \"JOD\":0.199196,\n    \"GBP\":0.212763,\n    \"AED\":1.03302,\n    \"INR\":17.9609,\n    \"JPY\":31.1599,\n    \"USD\":0.281298,\n    \"EUR\":1.19318\n  },\n  \"EUR\":{\n    \"XAF\":655.957,\n    \"HKD\":8.88926,\n    \"AUD\":1.49707,\n    \"KRW\":1233.03,\n    \"JOD\":0.838098,\n    \"GBP\":0.860011,\n    \"AED\":3.94594,\n    \"INR\":72.3136,\n    \"JPY\":121.567,\n    \"USD\":1.07428,\n    \"ILS\":4.20494\n  }\n}\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\nAuthentication is Mandatory\n\n\n\n       ",
      "example_request_body": {
        "to": {
          "bank_id": "GENODEM1GLS",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "value": {
          "currency": "EUR",
          "amount": "10"
        },
        "description": "this is for work"
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "GENODEM1GLS",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "String"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "10"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": [
          "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
        ],
        "status": "COMPLETED",
        "start_date": "2017-09-18T22:00:00Z",
        "end_date": "2017-09-18T22:00:00Z",
        "challenge": {
          "id": "be1a183d-b301-4b83-b855-5eeffdd3526f",
          "allowed_attempts": 3,
          "challenge_type": "SANDBOX_TAN"
        },
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "10"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because you don't have access to the owner view of the from account or you don't have access to canCreateAnyTransactionRequest.",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Transaction-Request",
        "Payment Initiation Service (PIS)"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "to": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenge": {
            "type": "object",
            "properties": {
              "challenge_type": {
                "type": "string"
              },
              "allowed_attempts": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "string"
          },
          "charge": {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      },
                      "date_of_birth": {
                        "type": "string"
                      },
                      "legal_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "creditorName": {
                    "type": "string"
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "account": {
                        "type": "object",
                        "properties": {
                          "iban": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "branch_number": {
                        "type": "string"
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "future_date": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/SANDBOX_TAN/transaction-requests"
    },
    {
      "operation_id": "OBPv3.1.0-updateProductAttribute",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateProductAttribute"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/products/PRODUCT_CODE/attributes/PRODUCT_ATTRIBUTE_ID",
      "summary": "更新产品属性",
      "description": "<p>更新产品属性。 </p><p>产品属性用于描述带有类型化键值对列表的金融产品。 </p><p>每个产品属性均通过PRODUCT_CODE链接到其产品</p><p>通过其ID更新一个产品属性。 </p><p>身份验证是强制性的</p>",
      "description_markdown": " Update Product Attribute. \n\n\n\nProduct Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Product Attribute is linked to its Product by PRODUCT_CODE\n\n\n       \n\nUpdate one Product Attribute by its id.\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23"
      },
      "success_response_body": {
        "product_code": "saving1",
        "product_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23"
      },
      "error_response_bodies": [
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Product",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "product_attribute_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/products/PRODUCT_CODE/attributes/PRODUCT_ATTRIBUTE_ID"
    },
    {
      "operation_id": "OBPv1.2.1-deleteTagForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteTagForViewOnTransaction"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/tags/TAG_ID",
      "summary": "删除标签。",
      "description": "<p>删除有关在<a href=\"#1_2_1-getViewsForBankAccount\">view</a>上进行的交易TRANSACTION_ID的标签TAG_ID。 <br />需要通过OAuth进行身份验证。用户必须对此帐户拥有所有者权限， <br />或必须是发布标签的用户。 </p>",
      "description_markdown": "Deletes the tag TAG_ID about the transaction TRANSACTION_ID made on [view](#1_2_1-getViewsForBankAccount).\nAuthentication via OAuth is required. The user must either have owner privileges for this account, \nor must be the user that posted the tag.\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/tags/TAG_ID"
    },
    {
      "operation_id": "OBPv1.2.1-getOtherAccountForTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getOtherAccountForTransaction"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/other_account",
      "summary": "获取其他交易帐户",
      "description": "<p>获取交易的其他帐户。 <br />返回由<a href=\"#1_2_1-getViewsForBankAccount\">视图</a> （VIEW_ID）主持的交易中涉及的另一方的详细信息。 <br />如果视图不是公开的，则需要通过OAuth进行身份验证。 </p>",
      "description_markdown": "Get other account of a transaction.\nReturns details of the other party involved in the transaction, moderated by the [view](#1_2_1-getViewsForBankAccount) (VIEW_ID).\n          Authentication via OAuth is required if the view is not public.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "holder": {
          "name": "OBP",
          "is_alias": true
        },
        "number": "123",
        "kind": "3456",
        "IBAN": "UK234DB",
        "swift_bic": "UK12321DB",
        "bank": {
          "national_identifier": "OBP",
          "name": "OBP"
        },
        "metadata": {
          "public_alias": "NONE",
          "private_alias": "NONE",
          "more_info": "www.openbankproject.com",
          "URL": "www.openbankproject.com",
          "image_URL": "www.openbankproject.com",
          "open_corporates_URL": "www.openbankproject.com",
          "corporate_location": {
            "latitude": 1.231,
            "longitude": 1.231,
            "date": "2017-09-18T22:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          },
          "physical_location": {
            "latitude": 1.231,
            "longitude": 1.231,
            "date": "2017-09-18T22:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        }
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "IBAN": {
            "type": "string"
          },
          "swift_bic": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "holder": {
            "type": "object",
            "properties": {
              "is_alias": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "image_URL": {
                "type": "string"
              },
              "corporate_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "display_name": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "URL": {
                "type": "string"
              },
              "open_corporates_URL": {
                "type": "string"
              },
              "physical_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "display_name": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "public_alias": {
                "type": "string"
              },
              "private_alias": {
                "type": "string"
              },
              "more_info": {
                "type": "string"
              }
            }
          },
          "bank": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "national_identifier": {
                "type": "string"
              }
            }
          },
          "kind": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/other_account"
    },
    {
      "operation_id": "OBPv3.0.0-getAdapterInfoForBank",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getAdapterInfoForBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/adapter",
      "summary": "获取银行的适配器信息",
      "description": "<p>获取有关代表该银行进行监听的适配器的基本信息。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get basic information about the Adapter listening on behalf of this bank.\n\nAuthentication is Mandatory\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "name": "String",
        "version": "String",
        "git_commit": "String",
        "date": "2013-01-21T23:08:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "git_commit": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/adapter"
    },
    {
      "operation_id": "OBPv4.0.0-createTransactionRequestFreeForm",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createTransactionRequestFreeForm"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/FREE_FORM/transaction-requests",
      "summary": "映射（类型-&gt;字符串）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Initiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\nlocalhost:8082/more?version=OBPv4.0.0&list-all-banks=false&core=&psd2=&obwg=#OBPv2_2_0-getCurrentFxRate\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\nAuthentication is Mandatory\n\n\n\n       ",
      "example_request_body": {
        "value": {
          "currency": "EUR",
          "amount": "10"
        },
        "description": "This is a FREE_FORM Transaction Request"
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "GENODEM1GLS",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "String"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "10"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": [
          "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
        ],
        "status": "COMPLETED",
        "start_date": "2017-09-18T22:00:00Z",
        "end_date": "2017-09-18T22:00:00Z",
        "challenge": {
          "id": "be1a183d-b301-4b83-b855-5eeffdd3526f",
          "allowed_attempts": 3,
          "challenge_type": "SANDBOX_TAN"
        },
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "10"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because you don't have access to the owner view of the from account or you don't have access to canCreateAnyTransactionRequest.",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Request",
        "Payment Initiation Service (PIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenge": {
            "type": "object",
            "properties": {
              "challenge_type": {
                "type": "string"
              },
              "allowed_attempts": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "string"
          },
          "charge": {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      },
                      "date_of_birth": {
                        "type": "string"
                      },
                      "legal_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "creditorName": {
                    "type": "string"
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "account": {
                        "type": "object",
                        "properties": {
                          "iban": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "branch_number": {
                        "type": "string"
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "future_date": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateAnyTransactionRequest",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/FREE_FORM/transaction-requests"
    },
    {
      "operation_id": "OBPv3.1.0-deleteSystemView",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteSystemView"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/system-views/VIEW_ID",
      "summary": "删除系统视图",
      "description": "<p>删除VIEW_ID指定的系统视图。 </p>",
      "description_markdown": "Deletes the system view specified by VIEW_ID.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error.",
        "user does not have owner access"
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "System-View",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateSystemView",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/system-views/VIEW_ID"
    },
    {
      "operation_id": "OBPv4.0.0-addAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "addAccount"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts",
      "summary": "创建帐户（POST）",
      "description": "<p>在BANK_ID指定的银行创建帐户。 </p><p>用户可以为自己创建一个帐户-或-在POST正文中指定了USER_ID的用户。 </p><p>如果指定了POST体USER_ID <em>时</em> ，登录的用户必须具有角色CanCreateAccount。创建帐户后，该帐户将归USER_ID指定的用户所有。 </p><p>如果<em>未</em>指定POST正文USER_ID，则该帐户将由登录的用户拥有。 </p><p> “ product_code”字段应为Product的product_code。 <br />如果product_code与Product中的product_code匹配，则将创建与Product Attributes匹配的帐户属性。 </p><p>注意：金额必须为零。 </p>",
      "description_markdown": "Create Account at bank specified by BANK_ID.\n\nThe User can create an Account for himself  - or -  the User that has the USER_ID specified in the POST body.\n\nIf the POST body USER_ID *is* specified, the logged in user must have the Role CanCreateAccount. Once created, the Account will be owned by the User specified by USER_ID.\n\nIf the POST body USER_ID is *not* specified, the account will be owned by the logged in User.\n\nThe 'product_code' field SHOULD be a product_code from Product.\nIf the product_code matches a product_code from Product, account attributes will be created that match the Product Attributes.\n\nNote: The Amount MUST be zero.",
      "example_request_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "label": "My Account",
        "product_code": "AC",
        "balance": {
          "currency": "EUR",
          "amount": "10"
        },
        "branch_id": "DERBY6",
        "account_routing": {
          "scheme": "AccountNumber",
          "address": "4930396"
        },
        "account_attributes": [
          {
            "product_code": "saving1",
            "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "name": "OVERDRAFT_START_DATE",
            "type": "DATE_WITH_DAY",
            "value": "2012-04-23"
          }
        ]
      },
      "success_response_body": {
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "label": "My Account",
        "product_code": "AC",
        "balance": {
          "currency": "EUR",
          "amount": "10"
        },
        "branch_id": "DERBY6",
        "account_routing": {
          "scheme": "AccountNumber",
          "address": "4930396"
        },
        "account_attributes": [
          {
            "product_code": "saving1",
            "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "name": "OVERDRAFT_START_DATE",
            "type": "DATE_WITH_DAY",
            "value": "2012-04-23"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30106: Invalid Balance Amount.",
        "OBP-30112: Invalid Number. Initial balance must be a number, e.g 1000.00",
        "OBP-30109: Initial Balance of Account must be Zero (0).",
        "OBP-30105: Invalid Balance Currency.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account",
        "Onboarding"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "account_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "account_attribute_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                }
              }
            }
          },
          "label": {
            "type": "string"
          },
          "account_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          },
          "balance": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "product_code": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "account_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "account_attribute_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                }
              }
            }
          },
          "label": {
            "type": "string"
          },
          "account_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          },
          "balance": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "product_code": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateAccount",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts"
    },
    {
      "operation_id": "OBPv3.0.0-getUser",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getUser"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/users/email/EMAIL/terminator",
      "summary": "通过电子邮件地址获取用户",
      "description": "<p>通过电子邮件地址获取用户</p><p>身份验证是强制性的<br />必须具有CanGetAnyUser授权， </p>",
      "description_markdown": "Get users by email address\n\nAuthentication is Mandatory\nCanGetAnyUser entitlement is required,\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "users": [
          {
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "email": "eveline@example.com",
            "provider_id": "Chris",
            "provider": "http://127.0.0.1:8080",
            "username": "felixsmith",
            "entitlements": {
              "list": [
                {
                  "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
                  "role_name": "CanQueryOtherUser",
                  "bank_id": "GENODEM1GLS"
                }
              ]
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-20007: User not found by email.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "entitlements": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "bank_id": {
                            "type": "string"
                          },
                          "role_name": {
                            "type": "string"
                          },
                          "entitlement_id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "provider": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "provider_id": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyUser",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/email/EMAIL/terminator"
    },
    {
      "operation_id": "OBPv3.1.0-updateCardAttribute",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCardAttribute"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/cards/CARD_ID/attributes/CARD_ATTRIBUTE_ID",
      "summary": "更新卡属性",
      "description": "<p>更新卡属性</p><p>卡属性用于描述带有键入的键值对列表的金融产品。 </p><p>每个卡属性都通过CARD_ID链接到其卡</p><p>身份验证是强制性的</p>",
      "description_markdown": " Update Card Attribute\n\nCard Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Card Attribute is linked to its Card by CARD_ID\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "name": "OVERDRAFT_START_DATE",
        "type": "DOUBLE",
        "value": "2012-04-23"
      },
      "success_response_body": {
        "name": "OVERDRAFT_START_DATE",
        "card_id": "36f8a9e6-c2b1-407a-8bd0-421b7119307e ",
        "attribute_type": "DOUBLE",
        "bank_id": {
          "value": "GENODEM1GLS"
        },
        "value": "2012-04-23",
        "card_attribute_id": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Card",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "attribute_type": {
            "type": "string",
            "enum": [
              "STRING",
              "INTEGER",
              "DOUBLE",
              "DATE_WITH_DAY"
            ]
          },
          "card_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "card_attribute_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/banks/BANK_ID/cards/CARD_ID/attributes/CARD_ATTRIBUTE_ID"
    },
    {
      "operation_id": "OBPv1.2.1-addImageForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addImageForViewOnTransaction"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/images",
      "summary": "添加图像。",
      "description": "<p>在<a href=\"#1_2_1-getViewsForBankAccount\">视图</a> VIEW_ID上发布有关交易TRANSACTION_ID的图像。 </p><p>身份验证是强制性的</p><p>该图像与用户链接。 </p>",
      "description_markdown": "Posts an image about a transaction TRANSACTION_ID on a [view](#1_2_1-getViewsForBankAccount) VIEW_ID.\n\nAuthentication is Mandatory\n\nThe image is linked with the user.",
      "example_request_body": {
        "label": "String",
        "URL": "String"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "label": "NONE",
        "URL": "www.openbankproject.com",
        "date": "2017-09-18T22:00:00Z",
        "user": {
          "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
          "provider": "http://127.0.0.1:8080",
          "display_name": "OBP"
        }
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-10017: Incorrect URL Format. ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "URL": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "URL": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "display_name": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "label": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/images"
    },
    {
      "operation_id": "OBPv3.1.0-getObpConnectorLoopback",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getObpConnectorLoopback"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/connector/loopback",
      "summary": "获取连接器状态（环回）",
      "description": "<p>该端点调用连接器以检查后端传输（例如Kafka）是否可以到达。 </p><p>当前，这仅适用于基于Kafka的连接器。 </p><p>对于基于Kafka的连接器，此端点将消息写入Kafka并再次读取。 </p><p>将来，此端点还可能返回有关数据库连接等的信息。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "This endpoint makes a call to the Connector to check the backend transport (e.g. Kafka) is reachable.\n\nCurrently this is only implemented for Kafka based connectors.\n\nFor Kafka based connectors, this endpoint writes a message to Kafka and reads it again.\n\nIn the future, this endpoint may also return information about database connections etc.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "connector_version": "kafka_vSept2018",
        "git_commit": "f0acd4be14cdcb94be3433ec95c1ad65228812a0",
        "duration_time": "10 ms"
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "duration_time": {
            "type": "string"
          },
          "git_commit": {
            "type": "string"
          },
          "connector_version": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/connector/loopback"
    },
    {
      "operation_id": "OBPv3.1.0-createUserAuthContextUpdate",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createUserAuthContextUpdate"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/users/current/auth-context-updates/SCA_METHOD",
      "summary": "创建用户身份验证上下文更新",
      "description": "<p>创建用户身份验证上下文更新。 <br />身份验证是强制性的</p><p>通过SCA_METHOD中定义的传输，将一次性密码（OTP）（又称为安全性挑战）发送给用户（OOB） <br /> SCA_METHOD通常是“ SMS”或“ EMAIL”。 “ EMAIL”用于测试目的。 </p>",
      "description_markdown": "Create User Auth Context Update.\nAuthentication is Mandatory\n\nA One Time Password (OTP) (AKA security challenge) is sent Out of Band (OOB) to the User via the transport defined in SCA_METHOD\nSCA_METHOD is typically \"SMS\" or \"EMAIL\". \"EMAIL\" is used for testing purposes.\n\n",
      "example_request_body": {
        "key": "CUSTOMER_NUMBER",
        "value": "78987432"
      },
      "success_response_body": {
        "user_auth_context_update_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "key": "CUSTOMER_NUMBER",
        "value": "78987432",
        "status": "INITIATED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30053: Could not insert the UserAuthContext",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user_auth_context_update_id": {
            "type": "string",
            "format": "date-time"
          },
          "key": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateUserAuthContextUpdate",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/users/current/auth-context-updates/SCA_METHOD"
    },
    {
      "operation_id": "OBPv3.1.0-createCreditLimitRequest",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createCreditLimitRequest"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/credit_limit/requests",
      "summary": "创建信用额度订单请求",
      "description": "<p> <strong>注意：此端点当前仅返回示例数据。</strong> </p><p>创建信用额度订单请求</p>",
      "description_markdown": "**NOTE: This endpoint currently only returns example data.**\n\n      \nCreate credit limit order request\n",
      "example_request_body": {
        "requested_current_rate_amount1": "String",
        "requested_current_rate_amount2": "String",
        "requested_current_valid_end_date": "String",
        "current_credit_documentation": "String",
        "temporary_requested_current_amount": "String",
        "requested_temporary_valid_end_date": "String",
        "temporary_credit_documentation": "String"
      },
      "success_response_body": {
        "execution_time": "String",
        "execution_date": "String",
        "token": "String",
        "short_reference": "String"
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Customer",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "requested_temporary_valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "current_credit_documentation": {
            "type": "string"
          },
          "temporary_requested_current_amount": {
            "type": "string"
          },
          "requested_current_valid_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "requested_current_rate_amount1": {
            "type": "string"
          },
          "requested_current_rate_amount2": {
            "type": "string"
          },
          "temporary_credit_documentation": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "short_reference": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "execution_date": {
            "type": "string",
            "format": "date-time"
          },
          "execution_time": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/credit_limit/requests"
    },
    {
      "operation_id": "OBPv2.1.0-getTransactionRequestTypesSupportedByBank",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "getTransactionRequestTypesSupportedByBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.1.0/banks/BANK_ID/transaction-request-types",
      "summary": "获取支持的交易请求类型",
      "description": "<p>获取银行支持的交易请求类型列表。 </p><p>身份验证是可选的</p>",
      "description_markdown": "Get the list of the Transaction Request Types supported by the bank.\n\nAuthentication is Optional\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "transaction_request_types": [
          {
            "transaction_request_type": "SandboxTan"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Request",
        "Bank"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transaction_request_types": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "transaction_request_type": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/transaction-request-types"
    },
    {
      "operation_id": "OBPv3.1.0-getMessageDocsSwagger",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getMessageDocsSwagger"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/message-docs/CONNECTOR/swagger2.0",
      "summary": "获取消息文档招摇",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "\nThis endpoint provides example message docs in swagger format.\nIt is only relavent for REST Connectors.\n\nThis endpoint can be used by the developer building a REST Adapter that connects to the Core Banking System (CBS).\nThat is, the Adapter developer can use the Swagger surfaced here to build the REST APIs that the OBP REST connector will call to consume CBS services.\n\ni.e.:\n\nOBP API (Core OBP API code) -> OBP REST Connector (OBP REST Connector code) -> OBP REST Adapter (Adapter developer code) -> CBS (Main Frame)\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "message_docs": [
          {
            "process": "getAccounts",
            "message_format": "KafkaV2017",
            "outbound_topic": "to.obp.api.1.caseclass.OutboundGetAccounts",
            "inbound_topic": "from.obp.api.1.to.adapter.mf.caseclass.OutboundGetAccounts",
            "description": "get Banks",
            "example_outbound_message": {
              "jsonString": "{}"
            },
            "example_inbound_message": {
              "jsonString": "{}"
            },
            "outboundAvroSchema": {
              "jsonString": "{}"
            },
            "inboundAvroSchema": {
              "jsonString": "{}"
            },
            "adapter_implementation": {
              "group": "CORE",
              "suggested_order": 3
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Documentation",
        "API"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "message_docs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "inbound_topic": {
                  "type": "string"
                },
                "message_format": {
                  "type": "string"
                },
                "outbound_topic": {
                  "type": "string"
                },
                "outboundAvroSchema": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                },
                "adapter_implementation": {
                  "type": "object",
                  "properties": {
                    "suggested_order": {
                      "type": "integer"
                    },
                    "group": {
                      "type": "string"
                    }
                  }
                },
                "example_inbound_message": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                },
                "process": {
                  "type": "string"
                },
                "inboundAvroSchema": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                },
                "description": {
                  "type": "string"
                },
                "example_outbound_message": {
                  "type": "object",
                  "properties": {
                    "jsonString": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/message-docs/CONNECTOR/swagger2.0"
    },
    {
      "operation_id": "OBPv4.0.0-createDynamicEntity",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createDynamicEntity"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/dynamic_entities",
      "summary": "创建动态实体",
      "description": "<p>创建一个DynamicEntity。 </p><p>身份验证是强制性的</p><p>创建一个DynamicEntity，创建成功后，将自动生成相应的CRUD端点</p><p>当前的支持文件类型如下： <br /> [字符串，数字，整数，布尔值] </p>",
      "description_markdown": "Create a DynamicEntity.\n\n\nAuthentication is Mandatory\n\nCreate a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically\n\nThe following field types are as supported:\n[string, number, integer, boolean]\n\n",
      "example_request_body": {
        "FooBar": {
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "James Brown"
            },
            "number": {
              "type": "integer",
              "example": 698761728
            }
          }
        }
      },
      "success_response_body": {
        "FooBar": {
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "James Brown"
            },
            "number": {
              "type": "integer",
              "example": 698761728
            }
          }
        },
        "dynamicEntityId": "dynamic-entity-id"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Dynamic-Entity",
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "FooBar": {
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "object",
                    "properties": {
                      "example": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "string",
                          "number",
                          "integer",
                          "boolean"
                        ]
                      }
                    }
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "example": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "string",
                          "number",
                          "integer",
                          "boolean"
                        ]
                      }
                    }
                  }
                }
              },
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamicEntityId": {
            "type": "string"
          },
          "FooBar": {
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "object",
                    "properties": {
                      "example": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "string",
                          "number",
                          "integer",
                          "boolean"
                        ]
                      }
                    }
                  },
                  "name": {
                    "type": "object",
                    "properties": {
                      "example": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "string",
                          "number",
                          "integer",
                          "boolean"
                        ]
                      }
                    }
                  }
                }
              },
              "required": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateDynamicEntity",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/dynamic_entities"
    },
    {
      "operation_id": "OBPv4.0.0-getBanks",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getBanks"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks",
      "summary": "获取银行",
      "description": "<p>获取此API实例上的银行<br />返回此服务器支持的银行列表： </p><ul><li>网址中用作参数的ID </li><li>银行简称</li><li>徽标网址</li><li>网站</li></ul>",
      "description_markdown": "Get banks on this API instance\nReturns a list of banks supported on this server:\n\n* ID used as parameter in URLs\n* Short and full name of bank\n* Logo URL\n* Website",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "banks": [
          {
            "id": "gh.29.uk",
            "short_name": "short_name ",
            "full_name": "full_name",
            "logo": "logo",
            "website": "www.openbankproject.com",
            "bank_routing": {
              "scheme": "Bank_ID",
              "address": "gh.29.uk"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Bank",
        "Account Information Service (AIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "banks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "website": {
                  "type": "string"
                },
                "logo": {
                  "type": "string"
                },
                "short_name": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "full_name": {
                  "type": "string"
                },
                "bank_routing": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "scheme": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks"
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyPhysicalLocation",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyPhysicalLocation"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/physical_location",
      "summary": "更新交易对手的实际位置",
      "description": "<p>更新交易对手主要地点的地理坐标</p>",
      "description_markdown": "Update geocoordinates of the counterparty's main location",
      "example_request_body": {
        "physical_location": {
          "latitude": 1.532,
          "longitude": 1.535
        }
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow updating a physical location",
        "Coordinates not possible",
        "Physical Location cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "physical_location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/physical_location"
    },
    {
      "operation_id": "OBPv3.0.0-getBranches",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getBranches"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/branches",
      "summary": "获取银行分行",
      "description": "<p>返回有关BANK_ID指定的单个银行的分支机构的信息，包括： </p><ul><li>名称</li><li>地址</li><li>地理位置</li><li>许可此端点下的数据在以下位置发布</li><li>结构化开放时间</li><li>无障碍标志</li><li>分行类型</li><li>更多信息</li></ul><p>分页： </p><p>默认情况下，返回50条记录。 </p><p>您可以使用url查询参数<em>limit</em>和<em>offset</em>进行分页<br />您还可以使用以下url查询参数： </p><ul><li><p> city-字符串，找到该城市的分支，可选</p></li><li><p> insideMetersOf-数字，在给定的米距离内查找分支，可选</p></li><li> nearLatitude-数字，纬度值的位置，与MetersOf做查询过滤器配合使用，可选</li><li> nearLongitude-数字，经度值的位置，与MetersOf一起做查询过滤器，可选</li></ul><p>注意：在仪表内部，nearLatitude和nearLongitude都为空或都具有值。 </p><p>身份验证是可选的</p>",
      "description_markdown": "Returns information about branches for a single bank specified by BANK_ID including:\n\n* Name\n* Address\n* Geo Location\n* License the data under this endpoint is released under\n* Structured opening hours\n* Accessible flag\n* Branch Type\n* More Info\n\nPagination:\n\nBy default, 50 records are returned.\n\nYou can use the url query parameters *limit* and *offset* for pagination\nYou can also use the follow url query parameters:\n\n  - city - string, find Branches those in this city, optional\n\n\n  - withinMetersOf - number, find Branches within given meters distance, optional\n  - nearLatitude - number, a position of latitude value, cooperate with withMetersOf do query filter, optional\n  - nearLongitude - number, a position of longitude value, cooperate with withMetersOf do query filter, optional\n\nnote: withinMetersOf, nearLatitude and nearLongitude either all empty or all have value.\n\nAuthentication is Optional",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "branches": [
          {
            "id": "branch-id-123",
            "bank_id": "bank-id-123",
            "name": "Branch by the Lake",
            "address": {
              "line_1": "No 1 the Road",
              "line_2": "The Place",
              "line_3": "The Hill",
              "city": "Berlin",
              "county": "String",
              "state": "Brandenburg",
              "postcode": "13359",
              "country_code": "DE"
            },
            "location": {
              "latitude": 10.0,
              "longitude": 10.0
            },
            "meta": {
              "license": {
                "id": "PDDL",
                "name": "Open Data Commons Public Domain Dedication and License "
              }
            },
            "lobby": {
              "monday": [
                {
                  "opening_time": "10:00",
                  "closing_time": "18:00"
                }
              ],
              "tuesday": [
                {
                  "opening_time": "10:00",
                  "closing_time": "18:00"
                }
              ],
              "wednesday": [
                {
                  "opening_time": "10:00",
                  "closing_time": "18:00"
                }
              ],
              "thursday": [
                {
                  "opening_time": "10:00",
                  "closing_time": "18:00"
                }
              ],
              "friday": [
                {
                  "opening_time": "10:00",
                  "closing_time": "18:00"
                }
              ],
              "saturday": [
                {
                  "opening_time": "10:00",
                  "closing_time": "18:00"
                }
              ],
              "sunday": [
                {
                  "opening_time": "10:00",
                  "closing_time": "18:00"
                }
              ]
            },
            "drive_up": {
              "monday": {
                "opening_time": "10:00",
                "closing_time": "18:00"
              },
              "tuesday": {
                "opening_time": "10:00",
                "closing_time": "18:00"
              },
              "wednesday": {
                "opening_time": "10:00",
                "closing_time": "18:00"
              },
              "thursday": {
                "opening_time": "10:00",
                "closing_time": "18:00"
              },
              "friday": {
                "opening_time": "10:00",
                "closing_time": "18:00"
              },
              "saturday": {
                "opening_time": "10:00",
                "closing_time": "18:00"
              },
              "sunday": {
                "opening_time": "10:00",
                "closing_time": "18:00"
              }
            },
            "branch_routing": {
              "scheme": "OBP",
              "address": "123abc"
            },
            "is_accessible": "true",
            "accessibleFeatures": "wheelchair, atm usuable by the visually impaired",
            "branch_type": "Full service store",
            "more_info": "short walk to the lake from here",
            "phone_number": "+381631954907"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "No branches available. License may not be set.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Branch",
        "Bank",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "branches": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "accessibleFeatures": {
                  "type": "string"
                },
                "more_info": {
                  "type": "string"
                },
                "branch_type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "longitude": {
                      "type": "number"
                    },
                    "latitude": {
                      "type": "number"
                    }
                  }
                },
                "id": {
                  "type": "string"
                },
                "is_accessible": {
                  "type": "string"
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "city": {
                      "type": "string"
                    },
                    "county": {
                      "type": "string"
                    },
                    "postcode": {
                      "type": "string"
                    },
                    "line_1": {
                      "type": "string"
                    },
                    "line_2": {
                      "type": "string"
                    },
                    "line_3": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "country_code": {
                      "type": "string"
                    }
                  }
                },
                "drive_up": {
                  "type": "object",
                  "properties": {
                    "friday": {
                      "type": "object",
                      "properties": {
                        "closing_time": {
                          "type": "string"
                        },
                        "opening_time": {
                          "type": "string"
                        }
                      }
                    },
                    "monday": {
                      "type": "object",
                      "properties": {
                        "closing_time": {
                          "type": "string"
                        },
                        "opening_time": {
                          "type": "string"
                        }
                      }
                    },
                    "saturday": {
                      "type": "object",
                      "properties": {
                        "closing_time": {
                          "type": "string"
                        },
                        "opening_time": {
                          "type": "string"
                        }
                      }
                    },
                    "thursday": {
                      "type": "object",
                      "properties": {
                        "closing_time": {
                          "type": "string"
                        },
                        "opening_time": {
                          "type": "string"
                        }
                      }
                    },
                    "tuesday": {
                      "type": "object",
                      "properties": {
                        "closing_time": {
                          "type": "string"
                        },
                        "opening_time": {
                          "type": "string"
                        }
                      }
                    },
                    "wednesday": {
                      "type": "object",
                      "properties": {
                        "closing_time": {
                          "type": "string"
                        },
                        "opening_time": {
                          "type": "string"
                        }
                      }
                    },
                    "sunday": {
                      "type": "object",
                      "properties": {
                        "closing_time": {
                          "type": "string"
                        },
                        "opening_time": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "branch_routing": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "scheme": {
                      "type": "string"
                    }
                  }
                },
                "phone_number": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "license": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "lobby": {
                  "type": "object",
                  "properties": {
                    "saturday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "closing_time": {
                            "type": "string"
                          },
                          "opening_time": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "tuesday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "closing_time": {
                            "type": "string"
                          },
                          "opening_time": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "monday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "closing_time": {
                            "type": "string"
                          },
                          "opening_time": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "friday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "closing_time": {
                            "type": "string"
                          },
                          "opening_time": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "sunday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "closing_time": {
                            "type": "string"
                          },
                          "opening_time": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "wednesday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "closing_time": {
                            "type": "string"
                          },
                          "opening_time": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "thursday": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "closing_time": {
                            "type": "string"
                          },
                          "opening_time": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/branches"
    },
    {
      "operation_id": "OBPv3.1.0-getCustomerByCustomerId",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCustomerByCustomerId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID",
      "summary": "通过CUSTOMER_ID获取客户",
      "description": "<p>获取由CUSTOMER_ID指定的客户。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Gets the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "eveline@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "2017-09-18T22:00:00Z"
        },
        "date_of_birth": "2017-09-18T22:00:00Z",
        "relationship_status": "single",
        "dependants": 10,
        "dob_of_dependants": [
          "2017-09-18T22:00:00Z"
        ],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "10"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2017-09-18T22:00:00Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "employment_status": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "rating": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "dependants": {
            "type": "integer"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID"
    },
    {
      "operation_id": "OBPv3.1.0-getFirehoseCustomers",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getFirehoseCustomers"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/firehose/customers",
      "summary": "获取Firehose客户",
      "description": "<p>获得具有流水线视图的客户。 </p><p>允许批量访问客户。 <br />用户必须具有CanUseFirehoseAtAnyBank角色</p><p>用于分页的可能的自定义URL参数： </p><ul><li> sort_direction = ASC / DESC </li><li>限制= NUM​​BER ==&gt;默认值：50 </li><li>偏移量= NUM​​BER ==&gt;默认值：0 </li><li> from_date = DATE =&gt;默认值：创建最早的客户的日期（格式如下） </li><li> to_date = DATE =&gt;默认值：创建的最新客户的日期（格式如下） </li></ul><p> <strong>日期格式参数</strong> ：yyyy-MM-dd&#39;T&#39;HH：mm：ss.SSS&#39;Z&#39;（2017-09-19T02：31：05.000Z）==&gt;时区为UTC。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "\nGet Customers that has a firehose View.\n\nAllows bulk access to customers.\nUser must have the CanUseFirehoseAtAnyBank Role\n\nPossible custom URL parameters for pagination:\n\n* sort_direction=ASC/DESC\n* limit=NUMBER ==> default value: 50\n* offset=NUMBER ==> default value: 0\n* from_date=DATE => default value: date of the oldest customer created (format below)\n* to_date=DATE => default value: date of the newest customer created (format below)\n\n**Date format parameter**: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(2017-09-19T02:31:05.000Z) ==> time zone is UTC.\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "customers": [
          {
            "bank_id": "GENODEM1GLS",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "customer_number": "5987953",
            "legal_name": "Eveline Tripman",
            "mobile_phone_number": "+44 07972 444 876",
            "email": "eveline@example.com",
            "face_image": {
              "url": "www.openbankproject",
              "date": "2017-09-18T22:00:00Z"
            },
            "date_of_birth": "2017-09-18T22:00:00Z",
            "relationship_status": "single",
            "dependants": 10,
            "dob_of_dependants": [
              "2017-09-18T22:00:00Z"
            ],
            "credit_rating": {
              "rating": "OBP",
              "source": "OBP"
            },
            "credit_limit": {
              "currency": "EUR",
              "amount": "10"
            },
            "highest_education_attained": "Master",
            "employment_status": "worker",
            "kyc_status": true,
            "last_ok_date": "2017-09-18T22:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-00009: Account firehose is not allowed on this instance. Please set allow_account_firehose = true in props files. ",
        "OBP-00012: Customer firehose is not allowed on this instance. Please set allow_customer_firehose = true in props files. ",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "FirehoseData",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "dob_of_dependants": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "employment_status": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "relationship_status": {
                  "type": "string"
                },
                "date_of_birth": {
                  "type": "string",
                  "format": "date-time"
                },
                "last_ok_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "highest_education_attained": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "credit_rating": {
                  "type": "object",
                  "properties": {
                    "source": {
                      "type": "string"
                    },
                    "rating": {
                      "type": "string"
                    }
                  }
                },
                "credit_limit": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string"
                    }
                  }
                },
                "dependants": {
                  "type": "integer"
                },
                "legal_name": {
                  "type": "string"
                },
                "face_image": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                },
                "mobile_phone_number": {
                  "type": "string"
                },
                "kyc_status": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanUseFirehoseAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/firehose/customers"
    },
    {
      "operation_id": "OBPv3.0.0-getOtherAccountsForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getOtherAccountsForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts",
      "summary": "获取一个帐户的其他帐户。",
      "description": "<p>返回有关所有其他帐户的数据，这些帐户已经与ACCOUNT_ID共享了至少一个交易，且帐户为BANK_ID。 <br />身份验证是可选的</p><p>如果视图VIEW_ID不公开，则需要进行身份验证。 </p>",
      "description_markdown": "Returns data about all the other accounts that have shared at least one transaction with the ACCOUNT_ID at BANK_ID.\nAuthentication is Optional\n\nAuthentication is required if the view VIEW_ID is not public.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "other_accounts": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "holder": {
              "name": "OBP",
              "is_alias": true
            },
            "bank_routing": {
              "scheme": "Bank_ID",
              "address": "gh.29.uk"
            },
            "account_routings": [
              {
                "scheme": "AccountNumber",
                "address": "4930396"
              }
            ],
            "metadata": {
              "public_alias": "NONE",
              "private_alias": "NONE",
              "more_info": "www.openbankproject.com",
              "URL": "www.openbankproject.com",
              "image_URL": "www.openbankproject.com",
              "open_corporates_URL": "www.openbankproject.com",
              "corporate_location": {
                "latitude": 1.231,
                "longitude": 1.231,
                "date": "2017-09-18T22:00:00Z",
                "user": {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "provider": "http://127.0.0.1:8080",
                  "display_name": "OBP"
                }
              },
              "physical_location": {
                "latitude": 1.231,
                "longitude": 1.231,
                "date": "2017-09-18T22:00:00Z",
                "user": {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "provider": "http://127.0.0.1:8080",
                  "display_name": "OBP"
                }
              }
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Counterparty",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "other_accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "holder": {
                  "type": "object",
                  "properties": {
                    "is_alias": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "type": "string"
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "image_URL": {
                      "type": "string"
                    },
                    "corporate_location": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "display_name": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "longitude": {
                          "type": "number"
                        },
                        "latitude": {
                          "type": "number"
                        }
                      }
                    },
                    "URL": {
                      "type": "string"
                    },
                    "open_corporates_URL": {
                      "type": "string"
                    },
                    "physical_location": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "display_name": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "longitude": {
                          "type": "number"
                        },
                        "latitude": {
                          "type": "number"
                        }
                      }
                    },
                    "public_alias": {
                      "type": "string"
                    },
                    "private_alias": {
                      "type": "string"
                    },
                    "more_info": {
                      "type": "string"
                    }
                  }
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "scheme": {
                        "type": "string"
                      }
                    }
                  }
                },
                "bank_routing": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "scheme": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts"
    },
    {
      "operation_id": "OBPv3.1.0-deleteUserAuthContextById",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteUserAuthContextById"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/users/USER_ID/auth-context/USER_AUTH_CONTEXT_ID",
      "summary": "删除用户身份验证上下文",
      "description": "<p>删除由USER_AUTH_CONTEXT_ID指定的用户的用户AuthContext。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Delete a User AuthContext of the User specified by USER_AUTH_CONTEXT_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanDeleteUserAuthContext",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/USER_ID/auth-context/USER_AUTH_CONTEXT_ID"
    },
    {
      "operation_id": "OBPv2.0.0-deleteEntitlement",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "deleteEntitlement"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v2.0.0/users/USER_ID/entitlement/ENTITLEMENT_ID",
      "summary": "删除权利",
      "description": "<p>为USER_ID指定的用户删除ENTITLEMENT_ID指定的权利</p><p>必须进行身份验证，并且用户必须是超级管理员。 <br />超级管理员列在“道具”文件中。 </p>",
      "description_markdown": "Delete Entitlement specified by ENTITLEMENT_ID for an user specified by USER_ID\n\nAuthentication is required and the user needs to be a Super Admin.\nSuper Admins are listed in the Props file.\n\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20050: Current User is not a Super Admin!",
        "OBP-30212: EntitlementId not found",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Role",
        "User",
        "Entitlement"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/USER_ID/entitlement/ENTITLEMENT_ID"
    },
    {
      "operation_id": "OBPv3.0.0-getAtm",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getAtm"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/atms/ATM_ID",
      "summary": "获取银行自动柜员机",
      "description": "<p>返回由BANK_ID和ATM_ID指定的单个银行的有关ATM的信息，包括： </p><ul><li>地址</li><li>地理位置</li><li>许可此端点下的数据在以下位置发布</li></ul><p>身份验证是可选的</p>",
      "description_markdown": "Returns information about ATM for a single bank specified by BANK_ID and ATM_ID including:\n\n* Address\n* Geo Location\n* License the data under this endpoint is released under\n\n\n\nAuthentication is Optional",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "id": "atm-id-123",
        "bank_id": "GENODEM1GLS",
        "name": "Atm by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 11.45,
          "longitude": 11.45
        },
        "meta": {
          "license": {
            "id": "5",
            "name": "TESOBE"
          }
        },
        "monday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "tuesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "wednesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "thursday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "friday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "saturday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "sunday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "is_accessible": "true",
        "located_at": "Full service store",
        "more_info": "short walk to the lake from here",
        "has_deposit_capability": "true"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30009: ATM not found. Please specify a valid value for ATM_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "ATM",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "has_deposit_capability": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "friday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "monday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "saturday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "thursday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "tuesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "wednesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "sunday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              },
              "county": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "located_at": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/atms/ATM_ID"
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerEmail",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerEmail"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/email",
      "summary": "更新客户的电子邮件",
      "description": "<p>更新CUSTOMER_ID指定的客户的电子邮件。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Update an email of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "email": "marko@tesobe.com"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "eveline@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "2017-09-18T22:00:00Z"
        },
        "date_of_birth": "2017-09-18T22:00:00Z",
        "relationship_status": "single",
        "dependants": 10,
        "dob_of_dependants": [
          "2017-09-18T22:00:00Z"
        ],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "10"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2017-09-18T22:00:00Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "employment_status": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "rating": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "dependants": {
            "type": "integer"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerEmail",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/email"
    },
    {
      "operation_id": "OBPv4.0.0-createDirectDebitManagement",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createDirectDebitManagement"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/direct-debit",
      "summary": "创建直接借记（管理）",
      "description": "<p>为帐户创建直接借记。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Create direct debit for an account.\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "date_signed": "2017-09-18T22:00:00Z",
        "date_starts": "2017-09-18T22:00:00Z",
        "date_expires": "2017-09-18T22:00:00Z"
      },
      "success_response_body": {
        "direct_debit_id": "aa0533bd-eb22-4bff-af75-d45240361b05",
        "bank_id": "GENODEM1GLS",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "date_signed": "2019-12-02T09:27:34Z",
        "date_starts": "2019-12-02T09:27:34Z",
        "date_expires": "2019-12-02T09:27:34Z",
        "date_cancelled": "2019-12-02T09:27:34Z",
        "active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-10001: Incorrect json format.",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-20057: User not found by userId.",
        "OBP-30017: Counterparty not found. Please specify a valid value for COUNTERPARTY_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Direct-Debit",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "date_cancelled": {
            "type": "string",
            "format": "date-time"
          },
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "counterparty_id": {
            "type": "string"
          },
          "direct_debit_id": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/banks/BANK_ID/accounts/ACCOUNT_ID/direct-debit"
    },
    {
      "operation_id": "OBPv3.1.0-deleteBranch",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteBranch"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/branches/BRANCH_ID",
      "summary": "删除分支",
      "description": "<p>从给定的银行中删除分行。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Delete Branch from given Bank.\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30218: Insufficient authorisation to Create Branch. You do not have the role CanCreateBranch.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Branch"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanDeleteBranch",
          "requires_bank_id": true
        },
        {
          "role": "CanDeleteBranchAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/branches/BRANCH_ID"
    },
    {
      "operation_id": "OBPv2.0.0-getKycMedia",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "getKycMedia"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/customers/CUSTOMER_ID/kyc_media",
      "summary": "为客户获取KYC Media",
      "description": "<p>获取确认客户身份的KYC媒体（扫描，图片，视频）。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get KYC media (scans, pictures, videos) that affirms the identity of the customer.\n\nAuthentication is Mandatory",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "medias": [
          {
            "bank_id": "GENODEM1GLS",
            "customer_id": "PlaceholderString",
            "id": "PlaceholderString",
            "customer_number": "5987953",
            "type": "PlaceholderString",
            "url": "PlaceholderString",
            "date": "2017-09-18T22:00:00Z",
            "relates_to_kyc_document_id": "PlaceholderString",
            "relates_to_kyc_check_id": "PlaceholderString"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "KYC",
        "Customer"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "medias": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "customer_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "relates_to_kyc_document_id": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "relates_to_kyc_check_id": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyKycMedia",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/customers/CUSTOMER_ID/kyc_media"
    },
    {
      "operation_id": "OBPv1.2.1-addCommentForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCommentForViewOnTransaction"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/comments",
      "summary": "添加评论。",
      "description": "<p>在<a href=\"#1_2_1-getViewsForBankAccount\">视图</a> VIEW_ID上发布有关交易TRANSACTION_ID的评论。 </p><p> $ {authenticationRequiredMessage（false）} </p><p>由于注释与用户链接，因此需要验证。 </p>",
      "description_markdown": "Posts a comment about a transaction TRANSACTION_ID on a [view](#1_2_1-getViewsForBankAccount) VIEW_ID.\n\n${authenticationRequiredMessage(false)}\n\nAuthentication is required since the comment is linked with the user.",
      "example_request_body": {
        "value": "String"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "value": "OBP",
        "date": "2017-09-18T22:00:00Z",
        "user": {
          "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
          "provider": "http://127.0.0.1:8080",
          "display_name": "OBP"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "display_name": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/comments"
    },
    {
      "operation_id": "OBPv3.1.0-updateAccountAttribute",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateAccountAttribute"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/products/PRODUCT_CODE/attributes/ACCOUNT_ATTRIBUTE_ID",
      "summary": "更新帐户属性",
      "description": "<p>更新帐户属性</p><p>帐户属性用于描述带有键入的键值对列表的金融产品。 </p><p>每个帐户属性都通过ACCOUNT_ID链接到其帐户</p><p>典型的帐户属性可能是： </p><p> ISIN（用于国际债券） <br /> VKN（用于德国债券） <br /> REDCODE（信用衍生产品的Markit短代码） <br /> LOAN_ID（例如用于Anacredit报告） </p><p>发行日期（债券在市场上发行时） <br /> MATURITY_DATE（产品寿命终止） <br />可交易的</p><p>有关更多示例，请参见<a href=\"http://www.fpml.org/\">FPML</a> 。 </p><p>身份验证是强制性的</p>",
      "description_markdown": " Update Account Attribute\n\n\nAccount Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Account Attribute is linked to its Account by ACCOUNT_ID\n\n\n       \n\nTypical account attributes might be:\n\nISIN (for International bonds)\nVKN (for German bonds)\nREDCODE (markit short code for credit derivative)\nLOAN_ID (e.g. used for Anacredit reporting)\n\nISSUE_DATE (When the bond was issued in the market)\nMATURITY_DATE (End of life time of a product)\nTRADABLE\n\nSee [FPML](http://www.fpml.org/) for more examples.\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23"
      },
      "success_response_body": {
        "product_code": "saving1",
        "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "account_attribute_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateAccountAttribute",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/products/PRODUCT_CODE/attributes/ACCOUNT_ATTRIBUTE_ID"
    },
    {
      "operation_id": "OBPv4.0.0-resetPasswordUrl",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "resetPasswordUrl"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/management/user/reset-password-url",
      "summary": "创建密码重置网址",
      "description": "<p>创建密码重置网址。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Create password reset url.\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "username": "jobloggs",
        "email": "jo@gmail.com",
        "user_id": "74a8ebcc-10e4-4036-bef3-9835922246bf"
      },
      "success_response_body": {
        "reset_password_url": "https://apisandbox.openbankproject.com/user_mgt/reset_password/QOL1CPNJPCZ4BRMPX3Z01DPOX1HMGU3L"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "User",
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "reset_password_url": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateResetPasswordUrl",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/user/reset-password-url"
    },
    {
      "operation_id": "OBPv3.1.0-createMethodRouting",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createMethodRouting"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/management/method_routings",
      "summary": "添加方法",
      "description": "<p>添加一个MethodRouting。 </p><p>身份验证是强制性的</p><p>领域解释： </p><ul><li> method_name是必需的字符串值</li><li> connector_name是必需的字符串值</li><li> is_bank_id_exact_match是必需的布尔值，如果bank_id_pattern是确切的bank_id值，则此值为true；否则，此值为true。如果bank_id_pattern为null或正则表达式，则该值为false </li><li> bank_id_pattern是可选的字符串值，可以为null，确切的bank_id或正则表达式</li><li>参数是键值对的可选数组。您可以为此方法设置一些参数</li></ul><p>注意： </p><ul><li>如果bank_id_pattern是正则表达式，则需要对特殊字符进行转义，例如：bank_id_pattern =“ some-id_pattern_ \\ d +” </li></ul>",
      "description_markdown": "Add a MethodRouting.\n\n\nAuthentication is Mandatory\n\nExplaination of Fields:\n\n* method_name is required String value\n* connector_name is required String value\n* is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false\n* bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex\n* parameters is optional array of key value pairs. You can set some paremeters for this method\n\nnote:\n\n* if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = \"some\\-id_pattern_\\d+\"\n",
      "example_request_body": {
        "is_bank_id_exact_match": false,
        "method_name": "getBank",
        "connector_name": "rest_vMar2019",
        "bank_id_pattern": "some_bankId_.*",
        "parameters": [
          {
            "key": "url",
            "value": "http://mydomain.com/xxx"
          }
        ]
      },
      "success_response_body": {
        "is_bank_id_exact_match": false,
        "method_name": "getBank",
        "connector_name": "rest_vMar2019",
        "method_routing_id": "this-method-routing-Id",
        "bank_id_pattern": "some_bankId_.*",
        "parameters": [
          {
            "key": "url",
            "value": "http://mydomain.com/xxx"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Method-Routing",
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "method_name": {
            "type": "string"
          },
          "bank_id_pattern": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "is_bank_id_exact_match": {
            "type": "boolean"
          },
          "connector_name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "method_name": {
            "type": "string"
          },
          "bank_id_pattern": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "is_bank_id_exact_match": {
            "type": "boolean"
          },
          "method_routing_id": {
            "type": "string"
          },
          "connector_name": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateMethodRouting",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/method_routings"
    },
    {
      "operation_id": "OBPv4.0.0-answerTransactionRequestChallenge",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "answerTransactionRequestChallenge"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge",
      "summary": "映射（类型-&gt;字符串）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "In Sandbox mode, any string that can be converted to a positive integer will be accepted as an answer.\n\nThis endpoint totally depends on createTransactionRequest, it need get the following data from createTransactionRequest response body.\n\n1)`TRANSACTION_REQUEST_TYPE` : is the same as createTransactionRequest request URL .\n\n2)`TRANSACTION_REQUEST_ID` : is the `id` field in createTransactionRequest response body.\n\n3) `id` :  is `challenge.id` field in createTransactionRequest response body.\n\n4) `answer` : must be `123`. if it is in sandbox mode. If it kafka mode, the answer can be got by phone message or other security ways.\n\n      ",
      "example_request_body": {
        "id": "This is challenge.id, you can get it from `Create Transaction Request.` response, only is useful if status ==`INITIATED` there.",
        "answer": "123"
      },
      "success_response_body": {
        "id": "82f92531-9c63-4246-abfc-96c20ec46188",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "GENODEM1GLS",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to": {
            "bank_id": "String",
            "account_id": "String"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": "666666-9c63-4246-abfc-96c20ec46188",
        "status": "COMPLETED",
        "start_date": "2017-09-18T22:00:00Z",
        "end_date": "2017-09-18T22:00:00Z",
        "challenge": {
          "id": "be1a183d-b301-4b83-b855-5eeffdd3526f",
          "allowed_attempts": 3,
          "challenge_type": "SANDBOX_TAN"
        },
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "10"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-40011: Transaction Request Status is not INITIATED.",
        "OBP-40009: The TRANSACTION_REQUEST_TYPE has changed.",
        "OBP-40010: Invalid Challenge Id. Please specify a valid value for CHALLENGE_ID.",
        "OBP-40014: Sorry, you've used up your allowed attempts. ",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Transaction-Request",
        "Payment Initiation Service (PIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenge": {
            "type": "object",
            "properties": {
              "challenge_type": {
                "type": "string"
              },
              "allowed_attempts": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "string"
          },
          "charge": {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "details": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              },
              "value": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "to": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "id": {
            "type": "string"
          },
          "from": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_ids": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge"
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyOpenCorporatesUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyOpenCorporatesUrl"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/open_corporates_url",
      "summary": "删除对方开放公司网址",
      "description": "<p>删除其他银行帐户的打开的公司网址。 </p>",
      "description_markdown": "Delete open corporate url of other bank account.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "the view does not allow deleting an open corporate url",
        "URL cannot be deleted",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/open_corporates_url"
    },
    {
      "operation_id": "OBPv3.0.0-dataWarehouseSearch",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "dataWarehouseSearch"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.0.0/search/warehouse/INDEX",
      "summary": "数据仓库搜索",
      "description": "<p>搜索数据仓库并获取行级结果。 </p><p>身份验证是强制性的</p><p>必须具有CanSearchWarehouse权利。您可以在下面请求角色。 </p><p>弹性（搜索）用于后台。请参阅下面的链接以获取语法。 </p><p>用法示例： </p><p> POST /搜索/仓库/ THE_INDEX_YOU_WANT_TO_USE </p><p> POST /搜索/仓库/ INDEX1，INDEX2 </p><p> POST /搜索/仓库/全部</p><p> {体内任何有效的Elasticsearch查询DSL} </p><p> <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch查询DSL</a> </p><p> <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">弹性简单查询</a> </p><p> <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">弹性聚合</a> </p>",
      "description_markdown": "\nSearch the data warehouse and get row level results.\n\nAuthentication is Mandatory\n\nCanSearchWarehouse entitlement is required. You can request the Role below.\n\nElastic (search) is used in the background. See links below for syntax.\n\nExamples of usage:\n\n\nPOST /search/warehouse/THE_INDEX_YOU_WANT_TO_USE\n\nPOST /search/warehouse/INDEX1,INDEX2\n\nPOST /search/warehouse/ALL\n\n{ Any valid elasticsearch query DSL in the body }\n\n\n[Elasticsearch query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html)\n\n[Elastic simple query](https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html)\n\n[Elastic aggregations](https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html)\n\n\n        ",
      "example_request_body": {
        "query": {
          "match_all": {}
        }
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Data-Warehouse",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "match_all": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanSearchWarehouse",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/search/warehouse/INDEX"
    },
    {
      "operation_id": "OBPv3.1.0-createProductAttribute",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createProductAttribute"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/products/PRODUCT_CODE/attribute",
      "summary": "创建产品属性",
      "description": "<p>创建产品属性</p><p>产品属性用于描述带有类型化键值对列表的金融产品。 </p><p>每个产品属性均通过PRODUCT_CODE链接到其产品</p><p>典型的产品属性可能是： </p><p> ISIN（用于国际债券） <br /> VKN（用于德国债券） <br /> REDCODE（信用衍生产品的Markit短代码） <br /> LOAN_ID（例如用于Anacredit报告） </p><p>发行日期（债券在市场上发行时） <br /> MATURITY_DATE（产品寿命终止） <br />可交易的</p><p>有关更多示例，请参见<a href=\"http://www.fpml.org/\">FPML</a> 。 </p><p>类型字段必须是“ STRING”，“ INTEGER”，“ DOUBLE”或DATE_WITH_DAY”之一</p><p>身份验证是强制性的</p>",
      "description_markdown": " Create Product Attribute\n\n\nProduct Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Product Attribute is linked to its Product by PRODUCT_CODE\n\n\n       \n\nTypical product attributes might be:\n\nISIN (for International bonds)\nVKN (for German bonds)\nREDCODE (markit short code for credit derivative)\nLOAN_ID (e.g. used for Anacredit reporting)\n\nISSUE_DATE (When the bond was issued in the market)\nMATURITY_DATE (End of life time of a product)\nTRADABLE\n\nSee [FPML](http://www.fpml.org/) for more examples.\n\n\nThe type field must be one of \"STRING\", \"INTEGER\", \"DOUBLE\" or DATE_WITH_DAY\"\n\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23"
      },
      "success_response_body": {
        "product_code": "saving1",
        "product_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23"
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Product",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "product_attribute_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateProductAttribute",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/products/PRODUCT_CODE/attribute"
    },
    {
      "operation_id": "OBPv2.1.0-sandboxDataImport",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "sandboxDataImport"
      },
      "request_verb": "POST",
      "request_url": "/obp/v2.1.0/sandbox/data-import",
      "summary": "创建沙箱",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Import bulk data into the sandbox (Authenticated access).\n\nThis call can be used to create banks, users, accounts and transactions which are stored in the local RDBMS.\n\nThe user needs to have CanCreateSandbox entitlement.\n\nNote: This is a monolithic call. You could also use a combination of endpoints including create bank, create user, create account and create transaction request to create similar data.\n\nAn example of an import set of data (json) can be found [here](https://raw.githubusercontent.com/OpenBankProject/OBP-API/develop/obp-api/src/main/scala/code/api/sandbox/example_data/2016-04-28/example_import.json)\nAuthentication is Mandatory\n",
      "example_request_body": {
        "banks": [
          {
            "id": "bank1",
            "short_name": "bank 1",
            "full_name": "Bank 1 Inc.",
            "logo": "http://example.com/logo",
            "website": "http://example.com"
          },
          {
            "id": "bank2",
            "short_name": "bank 2",
            "full_name": "Bank 2 Inc.",
            "logo": "http://example.com/logo2",
            "website": "http://example.com/2"
          }
        ],
        "users": [
          {
            "email": "user1@example.com",
            "password": "TESOBE520berlin123!",
            "user_name": "User 1"
          },
          {
            "email": "user2@example.com",
            "password": "TESOBE520berlin123!",
            "user_name": "User 2"
          }
        ],
        "accounts": [
          {
            "id": "account1",
            "bank": "bank1",
            "label": "Account 1 at Bank 1",
            "number": "1",
            "type": "savings",
            "balance": {
              "currency": "EUR",
              "amount": "1000.00"
            },
            "IBAN": "1234567890",
            "owners": [
              "User 1"
            ],
            "generate_public_view": true,
            "generate_accountants_view": true,
            "generate_auditors_view": true
          },
          {
            "id": "account2",
            "bank": "bank1",
            "label": "Account 2 at Bank 1",
            "number": "2",
            "type": "current",
            "balance": {
              "currency": "EUR",
              "amount": "1000.00"
            },
            "IBAN": "91234567890",
            "owners": [
              "User 2"
            ],
            "generate_public_view": false,
            "generate_accountants_view": true,
            "generate_auditors_view": true
          },
          {
            "id": "account1",
            "bank": "bank2",
            "label": "Account 1 at Bank 2",
            "number": "22",
            "type": "savings",
            "balance": {
              "currency": "EUR",
              "amount": "1000.00"
            },
            "IBAN": "21234567890",
            "owners": [
              "User 1",
              "User 2"
            ],
            "generate_public_view": false,
            "generate_accountants_view": true,
            "generate_auditors_view": true
          }
        ],
        "transactions": [
          {
            "id": "transaction-without-counterparty",
            "this_account": {
              "id": "account1",
              "bank": "bank2"
            },
            "details": {
              "type": "SEPA",
              "description": "some description",
              "posted": "2012-03-07T00:00:00.001Z",
              "completed": "2012-04-07T00:00:00.001Z",
              "new_balance": "1244.00",
              "value": "-135.33"
            }
          },
          {
            "id": "blankCounterpartNameTransaction",
            "this_account": {
              "id": "account1",
              "bank": "bank1"
            },
            "counterparty": {
              "account_number": "123456-AVB"
            },
            "details": {
              "type": "SEPA",
              "description": "some description",
              "posted": "2012-03-07T00:00:00.001Z",
              "completed": "2012-04-07T00:00:00.001Z",
              "new_balance": "1244.00",
              "value": "-135.33"
            }
          },
          {
            "id": "blankCounterpartAccountNumberTransaction",
            "this_account": {
              "id": "account1",
              "bank": "bank1"
            },
            "counterparty": {
              "name": "Piano Repair"
            },
            "details": {
              "type": "SEPA",
              "description": "some description",
              "posted": "2012-03-07T00:00:00.001Z",
              "completed": "2012-04-07T00:00:00.001Z",
              "new_balance": "1244.00",
              "value": "-135.33"
            }
          },
          {
            "id": "transaction-with-counterparty",
            "this_account": {
              "id": "account1",
              "bank": "bank1"
            },
            "counterparty": {
              "name": "Acme Inc.",
              "account_number": "12345-B"
            },
            "details": {
              "type": "SEPA",
              "description": "some description",
              "posted": "2012-03-07T00:00:00.001Z",
              "completed": "2012-04-07T00:00:00.001Z",
              "new_balance": "1244.00",
              "value": "-135.33"
            }
          },
          {
            "id": "transaction-without-counterparty",
            "this_account": {
              "id": "account1",
              "bank": "bank1"
            },
            "details": {
              "type": "SEPA",
              "description": "some description",
              "posted": "2012-03-07T00:00:00.001Z",
              "completed": "2012-04-07T00:00:00.001Z",
              "new_balance": "1244.00",
              "value": "-135.33"
            }
          }
        ],
        "branches": [
          {
            "id": "branch1",
            "bank_id": "bank1",
            "name": "Genel Müdürlük",
            "address": {
              "line_1": "5 Some Street",
              "line_2": "Rosy Place",
              "line_3": "Sunny Village",
              "city": "Ashbourne",
              "county": "Derbyshire",
              "state": "",
              "post_code": "WHY RU4",
              "country_code": "UK"
            },
            "location": {
              "latitude": 52.556198,
              "longitude": 13.384099
            },
            "meta": {
              "license": {
                "id": "pddl",
                "name": "Open Data Commons Public Domain Dedication and License (PDDL)"
              }
            },
            "lobby": {
              "hours": "M-TH 8:30-3:30, F 9-5"
            },
            "driveUp": {
              "hours": "M-Th 8:30-5:30, F-8:30-6, Sat 9-12"
            }
          },
          {
            "id": "branch2",
            "bank_id": "bank1",
            "name": "Manchester",
            "address": {
              "line_1": "5 Some Street",
              "line_2": "Rosy Place",
              "line_3": "Sunny Village",
              "city": "Ashbourne",
              "county": "Derbyshire",
              "state": "",
              "post_code": "WHY RU4",
              "country_code": "UK"
            },
            "location": {
              "latitude": 52.556198,
              "longitude": 13.384099
            },
            "meta": {
              "license": {
                "id": "pddl",
                "name": "Open Data Commons Public Domain Dedication and License (PDDL)"
              }
            },
            "lobby": {
              "hours": "M-TH 8:30-3:30, F 9-5"
            },
            "driveUp": {
              "hours": "M-Th 8:30-5:30, F-8:30-6, Sat 9-12"
            }
          }
        ],
        "atms": [
          {
            "id": "atm1",
            "bank_id": "bank1",
            "name": "Ashbourne Atm 1",
            "address": {
              "line_1": "5 Some Street",
              "line_2": "Rosy Place",
              "line_3": "Sunny Village",
              "city": "Ashbourne",
              "county": "Derbyshire",
              "state": "",
              "post_code": "WHY RU4",
              "country_code": "UK"
            },
            "location": {
              "latitude": 52.556198,
              "longitude": 13.384099
            },
            "meta": {
              "license": {
                "id": "pddl",
                "name": "Open Data Commons Public Domain Dedication and License (PDDL)"
              }
            }
          },
          {
            "id": "atm2",
            "bank_id": "bank1",
            "name": "Manchester Atm 1",
            "address": {
              "line_1": "5 Some Street",
              "line_2": "Rosy Place",
              "line_3": "Sunny Village",
              "city": "Ashbourne",
              "county": "Derbyshire",
              "state": "",
              "post_code": "WHY RU4",
              "country_code": "UK"
            },
            "location": {
              "latitude": 52.556198,
              "longitude": 13.384099
            },
            "meta": {
              "license": {
                "id": "pddl",
                "name": "Open Data Commons Public Domain Dedication and License (PDDL)"
              }
            }
          }
        ],
        "products": [
          {
            "bank_id": "bank1",
            "code": "prd1",
            "name": "product 1",
            "category": "cat1",
            "family": "fam1",
            "super_family": "sup fam 1",
            "more_info_url": "www.example.com/index1",
            "meta": {
              "license": {
                "id": "pddl",
                "name": "Open Data Commons Public Domain Dedication and License (PDDL)"
              }
            }
          },
          {
            "bank_id": "bank1",
            "code": "prd2",
            "name": "Product 2",
            "category": "cat2",
            "family": "fam2",
            "super_family": "sup fam 2",
            "more_info_url": "www.example.com/index2",
            "meta": {
              "license": {
                "id": "pddl",
                "name": "Open Data Commons Public Domain Dedication and License (PDDL)"
              }
            }
          }
        ],
        "crm_events": [
          {
            "id": "ASDFHJ47YKJH",
            "bank_id": "bank1",
            "customer": {
              "name": "James Brown",
              "number": "698761728934"
            },
            "category": "Call",
            "detail": "Check mortgage",
            "channel": "Phone",
            "actual_date": "2017-09-19T02:31:05.000Z"
          },
          {
            "id": "KIFJA76876AS",
            "bank_id": "bank1",
            "customer": {
              "name": "James Brown",
              "number": "698761728934"
            },
            "category": "Call",
            "detail": "Check mortgage",
            "channel": "Phone",
            "actual_date": "2017-09-19T02:31:05.000Z"
          }
        ]
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-00002: Data import is disabled for this API instance.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Sandbox",
        "API"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "IBAN": {
                  "type": "string"
                },
                "generate_accountants_view": {
                  "type": "boolean"
                },
                "owners": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "generate_public_view": {
                  "type": "boolean"
                },
                "bank": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "generate_auditors_view": {
                  "type": "boolean"
                },
                "label": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "balance": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string"
                    }
                  }
                },
                "type": {
                  "type": "string"
                }
              }
            }
          },
          "branches": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "longitude": {
                      "type": "number"
                    },
                    "latitude": {
                      "type": "number"
                    }
                  }
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "line_2": {
                      "type": "string"
                    },
                    "county": {
                      "type": "string"
                    },
                    "line_3": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "country_code": {
                      "type": "string"
                    },
                    "post_code": {
                      "type": "string"
                    },
                    "line_1": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    }
                  }
                },
                "driveUp": {
                  "type": "object",
                  "properties": {
                    "hours": {
                      "type": "string"
                    }
                  }
                },
                "lobby": {
                  "type": "object",
                  "properties": {
                    "hours": {
                      "type": "string"
                    }
                  }
                },
                "bank_id": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "license": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "details": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "new_balance": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "completed": {
                      "type": "string"
                    },
                    "posted": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                },
                "this_account": {
                  "type": "object",
                  "properties": {
                    "bank": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "family": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "super_family": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "license": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "code": {
                  "type": "string"
                },
                "more_info_url": {
                  "type": "string"
                }
              }
            }
          },
          "atms": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "longitude": {
                      "type": "number"
                    },
                    "latitude": {
                      "type": "number"
                    }
                  }
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "line_2": {
                      "type": "string"
                    },
                    "county": {
                      "type": "string"
                    },
                    "line_3": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "country_code": {
                      "type": "string"
                    },
                    "post_code": {
                      "type": "string"
                    },
                    "line_1": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    }
                  }
                },
                "bank_id": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "license": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user_name": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          },
          "banks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "full_name": {
                  "type": "string"
                },
                "short_name": {
                  "type": "string"
                },
                "logo": {
                  "type": "string"
                },
                "website": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "crm_events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "actual_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "channel": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "category": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "detail": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateSandbox",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/sandbox/data-import"
    },
    {
      "operation_id": "OBPv2.2.0-createCounterparty",
      "implemented_by": {
        "version": "OBPv2.2.0",
        "function": "createCounterparty"
      },
      "request_verb": "POST",
      "request_url": "/obp/v2.2.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties",
      "summary": "创建交易对手（明确）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Create Counterparty (Explicit) for an Account.\n\nIn OBP, there are two types of Counterparty.\n\n* Explicit Counterparties (those here) which we create explicitly and are used in COUNTERPARTY Transaction Requests\n\n* Implicit Counterparties (AKA Other Accounts) which are generated automatically from the other sides of Transactions.\n\nExplicit Counterparties are created for the account / view\nThey are how the user of the view (e.g. account owner) refers to the other side of the transaction\n\nname : the human readable name (e.g. Piano teacher, Miss Nipa)\n\ndescription : the human readable name (e.g. Piano teacher, Miss Nipa)\n\nbank_routing_scheme : eg: bankId or bankCode or any other strings\n\nbank_routing_address : eg: `gh.29.uk`, must be valid sandbox bankIds\n\naccount_routing_scheme : eg: AccountId or AccountNumber or any other strings\n\naccount_routing_address : eg: `1d65db7c-a7b2-4839-af41-95`, must be valid accountIds\n\nother_account_secondary_routing_scheme : eg: IBan or any other strings\n\nother_account_secondary_routing_address : if it is IBan, it should be unique for each counterparty. \n\nother_branch_routing_scheme : eg: branchId or any other strings or you can leave it empty, not useful in sandbox mode.\n\nother_branch_routing_address : eg: `branch-id-123` or you can leave it empty, not useful in sandbox mode.\n\nis_beneficiary : must be set to `true` in order to send payments to this counterparty\n\nbespoke: It support list of key-value, you can add it to the counterarty.\n\nbespoke.key : any info-key you want to add to this counerparty\n \nbespoke.value : any info-value you want to add to this counerparty\n\nThe view specified by VIEW_ID must have the canAddCounterparty permission\n\nA minimal example for TransactionRequestType == COUNTERPARTY\n {\n  \"name\": \"Tesobe1\",\n  \"description\": \"Good Company\",\n  \"other_bank_routing_scheme\": \"bankId\",\n  \"other_bank_routing_address\": \"gh.29.uk\",\n  \"other_account_routing_scheme\": \"accountId\",\n  \"other_account_routing_address\": \"8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0\",\n  \"is_beneficiary\": true,\n  \"other_account_secondary_routing_scheme\": \"\",\n  \"other_account_secondary_routing_address\": \"\",\n  \"other_branch_routing_scheme\": \"\",\n  \"other_branch_routing_address\": \"\",\n  \"bespoke\": []\n}\n\n \nA minimal example for TransactionRequestType == SEPA\n \n {\n  \"name\": \"Tesobe2\",\n  \"description\": \"Good Company\",\n  \"other_bank_routing_scheme\": \"bankId\",\n  \"other_bank_routing_address\": \"gh.29.uk\",\n  \"other_account_routing_scheme\": \"accountId\",\n  \"other_account_routing_address\": \"8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0\",\n  \"other_account_secondary_routing_scheme\": \"IBAN\",\n  \"other_account_secondary_routing_address\": \"DE89 3704 0044 0532 0130 00\",\n  \"is_beneficiary\": true,\n  \"other_branch_routing_scheme\": \"\",\n  \"other_branch_routing_address\": \"\",\n  \"bespoke\": []\n}\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "name": "CounterpartyName",
        "description": "My landlord",
        "other_account_routing_scheme": "accountNumber",
        "other_account_routing_address": "7987987-2348987-234234",
        "other_account_secondary_routing_scheme": "IBAN",
        "other_account_secondary_routing_address": "DE89370400440532013000",
        "other_bank_routing_scheme": "bankCode",
        "other_bank_routing_address": "10",
        "other_branch_routing_scheme": "branchNumber",
        "other_branch_routing_address": "10010",
        "is_beneficiary": true,
        "bespoke": [
          {
            "key": "englishName",
            "value": "english Name"
          }
        ]
      },
      "success_response_body": {
        "name": "CounterpartyName",
        "description": "My landlord",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "this_bank_id": "GENODEM1GLS",
        "this_account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "this_view_id": "owner",
        "counterparty_id": "1d65db7c-a7b2-4839-af41-958276ab7790",
        "other_bank_routing_scheme": "bankCode",
        "other_bank_routing_address": "10",
        "other_branch_routing_scheme": "branchNumber",
        "other_branch_routing_address": "10010",
        "other_account_routing_scheme": "accountNumber",
        "other_account_routing_address": "7987987-2348987-234234",
        "other_account_secondary_routing_scheme": "accountId",
        "other_account_secondary_routing_address": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0",
        "is_beneficiary": true,
        "bespoke": [
          {
            "key": "englishName",
            "value": "english Name"
          }
        ],
        "metadata": {
          "public_alias": "String",
          "more_info": "String",
          "url": "String",
          "image_url": "String",
          "open_corporates_url": "String",
          "corporate_location": {
            "latitude": 11.45,
            "longitude": 11.45,
            "date": "2017-09-18T22:00:00Z",
            "user": {
              "id": "123",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            }
          },
          "physical_location": {
            "latitude": 11.45,
            "longitude": 11.45,
            "date": "2017-09-18T22:00:00Z",
            "user": {
              "id": "123",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            }
          },
          "private_alias": "String"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-30014: Counterparty already exists. Please specify a different value for BANK_ID or ACCOUNT_ID or VIEW_ID or NAME.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty",
        "Account"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "bespoke": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "other_bank_routing_scheme": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "other_branch_routing_address": {
            "type": "string"
          },
          "other_account_secondary_routing_address": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "other_account_routing_address": {
            "type": "string"
          },
          "other_bank_routing_address": {
            "type": "string"
          },
          "other_branch_routing_scheme": {
            "type": "string"
          },
          "other_account_secondary_routing_scheme": {
            "type": "string"
          },
          "other_account_routing_scheme": {
            "type": "string"
          },
          "is_beneficiary": {
            "type": "boolean"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bespoke": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "created_by_user_id": {
            "type": "string"
          },
          "other_bank_routing_scheme": {
            "type": "string"
          },
          "this_bank_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "other_account_secondary_routing_scheme": {
            "type": "string"
          },
          "other_branch_routing_address": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "other_account_routing_address": {
            "type": "string"
          },
          "other_bank_routing_address": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "private_alias": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "public_alias": {
                "type": "string"
              },
              "open_corporates_url": {
                "type": "string"
              },
              "more_info": {
                "type": "string"
              },
              "physical_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "image_url": {
                "type": "string"
              },
              "corporate_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "this_account_id": {
            "type": "string"
          },
          "other_branch_routing_scheme": {
            "type": "string"
          },
          "other_account_routing_scheme": {
            "type": "string"
          },
          "other_account_secondary_routing_address": {
            "type": "string"
          },
          "is_beneficiary": {
            "type": "boolean"
          },
          "this_view_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties"
    },
    {
      "operation_id": "OBPv1.4.0-getTransactionRequestTypes",
      "implemented_by": {
        "version": "OBPv1.4.0",
        "function": "getTransactionRequestTypes"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.4.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types",
      "summary": "映射（类型-&gt;字符串）",
      "description": "<p>返回由ACCOUNT_ID指定的帐户和VIEW_ID指定的视图有权访问的转换请求类型。 </p><p>这些是API服务器可以通过交易请求创建交易的方式<br /> （与“交易类型”相反，“交易类型”也包括外部类型，例如用于核心银行业务创建的交易等） </p><p>事务请求类型在内部确定： </p><ul><li>所需的交易请求“正文”，即定义交易请求的“内容”和“至”的字段， </li><li>在进行交易请求之前可能引发的安全挑战的类型，以及</li><li>挑战的起点。 </li></ul><p>例如，在“ SANDBOX_TAN”交易请求中，对于金额超过1000个货币单位的交易，用户必须提供正整数才能完成交易请求并创建交易。 </p><p>这种方法旨在仅提供一个用于发起事务的端点，一个用于处理挑战的端点，同时仍然允许有效负载和内部逻辑的灵活性。 </p>",
      "description_markdown": "Returns the Transation Request Types that the account specified by ACCOUNT_ID and view specified by VIEW_ID has access to.\n\nThese are the ways this API Server can create a Transaction via a Transaction Request\n(as opposed to Transaction Types which include external types too e.g. for Transactions created by core banking etc.)\n\n A Transaction Request Type internally determines:\n\n * the required Transaction Request 'body' i.e. fields that define the 'what' and 'to' of a Transaction Request,\n * the type of security challenge that may be be raised before the Transaction Request proceeds, and\n * the threshold of that challenge.\n\n For instance in a 'SANDBOX_TAN' Transaction Request, for amounts over 1000 currency units, the user must supply a positive integer to complete the Transaction Request and create a Transaction.\n\n This approach aims to provide only one endpoint for initiating transactions, and one that handles challenges, whilst still allowing flexibility with the payload and internal logic.\n \n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "transaction_request_types": [
          {
            "value": "10",
            "charge": {
              "summary": "The bank fixed charge",
              "value": {
                "currency": "EUR",
                "amount": "10"
              }
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "Please specify a valid value for CURRENCY of your Bank Account. ",
        "Current user does not have access to the view ",
        "account not found at bank",
        "user does not have access to owner view",
        "OBP-40018: Sorry, Transaction Requests are not enabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Transaction-Request",
        "Payment Initiation Service (PIS)"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transaction_request_types": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "charge": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        }
                      }
                    },
                    "summary": {
                      "type": "string"
                    }
                  }
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types"
    },
    {
      "operation_id": "OBPv3.1.0-getAccountApplications",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getAccountApplications"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/account-applications",
      "summary": "获取帐户申请",
      "description": "<p>获取帐户申请。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get the Account Applications.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "account_applications": [
          {
            "account_application_id": "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763",
            "product_code": "saveing1",
            "user": {
              "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
              "email": "eveline@example.com",
              "provider_id": "Chris",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            },
            "customer": {
              "bank_id": "GENODEM1GLS",
              "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
              "customer_number": "5987953",
              "legal_name": "Eveline Tripman",
              "mobile_phone_number": "+44 07972 444 876",
              "email": "eveline@example.com",
              "face_image": {
                "url": "www.openbankproject",
                "date": "2017-09-18T22:00:00Z"
              },
              "date_of_birth": "2017-09-18T22:00:00Z",
              "relationship_status": "single",
              "dependants": 10,
              "dob_of_dependants": [
                "2017-09-18T22:00:00Z"
              ],
              "credit_rating": {
                "rating": "OBP",
                "source": "OBP"
              },
              "credit_limit": {
                "currency": "EUR",
                "amount": "10"
              },
              "highest_education_attained": "Master",
              "employment_status": "worker",
              "kyc_status": true,
              "last_ok_date": "2017-09-18T22:00:00Z",
              "title": "Dr.",
              "branch_id": "DERBY6",
              "name_suffix": "Sr"
            },
            "date_of_application": "2017-09-18T22:00:00Z",
            "status": "REQUESTED"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account-Application",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "account_applications": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product_code": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "bank_id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "dob_of_dependants": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "employment_status": {
                      "type": "string"
                    },
                    "customer_id": {
                      "type": "string"
                    },
                    "relationship_status": {
                      "type": "string"
                    },
                    "date_of_birth": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "last_ok_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "highest_education_attained": {
                      "type": "string"
                    },
                    "customer_number": {
                      "type": "string"
                    },
                    "credit_rating": {
                      "type": "object",
                      "properties": {
                        "source": {
                          "type": "string"
                        },
                        "rating": {
                          "type": "string"
                        }
                      }
                    },
                    "name_suffix": {
                      "type": "string"
                    },
                    "credit_limit": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        }
                      }
                    },
                    "dependants": {
                      "type": "integer"
                    },
                    "legal_name": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "face_image": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "url": {
                          "type": "string"
                        }
                      }
                    },
                    "branch_id": {
                      "type": "string"
                    },
                    "mobile_phone_number": {
                      "type": "string"
                    },
                    "kyc_status": {
                      "type": "boolean"
                    }
                  }
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider_id": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  }
                },
                "date_of_application": {
                  "type": "string",
                  "format": "date-time"
                },
                "account_application_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/account-applications"
    },
    {
      "operation_id": "OBPv3.1.0-getTaxResidence",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getTaxResidence"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/tax-residences",
      "summary": "获取客户的税收住所",
      "description": "<p>获取由CUSTOMER_ID指定的客户的税收住所。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get the Tax Residences of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "tax_residence": [
          {
            "domain": "Enter some domain",
            "tax_number": "Enter some number",
            "tax_residence_id": "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "KYC",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "tax_residence": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tax_residence_id": {
                  "type": "string"
                },
                "tax_number": {
                  "type": "string"
                },
                "domain": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/tax-residences"
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyImageUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyImageUrl"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/image_url",
      "summary": "更新交易对手图片网址",
      "description": "<p>更新指向交易对手徽标的网址</p>",
      "description_markdown": "Update the url that points to the logo of the counterparty",
      "example_request_body": {
        "image_URL": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow updating an image url",
        "URL cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "image_URL": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/image_url"
    },
    {
      "operation_id": "OBPv3.1.0-getTransactionRequests",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getTransactionRequests"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-requests",
      "summary": "映射（类型-&gt;字符串）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Returns transaction requests for account specified by ACCOUNT_ID at bank specified by BANK_ID.\n\nThe VIEW_ID specified must be 'owner' and the user must have access to this view.\n\nVersion 2.0.0 now returns charge information.\n\nTransaction Requests serve to initiate transactions that may or may not proceed. They contain information including:\n\n* Transaction Request Id\n* Type\n* Status (INITIATED, COMPLETED)\n* Challenge (in order to confirm the request)\n* From Bank / Account\n* Details including Currency, Value, Description and other initiation information specific to each type. (Could potentialy include a list of future transactions.)\n* Related Transactions\n\nPSD2 Context: PSD2 requires transparency of charges to the customer.\nThis endpoint provides the charge that would be applied if the Transaction Request proceeds - and a record of that charge there after.\nThe customer can proceed with the Transaction by answering the security challenge.\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "transaction_requests_with_charges": [
          {
            "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
            "type": "SANDBOX_TAN",
            "from": {
              "bank_id": "GENODEM1GLS",
              "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
            },
            "details": {
              "to_sandbox_tan": {
                "bank_id": "String",
                "account_id": "String"
              },
              "to_sepa": {
                "iban": "String"
              },
              "to_counterparty": {
                "counterparty_id": "String"
              },
              "to_transfer_to_phone": {
                "value": {
                  "currency": "EUR",
                  "amount": "10"
                },
                "description": "String",
                "message": "String",
                "from": {
                  "mobile_phone_number": "+44 07972 444 876",
                  "nickname": "String"
                },
                "to": {
                  "mobile_phone_number": "+44 07972 444 876"
                }
              },
              "to_transfer_to_atm": {
                "value": {
                  "currency": "EUR",
                  "amount": "10"
                },
                "description": "String",
                "message": "String",
                "from": {
                  "mobile_phone_number": "+44 07972 444 876",
                  "nickname": "String"
                },
                "to": {
                  "legal_name": "Eveline Tripman",
                  "date_of_birth": "20181230",
                  "mobile_phone_number": "+44 07972 444 876",
                  "kyc_document": {
                    "type": "String",
                    "number": "String"
                  }
                }
              },
              "to_transfer_to_account": {
                "value": {
                  "currency": "EUR",
                  "amount": "10"
                },
                "description": "String",
                "transfer_type": "String",
                "future_date": "20181230",
                "to": {
                  "name": "String",
                  "bank_code": "String",
                  "branch_number": "String",
                  "account": {
                    "number": "String",
                    "iban": "String"
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "debtorAccount": {
                  "iban": "12345"
                },
                "instructedAmount": {
                  "currency": "EUR",
                  "amount": "10"
                },
                "creditorAccount": {
                  "iban": "54321"
                },
                "creditorName": "John Miles"
              },
              "value": {
                "currency": "EUR",
                "amount": "100"
              },
              "description": "String"
            },
            "transaction_ids": [
              "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
            ],
            "status": "COMPLETED",
            "start_date": "2017-09-18T22:00:00Z",
            "end_date": "2017-09-18T22:00:00Z",
            "challenge": {
              "id": "be1a183d-b301-4b83-b855-5eeffdd3526f",
              "allowed_attempts": 3,
              "challenge_type": "SANDBOX_TAN"
            },
            "charge": {
              "summary": "Rent the flat",
              "value": {
                "currency": "EUR",
                "amount": "10"
              }
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-20019: User does not have access to owner view. ",
        "OBP-60010: Get Transaction Requests Exception. ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Transaction-Request",
        "Payment Initiation Service (PIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transaction_requests_with_charges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "challenge": {
                  "type": "object",
                  "properties": {
                    "challenge_type": {
                      "type": "string"
                    },
                    "allowed_attempts": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "status": {
                  "type": "string"
                },
                "charge": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        }
                      }
                    },
                    "summary": {
                      "type": "string"
                    }
                  }
                },
                "details": {
                  "type": "object",
                  "properties": {
                    "to_sandbox_tan": {
                      "type": "object",
                      "properties": {
                        "account_id": {
                          "type": "string"
                        },
                        "bank_id": {
                          "type": "string"
                        }
                      }
                    },
                    "value": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        }
                      }
                    },
                    "to_sepa": {
                      "type": "object",
                      "properties": {
                        "iban": {
                          "type": "string"
                        }
                      }
                    },
                    "description": {
                      "type": "string"
                    },
                    "to_transfer_to_atm": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "string"
                            },
                            "currency": {
                              "type": "string"
                            }
                          }
                        },
                        "from": {
                          "type": "object",
                          "properties": {
                            "nickname": {
                              "type": "string"
                            },
                            "mobile_phone_number": {
                              "type": "string"
                            }
                          }
                        },
                        "to": {
                          "type": "object",
                          "properties": {
                            "kyc_document": {
                              "type": "object",
                              "properties": {
                                "number": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                }
                              }
                            },
                            "mobile_phone_number": {
                              "type": "string"
                            },
                            "date_of_birth": {
                              "type": "string"
                            },
                            "legal_name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "to_sepa_credit_transfers": {
                      "type": "object",
                      "properties": {
                        "creditorName": {
                          "type": "string"
                        },
                        "creditorAccount": {
                          "type": "object",
                          "properties": {
                            "iban": {
                              "type": "string"
                            }
                          }
                        },
                        "instructedAmount": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "string"
                            },
                            "currency": {
                              "type": "string"
                            }
                          }
                        },
                        "debtorAccount": {
                          "type": "object",
                          "properties": {
                            "iban": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "to_counterparty": {
                      "type": "object",
                      "properties": {
                        "counterparty_id": {
                          "type": "string"
                        }
                      }
                    },
                    "to_transfer_to_phone": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "string"
                            },
                            "currency": {
                              "type": "string"
                            }
                          }
                        },
                        "from": {
                          "type": "object",
                          "properties": {
                            "nickname": {
                              "type": "string"
                            },
                            "mobile_phone_number": {
                              "type": "string"
                            }
                          }
                        },
                        "to": {
                          "type": "object",
                          "properties": {
                            "mobile_phone_number": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "to_transfer_to_account": {
                      "type": "object",
                      "properties": {
                        "to": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "object",
                              "properties": {
                                "iban": {
                                  "type": "string"
                                },
                                "number": {
                                  "type": "string"
                                }
                              }
                            },
                            "branch_number": {
                              "type": "string"
                            },
                            "bank_code": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "transfer_type": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "string"
                            },
                            "currency": {
                              "type": "string"
                            }
                          }
                        },
                        "future_date": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "end_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "transaction_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "from": {
                  "type": "object",
                  "properties": {
                    "account_id": {
                      "type": "string"
                    },
                    "bank_id": {
                      "type": "string"
                    }
                  }
                },
                "start_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-requests"
    },
    {
      "operation_id": "OBPv3.0.0-corePrivateAccountsAllBanks",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "corePrivateAccountsAllBanks"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/my/accounts",
      "summary": "在所有银行（私人）获取帐户",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Returns the list of accounts containing private views for the user.\nEach account lists the views available to the user.\n\n\noptional request parameters:\n\n* account_type_filter: one or many accountType value, split by comma\n* account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE\n\nwhole url example:\n/my/accounts?account_type_filter=330,CURRENT+PLUS&account_type_filter_operation=INCLUDE\n    \n\nAuthentication is Mandatory\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "accounts": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "label": "String",
            "bank_id": "GENODEM1GLS",
            "account_type": "330",
            "account_routings": [
              {
                "scheme": "AccountNumber",
                "address": "4930396"
              }
            ],
            "views": [
              {
                "id": "owner",
                "short_name": "Owner",
                "description": "This view is for the owner for the account.",
                "is_public": false
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Account",
        "Account Information Service (AIS)",
        "PrivateData",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "views": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "is_public": {
                        "type": "boolean"
                      },
                      "description": {
                        "type": "string"
                      },
                      "short_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "account_type": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "scheme": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/my/accounts"
    },
    {
      "operation_id": "OBPv3.0.0-getUserByUserId",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getUserByUserId"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/users/user_id/USER_ID",
      "summary": "通过USER_ID获取用户",
      "description": "<p>通过USER_ID获取用户</p><p>身份验证是强制性的<br />必须具有CanGetAnyUser授权， </p>",
      "description_markdown": "Get user by USER_ID\n\nAuthentication is Mandatory\nCanGetAnyUser entitlement is required,\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "users": [
          {
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "email": "eveline@example.com",
            "provider_id": "Chris",
            "provider": "http://127.0.0.1:8080",
            "username": "felixsmith",
            "entitlements": {
              "list": [
                {
                  "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
                  "role_name": "CanQueryOtherUser",
                  "bank_id": "GENODEM1GLS"
                }
              ]
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-20005: User not found. Please specify a valid value for USER_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "entitlements": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "bank_id": {
                            "type": "string"
                          },
                          "role_name": {
                            "type": "string"
                          },
                          "entitlement_id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "provider": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "provider_id": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyUser",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/user_id/USER_ID"
    },
    {
      "operation_id": "OBPv3.0.0-getFirehoseAccountsAtOneBank",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getFirehoseAccountsAtOneBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/firehose/accounts/views/VIEW_ID",
      "summary": "在银行获取Firehose帐户",
      "description": "<p>获取为其分配了firehose视图的帐户。 </p><p>该端点允许批量访问帐户。 </p><p>需要CanUseFirehoseAtAnyBank角色</p><p>要显示在列表中，每个帐户必须链接有一个流水视图。 </p><p> firehose视图的is_firehose = true </p><p>对于VIEW_ID，请尝试“所有者” </p><p>身份验证是强制性的</p>",
      "description_markdown": "\nGet Accounts which have a firehose view assigned to them.\n\nThis endpoint allows bulk access to accounts.\n\nRequires the CanUseFirehoseAtAnyBank Role\n\nTo be shown on the list, each Account must have a firehose View linked to it.\n\nA firehose view has is_firehose = true\n\nFor VIEW_ID try 'owner'\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "accounts": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "bank_id": "String",
            "label": "String",
            "number": "String",
            "owners": [
              {
                "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                "provider": "http://127.0.0.1:8080",
                "display_name": "OBP"
              }
            ],
            "type": "String",
            "balance": {
              "currency": "EUR",
              "amount": "10"
            },
            "account_routings": [
              {
                "scheme": "AccountNumber",
                "address": "4930396"
              }
            ],
            "account_rules": [
              {
                "scheme": "OVERDRAFT",
                "value": "10"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account",
        "Account-Firehose",
        "FirehoseData",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "account_rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "scheme": {
                        "type": "string"
                      }
                    }
                  }
                },
                "owners": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "display_name": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                },
                "balance": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string"
                    }
                  }
                },
                "label": {
                  "type": "string"
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "scheme": {
                        "type": "string"
                      }
                    }
                  }
                },
                "bank_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanUseFirehoseAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/firehose/accounts/views/VIEW_ID"
    },
    {
      "operation_id": "OBPv2.0.0-addEntitlement",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "addEntitlement"
      },
      "request_verb": "POST",
      "request_url": "/obp/v2.0.0/users/USER_ID/entitlements",
      "summary": "为用户添加权利。",
      "description": "<p>创建权利。向用户授予角色。 </p><p>权利用于向用户授予系统或银行级别的角色。 （有关帐户级别的权限，请参见视图） </p><p>对于系统级角色（例如CanGetAnyUser），将bank_id设置为空字符串，即“ bank_id”：“” </p><p>对于银行级别的角色（例如CanCreateAccount），将bank_id设置为有效值，例如“ bank_id”：“ my-bank-id” </p><p>必须进行身份验证，并且用户必须是超级管理员。超级管理员列在“道具”文件中。 </p>",
      "description_markdown": "Create Entitlement. Grant Role to User.\n\nEntitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)\n\nFor a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. \"bank_id\":\"\"\n\nFor a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. \"bank_id\":\"my-bank-id\"\n\nAuthentication is required and the user needs to be a Super Admin. Super Admins are listed in the Props file.",
      "example_request_body": {
        "bank_id": "GENODEM1GLS",
        "role_name": "String"
      },
      "success_response_body": {
        "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
        "role_name": "CanQueryOtherUser",
        "bank_id": "GENODEM1GLS"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20005: User not found. Please specify a valid value for USER_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-10007: Incorrect Role name: ",
        "OBP-30205: This entitlement is a Bank Role. Please set bank_id to a valid bank id.",
        "OBP-30206: This entitlement is a System Role. Please set bank_id to empty string.",
        "OBP-30216: Entitlement already exists for the user.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Role",
        "Entitlement",
        "User"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "role_name": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "role_name": {
            "type": "string"
          },
          "entitlement_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateEntitlementAtOneBank",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateEntitlementAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/USER_ID/entitlements"
    },
    {
      "operation_id": "OBPv2.0.0-addKycStatus",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "addKycStatus"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_statuses",
      "summary": "添加KYC状态",
      "description": "<p>为CUSTOMER_ID指定的客户添加一个kyc_status。 KYC状态是客户的KYC状态的时间表</p>",
      "description_markdown": "Add a kyc_status for the customer specified by CUSTOMER_ID. KYC Status is a timeline of the KYC status of the customer",
      "example_request_body": {
        "customer_number": "5987953",
        "ok": true,
        "date": "2017-09-18T22:00:00Z"
      },
      "success_response_body": {
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "ok": true,
        "date": "2017-09-18T22:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-50000: Unknown Error.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-00004: Server error: could not add message",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "KYC",
        "Customer"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "ok": {
            "type": "boolean"
          },
          "customer_number": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "ok": {
            "type": "boolean"
          },
          "customer_number": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanAddKycStatus",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_statuses"
    },
    {
      "operation_id": "OBPv3.1.0-getCheckbookOrders",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCheckbookOrders"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/checkbook/orders",
      "summary": "获取支票簿订单",
      "description": "<p> <strong>注意：此端点当前仅返回示例数据。</strong> </p><pre> <code> Get all checkbook orders</code> </pre>",
      "description_markdown": "**NOTE: This endpoint currently only returns example data.**\n\n      Get all checkbook orders",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "account": {
          "bank_id": "GENODEM1GLS",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "account_type": "330",
          "account_routings": [
            {
              "scheme": "AccountNumber",
              "address": "4930396"
            }
          ],
          "branch_routings": [
            {
              "scheme": "BranchNumber",
              "address": "678"
            }
          ]
        },
        "orders": [
          {
            "order": {
              "order_id": "xjksajfkj",
              "order_date": "07082013",
              "number_of_checkbooks": "4",
              "distribution_channel": "1201",
              "status": "2",
              "first_check_number": "5165276",
              "shipping_code": "1"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50211: Connector did not return the set of check book.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "order": {
                  "type": "object",
                  "properties": {
                    "shipping_code": {
                      "type": "string"
                    },
                    "number_of_checkbooks": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "order_id": {
                      "type": "string"
                    },
                    "distribution_channel": {
                      "type": "string"
                    },
                    "first_check_number": {
                      "type": "string"
                    },
                    "order_date": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "account": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "account_type": {
                "type": "string"
              },
              "branch_routings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "scheme": {
                      "type": "string"
                    }
                  }
                }
              },
              "account_routings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "scheme": {
                      "type": "string"
                    }
                  }
                }
              },
              "account_id": {
                "type": "string"
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/checkbook/orders"
    },
    {
      "operation_id": "OBPv2.0.0-getKycDocuments",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "getKycDocuments"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/customers/CUSTOMER_ID/kyc_documents",
      "summary": "获取客户KYC文件",
      "description": "<p>获取CUSTOMER_ID指定的客户的KYC（了解您的客户）文档<br />获取确认客户身份的文件清单<br />护照，驾驶执照等<br />身份验证是可选的</p>",
      "description_markdown": "Get KYC (know your customer) documents for a customer specified by CUSTOMER_ID\nGet a list of documents that affirm the identity of the customer\nPassport, driving licence etc.\nAuthentication is Optional",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "documents": [
          {
            "bank_id": "GENODEM1GLS",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "id": "PlaceholderString",
            "customer_number": "5987953",
            "type": "PlaceholderString",
            "number": "PlaceholderString",
            "issue_date": "2017-09-18T22:00:00Z",
            "issue_place": "PlaceholderString",
            "expiry_date": "2017-09-18T22:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "KYC",
        "Customer"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "issue_place": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "issue_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "id": {
                  "type": "string"
                },
                "expiry_date": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyKycDocuments",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/customers/CUSTOMER_ID/kyc_documents"
    },
    {
      "operation_id": "OBPv2.0.0-publicAccountsAtOneBank",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "publicAccountsAtOneBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/accounts/public",
      "summary": "在银行获取公共帐户",
      "description": "<p>返回位于BANK_ID的公共帐户（匿名访问）列表。对于每个帐户，API都会返回ID和可用的视图。 </p><p>身份验证是可选的</p>",
      "description_markdown": "Returns a list of the public accounts (Anonymous access) at BANK_ID. For each account the API returns the ID and the available views.\n\nAuthentication is Optional\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "accounts": [
          {
            "id": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0",
            "label": "NoneLabel",
            "bank_id": "GENODEM1GLS",
            "views_available": [
              {
                "id": "1",
                "short_name": "HHH",
                "is_public": true
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account-Public",
        "Account",
        "PublicData",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "views_available": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "is_public": {
                        "type": "boolean"
                      },
                      "short_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "bank_id": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/public"
    },
    {
      "operation_id": "OBPv1.2.1-addCounterpartyOpenCorporatesUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCounterpartyOpenCorporatesUrl"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/open_corporates_url",
      "summary": "将开放公司网址添加到交易对手",
      "description": "<p>将打开的公司网址添加到其他银行帐户。 </p>",
      "description_markdown": "Add open corporates url to other bank account.",
      "example_request_body": {
        "open_corporates_URL": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow adding an open corporate url",
        "URL cannot be added",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "open_corporates_URL": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/open_corporates_url"
    },
    {
      "operation_id": "OBPv3.1.0-getProducts",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getProducts"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/products",
      "summary": "获取产品",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Returns information about the financial products offered by a bank specified by BANK_ID including:\n\n* Name\n* Code\n* Parent Product Code\n* Category\n* Family\n* Super Family\n* More info URL\n* Description\n* Terms and Conditions\n* License the data under this endpoint is released under\nAuthentication is Mandatory",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "products": [
          {
            "bank_id": "GENODEM1GLS",
            "code": "product_code",
            "parent_product_code": "parent",
            "name": "product name",
            "category": "category",
            "family": "family",
            "super_family": "super family",
            "more_info_url": "www.example.com/prod1/more-info.html",
            "details": "Details",
            "description": "Description",
            "meta": {
              "license": {
                "id": "5",
                "name": "TESOBE"
              }
            },
            "product_attributes": [
              {
                "product_code": "saving1",
                "product_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
                "name": "OVERDRAFT_START_DATE",
                "type": "DATE_WITH_DAY",
                "value": "2012-04-23"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30011: Product not found. Please specify a valid value for PRODUCT_CODE.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Product"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "super_family": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "product_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "product_attribute_id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "product_code": {
                        "type": "string"
                      }
                    }
                  }
                },
                "description": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "parent_product_code": {
                  "type": "string"
                },
                "more_info_url": {
                  "type": "string"
                },
                "family": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "license": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "name": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/products"
    },
    {
      "operation_id": "OBPv3.0.0-dataWarehouseStatistics",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "dataWarehouseStatistics"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.0.0/search/warehouse/statistics/INDEX/FIELD",
      "summary": "数据仓库统计",
      "description": "<p>搜索数据仓库并获得仓库字段的统计汇总</p><p>在某些数字字段上进行统计汇总： </p><p> <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html\">https://www.elastic.co/guide/zh-CN/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html</a> </p><p>身份验证是强制性的</p><p> CanSearchWarehouseStats角色是必需的。您可以在下面提出要求。 </p><p>弹性（搜索）用于后台。请参阅下面的链接以获取语法。 </p><p>用法示例： </p><p>邮政/搜索/仓库/统计/索引/字段</p><p> POST /搜索/仓库/统计/全部/字段</p><p> {体内任何有效的Elasticsearch查询DSL} </p><p> <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\">Elasticsearch查询DSL</a> </p><p> <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html\">弹性简单查询</a> </p><p> <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html\">弹性聚合</a> </p>",
      "description_markdown": "\nSearch the data warehouse and get statistical aggregations over a warehouse field\n\nDoes a stats aggregation over some numeric field:\n\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html\n\nAuthentication is Mandatory\n\nCanSearchWarehouseStats Role is required. You can request this below.\n\nElastic (search) is used in the background. See links below for syntax.\n\nExamples of usage:\n\nPOST /search/warehouse/statistics/INDEX/FIELD\n\nPOST /search/warehouse/statistics/ALL/FIELD\n\n{ Any valid elasticsearch query DSL in the body }\n\n\n[Elasticsearch query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html)\n\n[Elastic simple query](https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-request-body.html)\n\n[Elastic aggregations](https://www.elastic.co/guide/en/elasticsearch/reference/6.2/search-aggregations.html)\n\n\n        ",
      "example_request_body": {
        "query": {
          "match_all": {}
        }
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Data-Warehouse",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "match_all": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanSearchWarehouseStatistics",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/search/warehouse/statistics/INDEX/FIELD"
    },
    {
      "operation_id": "OBPv4.0.0-getPrivateAccountByIdFull",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getPrivateAccountByIdFull"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/account",
      "summary": "按ID获取帐户（完整）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Information returned about an account specified by ACCOUNT_ID as moderated by the view (VIEW_ID):\n\n* Number\n* Owners\n* Type\n* Balance\n* IBAN\n* Available views (sorted by short_name)\n\nMore details about the data moderation by the view [here](#1_2_1-getViewsForBankAccount).\n\nPSD2 Context: PSD2 requires customers to have access to their account information via third party applications.\nThis call provides balance and other account information via delegated authentication using OAuth.\n\nAuthentication is required if the 'is_public' field in view (VIEW_ID) is not set to `true`.\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "label": "NoneLabel",
        "number": "123",
        "owners": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "provider": "http://127.0.0.1:8080",
            "display_name": "OBP"
          }
        ],
        "product_code": "OBP",
        "balance": {
          "currency": "EUR",
          "amount": "10"
        },
        "views_available": [
          {
            "id": "123",
            "short_name": "short_name",
            "description": "description",
            "is_public": true,
            "alias": "None",
            "hide_metadata_if_alias_used": true,
            "can_add_comment": true,
            "can_add_corporate_location": true,
            "can_add_image": true,
            "can_add_image_url": true,
            "can_add_more_info": true,
            "can_add_open_corporates_url": true,
            "can_add_physical_location": true,
            "can_add_private_alias": true,
            "can_add_public_alias": true,
            "can_add_tag": true,
            "can_add_url": true,
            "can_add_where_tag": true,
            "can_delete_comment": true,
            "can_delete_corporate_location": true,
            "can_delete_image": true,
            "can_delete_physical_location": true,
            "can_delete_tag": true,
            "can_delete_where_tag": true,
            "can_edit_owner_comment": true,
            "can_see_bank_account_balance": true,
            "can_see_bank_account_bank_name": true,
            "can_see_bank_account_currency": true,
            "can_see_bank_account_iban": true,
            "can_see_bank_account_label": true,
            "can_see_bank_account_national_identifier": true,
            "can_see_bank_account_number": true,
            "can_see_bank_account_owners": true,
            "can_see_bank_account_swift_bic": true,
            "can_see_bank_account_type": true,
            "can_see_comments": true,
            "can_see_corporate_location": true,
            "can_see_image_url": true,
            "can_see_images": true,
            "can_see_more_info": true,
            "can_see_open_corporates_url": true,
            "can_see_other_account_bank_name": true,
            "can_see_other_account_iban": true,
            "can_see_other_account_kind": true,
            "can_see_other_account_metadata": true,
            "can_see_other_account_national_identifier": true,
            "can_see_other_account_number": true,
            "can_see_other_account_swift_bic": true,
            "can_see_owner_comment": true,
            "can_see_physical_location": true,
            "can_see_private_alias": true,
            "can_see_public_alias": true,
            "can_see_tags": true,
            "can_see_transaction_amount": true,
            "can_see_transaction_balance": true,
            "can_see_transaction_currency": true,
            "can_see_transaction_description": true,
            "can_see_transaction_finish_date": true,
            "can_see_transaction_metadata": true,
            "can_see_transaction_other_bank_account": true,
            "can_see_transaction_start_date": true,
            "can_see_transaction_this_bank_account": true,
            "can_see_transaction_type": true,
            "can_see_url": true,
            "can_see_where_tag": true
          }
        ],
        "bank_id": "GENODEM1GLS",
        "account_routing": {
          "scheme": "AccountNumber",
          "address": "4930396"
        },
        "account_attributes": [
          {
            "product_code": "saving1",
            "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "name": "OVERDRAFT_START_DATE",
            "type": "DATE_WITH_DAY",
            "value": "2012-04-23"
          }
        ],
        "tags": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "value": "OBP",
            "date": "2017-09-18T22:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "account_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "account_attribute_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                }
              }
            }
          },
          "label": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "display_name": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "id": {
            "type": "string"
          },
          "views_available": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "can_see_other_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_where_tag": {
                  "type": "boolean"
                },
                "can_see_url": {
                  "type": "boolean"
                },
                "can_see_bank_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_tags": {
                  "type": "boolean"
                },
                "can_see_transaction_balance": {
                  "type": "boolean"
                },
                "can_delete_corporate_location": {
                  "type": "boolean"
                },
                "can_add_image_url": {
                  "type": "boolean"
                },
                "can_see_public_alias": {
                  "type": "boolean"
                },
                "can_add_comment": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "can_see_corporate_location": {
                  "type": "boolean"
                },
                "can_see_other_account_bank_name": {
                  "type": "boolean"
                },
                "can_see_more_info": {
                  "type": "boolean"
                },
                "can_see_physical_location": {
                  "type": "boolean"
                },
                "can_edit_owner_comment": {
                  "type": "boolean"
                },
                "can_see_private_alias": {
                  "type": "boolean"
                },
                "can_see_bank_account_balance": {
                  "type": "boolean"
                },
                "can_add_public_alias": {
                  "type": "boolean"
                },
                "can_see_bank_account_owners": {
                  "type": "boolean"
                },
                "can_see_other_account_metadata": {
                  "type": "boolean"
                },
                "can_delete_physical_location": {
                  "type": "boolean"
                },
                "hide_metadata_if_alias_used": {
                  "type": "boolean"
                },
                "can_see_transaction_this_bank_account": {
                  "type": "boolean"
                },
                "can_see_image_url": {
                  "type": "boolean"
                },
                "can_see_transaction_type": {
                  "type": "boolean"
                },
                "can_see_images": {
                  "type": "boolean"
                },
                "can_see_transaction_amount": {
                  "type": "boolean"
                },
                "can_see_transaction_metadata": {
                  "type": "boolean"
                },
                "id": {
                  "type": "string"
                },
                "can_see_comments": {
                  "type": "boolean"
                },
                "can_see_other_account_iban": {
                  "type": "boolean"
                },
                "can_add_image": {
                  "type": "boolean"
                },
                "can_see_bank_account_type": {
                  "type": "boolean"
                },
                "can_see_other_account_kind": {
                  "type": "boolean"
                },
                "can_see_bank_account_currency": {
                  "type": "boolean"
                },
                "can_add_where_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_start_date": {
                  "type": "boolean"
                },
                "can_see_bank_account_label": {
                  "type": "boolean"
                },
                "can_add_private_alias": {
                  "type": "boolean"
                },
                "can_see_transaction_currency": {
                  "type": "boolean"
                },
                "can_add_more_info": {
                  "type": "boolean"
                },
                "can_delete_comment": {
                  "type": "boolean"
                },
                "can_see_transaction_other_bank_account": {
                  "type": "boolean"
                },
                "can_see_bank_account_number": {
                  "type": "boolean"
                },
                "can_add_corporate_location": {
                  "type": "boolean"
                },
                "can_add_url": {
                  "type": "boolean"
                },
                "short_name": {
                  "type": "string"
                },
                "can_delete_where_tag": {
                  "type": "boolean"
                },
                "is_public": {
                  "type": "boolean"
                },
                "can_see_owner_comment": {
                  "type": "boolean"
                },
                "can_see_transaction_finish_date": {
                  "type": "boolean"
                },
                "can_see_open_corporates_url": {
                  "type": "boolean"
                },
                "can_add_physical_location": {
                  "type": "boolean"
                },
                "can_see_bank_account_iban": {
                  "type": "boolean"
                },
                "can_see_other_account_national_identifier": {
                  "type": "boolean"
                },
                "can_delete_image": {
                  "type": "boolean"
                },
                "can_add_tag": {
                  "type": "boolean"
                },
                "can_add_open_corporates_url": {
                  "type": "boolean"
                },
                "can_delete_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_description": {
                  "type": "boolean"
                },
                "can_see_bank_account_national_identifier": {
                  "type": "boolean"
                },
                "can_see_other_account_number": {
                  "type": "boolean"
                },
                "can_see_bank_account_bank_name": {
                  "type": "boolean"
                },
                "alias": {
                  "type": "string"
                }
              }
            }
          },
          "account_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          },
          "balance": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "display_name": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "value": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/account"
    },
    {
      "operation_id": "OBPv3.0.0-getCustomersForUser",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getCustomersForUser"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/users/current/customers",
      "summary": "获取当前用户的客户",
      "description": "<p>获取链接到用户的所有客户。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Gets all Customers that are linked to a User.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "customers": [
          {
            "bank_id": "GENODEM1GLS",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "customer_number": "5987953",
            "legal_name": "Eveline Tripman",
            "mobile_phone_number": "+44 07972 444 876",
            "email": "eveline@example.com",
            "face_image": {
              "url": "www.openbankproject",
              "date": "2017-09-18T22:00:00Z"
            },
            "date_of_birth": "19900101",
            "relationship_status": "single",
            "dependants": 10,
            "dob_of_dependants": [
              "19900101"
            ],
            "credit_rating": {
              "rating": "OBP",
              "source": "OBP"
            },
            "credit_limit": {
              "currency": "EUR",
              "amount": "10"
            },
            "highest_education_attained": "Master",
            "employment_status": "worker",
            "kyc_status": true,
            "last_ok_date": "2017-09-18T22:00:00Z",
            "title": "Dr.",
            "branch_id": "DERBY6",
            "name_suffix": "Sr"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "customers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "employment_status": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "relationship_status": {
                  "type": "string"
                },
                "last_ok_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "highest_education_attained": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "credit_rating": {
                  "type": "object",
                  "properties": {
                    "source": {
                      "type": "string"
                    },
                    "rating": {
                      "type": "string"
                    }
                  }
                },
                "name_suffix": {
                  "type": "string"
                },
                "credit_limit": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string"
                    }
                  }
                },
                "dependants": {
                  "type": "integer"
                },
                "date_of_birth": {
                  "type": "string"
                },
                "legal_name": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "face_image": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                },
                "dob_of_dependants": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "branch_id": {
                  "type": "string"
                },
                "mobile_phone_number": {
                  "type": "string"
                },
                "kyc_status": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/current/customers"
    },
    {
      "operation_id": "OBPv1.2.1-getOtherAccountPrivateAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getOtherAccountPrivateAlias"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias",
      "summary": "获取其他帐户专用别名",
      "description": "<p>返回另一个帐户OTHER_ACCOUNT_ID的私有别名。 </p><p>身份验证是可选的<br />如果视图不是公共的，则需要认证。 </p>",
      "description_markdown": "Returns the private alias of the other account OTHER_ACCOUNT_ID.\n\nAuthentication is Optional\nAuthentication is required if the view is not public.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "alias": "String"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "the view does not allow private alias access",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias"
    },
    {
      "operation_id": "OBPv1.3.0-getCards",
      "implemented_by": {
        "version": "OBPv1.3.0",
        "function": "getCards"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.3.0/cards",
      "summary": "获取当前用户的卡片",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Returns data about all the physical cards a user has been issued. These could be debit cards, credit cards, etc.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "cards": [
          {
            "bank_id": "GENODEM1GLS",
            "bank_card_number": "364435172576215",
            "name_on_card": "String",
            "issue_number": "1",
            "serial_number": "1324234",
            "valid_from_date": "2017-09-18T22:00:00Z",
            "expires_date": "2017-09-18T22:00:00Z",
            "enabled": true,
            "cancelled": true,
            "on_hot_list": true,
            "technology": "String",
            "networks": [
              "String"
            ],
            "allows": [
              "String"
            ],
            "account": {
              "id": "123",
              "label": "OBP",
              "views_available": [
                {
                  "id": "123",
                  "short_name": "short_name",
                  "description": "description",
                  "is_public": true,
                  "alias": "None",
                  "hide_metadata_if_alias_used": true,
                  "can_add_comment": true,
                  "can_add_corporate_location": true,
                  "can_add_image": true,
                  "can_add_image_url": true,
                  "can_add_more_info": true,
                  "can_add_open_corporates_url": true,
                  "can_add_physical_location": true,
                  "can_add_private_alias": true,
                  "can_add_public_alias": true,
                  "can_add_tag": true,
                  "can_add_url": true,
                  "can_add_where_tag": true,
                  "can_delete_comment": true,
                  "can_delete_corporate_location": true,
                  "can_delete_image": true,
                  "can_delete_physical_location": true,
                  "can_delete_tag": true,
                  "can_delete_where_tag": true,
                  "can_edit_owner_comment": true,
                  "can_see_bank_account_balance": true,
                  "can_see_bank_account_bank_name": true,
                  "can_see_bank_account_currency": true,
                  "can_see_bank_account_iban": true,
                  "can_see_bank_account_label": true,
                  "can_see_bank_account_national_identifier": true,
                  "can_see_bank_account_number": true,
                  "can_see_bank_account_owners": true,
                  "can_see_bank_account_swift_bic": true,
                  "can_see_bank_account_type": true,
                  "can_see_comments": true,
                  "can_see_corporate_location": true,
                  "can_see_image_url": true,
                  "can_see_images": true,
                  "can_see_more_info": true,
                  "can_see_open_corporates_url": true,
                  "can_see_other_account_bank_name": true,
                  "can_see_other_account_iban": true,
                  "can_see_other_account_kind": true,
                  "can_see_other_account_metadata": true,
                  "can_see_other_account_national_identifier": true,
                  "can_see_other_account_number": true,
                  "can_see_other_account_swift_bic": true,
                  "can_see_owner_comment": true,
                  "can_see_physical_location": true,
                  "can_see_private_alias": true,
                  "can_see_public_alias": true,
                  "can_see_tags": true,
                  "can_see_transaction_amount": true,
                  "can_see_transaction_balance": true,
                  "can_see_transaction_currency": true,
                  "can_see_transaction_description": true,
                  "can_see_transaction_finish_date": true,
                  "can_see_transaction_metadata": true,
                  "can_see_transaction_other_bank_account": true,
                  "can_see_transaction_start_date": true,
                  "can_see_transaction_this_bank_account": true,
                  "can_see_transaction_type": true,
                  "can_see_url": true,
                  "can_see_where_tag": true
                }
              ],
              "bank_id": "GENODEM1GLS"
            },
            "replacement": {
              "requested_date": "2017-09-18T22:00:00Z",
              "reason_requested": "RENEW"
            },
            "pin_reset": [
              {
                "requested_date": "2017-09-18T22:00:00Z",
                "reason_requested": "FORGOT"
              }
            ],
            "collected": "2017-09-18T22:00:00Z",
            "posted": "2017-09-18T22:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Card",
        "User"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "cards": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "technology": {
                  "type": "string"
                },
                "name_on_card": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "valid_from_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "enabled": {
                  "type": "boolean"
                },
                "pin_reset": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "reason_requested": {
                        "type": "string"
                      },
                      "requested_date": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "replacement": {
                  "type": "object",
                  "properties": {
                    "reason_requested": {
                      "type": "string"
                    },
                    "requested_date": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "on_hot_list": {
                  "type": "boolean"
                },
                "expires_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "networks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "bank_card_number": {
                  "type": "string"
                },
                "posted": {
                  "type": "string",
                  "format": "date-time"
                },
                "collected": {
                  "type": "string",
                  "format": "date-time"
                },
                "issue_number": {
                  "type": "string"
                },
                "serial_number": {
                  "type": "string"
                },
                "cancelled": {
                  "type": "boolean"
                },
                "allows": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "account": {
                  "type": "object",
                  "properties": {
                    "bank_id": {
                      "type": "string"
                    },
                    "views_available": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "can_see_other_account_swift_bic": {
                            "type": "boolean"
                          },
                          "can_see_where_tag": {
                            "type": "boolean"
                          },
                          "can_see_url": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_swift_bic": {
                            "type": "boolean"
                          },
                          "can_see_tags": {
                            "type": "boolean"
                          },
                          "can_see_transaction_balance": {
                            "type": "boolean"
                          },
                          "can_delete_corporate_location": {
                            "type": "boolean"
                          },
                          "can_add_image_url": {
                            "type": "boolean"
                          },
                          "can_see_public_alias": {
                            "type": "boolean"
                          },
                          "can_add_comment": {
                            "type": "boolean"
                          },
                          "description": {
                            "type": "string"
                          },
                          "can_see_corporate_location": {
                            "type": "boolean"
                          },
                          "can_see_other_account_bank_name": {
                            "type": "boolean"
                          },
                          "can_see_more_info": {
                            "type": "boolean"
                          },
                          "can_see_physical_location": {
                            "type": "boolean"
                          },
                          "can_edit_owner_comment": {
                            "type": "boolean"
                          },
                          "can_see_private_alias": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_balance": {
                            "type": "boolean"
                          },
                          "can_add_public_alias": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_owners": {
                            "type": "boolean"
                          },
                          "can_see_other_account_metadata": {
                            "type": "boolean"
                          },
                          "can_delete_physical_location": {
                            "type": "boolean"
                          },
                          "hide_metadata_if_alias_used": {
                            "type": "boolean"
                          },
                          "can_see_transaction_this_bank_account": {
                            "type": "boolean"
                          },
                          "can_see_image_url": {
                            "type": "boolean"
                          },
                          "can_see_transaction_type": {
                            "type": "boolean"
                          },
                          "can_see_images": {
                            "type": "boolean"
                          },
                          "can_see_transaction_amount": {
                            "type": "boolean"
                          },
                          "can_see_transaction_metadata": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "can_see_comments": {
                            "type": "boolean"
                          },
                          "can_see_other_account_iban": {
                            "type": "boolean"
                          },
                          "can_add_image": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_type": {
                            "type": "boolean"
                          },
                          "can_see_other_account_kind": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_currency": {
                            "type": "boolean"
                          },
                          "can_add_where_tag": {
                            "type": "boolean"
                          },
                          "can_see_transaction_start_date": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_label": {
                            "type": "boolean"
                          },
                          "can_add_private_alias": {
                            "type": "boolean"
                          },
                          "can_see_transaction_currency": {
                            "type": "boolean"
                          },
                          "can_add_more_info": {
                            "type": "boolean"
                          },
                          "can_delete_comment": {
                            "type": "boolean"
                          },
                          "can_see_transaction_other_bank_account": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_number": {
                            "type": "boolean"
                          },
                          "can_add_corporate_location": {
                            "type": "boolean"
                          },
                          "can_add_url": {
                            "type": "boolean"
                          },
                          "short_name": {
                            "type": "string"
                          },
                          "can_delete_where_tag": {
                            "type": "boolean"
                          },
                          "is_public": {
                            "type": "boolean"
                          },
                          "can_see_owner_comment": {
                            "type": "boolean"
                          },
                          "can_see_transaction_finish_date": {
                            "type": "boolean"
                          },
                          "can_see_open_corporates_url": {
                            "type": "boolean"
                          },
                          "can_add_physical_location": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_iban": {
                            "type": "boolean"
                          },
                          "can_see_other_account_national_identifier": {
                            "type": "boolean"
                          },
                          "can_delete_image": {
                            "type": "boolean"
                          },
                          "can_add_tag": {
                            "type": "boolean"
                          },
                          "can_add_open_corporates_url": {
                            "type": "boolean"
                          },
                          "can_delete_tag": {
                            "type": "boolean"
                          },
                          "can_see_transaction_description": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_national_identifier": {
                            "type": "boolean"
                          },
                          "can_see_other_account_number": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_bank_name": {
                            "type": "boolean"
                          },
                          "alias": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "label": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/cards"
    },
    {
      "operation_id": "OBPv3.0.0-addScope",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "addScope"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.0.0/consumers/CONSUMER_ID/scopes",
      "summary": "添加消费者范围。",
      "description": "<p>创建范围。授予消费者角色。 </p><p>范围用于将系统或银行级别的角色授予消费者（App）。 （有关帐户级别的权限，请参见视图） </p><p>对于系统级角色（例如CanGetAnyUser），将bank_id设置为空字符串，即“ bank_id”：“” </p><p>对于银行级别的角色（例如CanCreateAccount），将bank_id设置为有效值，例如“ bank_id”：“ my-bank-id” </p>",
      "description_markdown": "Create Scope. Grant Role to Consumer.\n\nScopes are used to grant System or Bank level roles to the Consumer (App). (For Account level privileges, see Views)\n\nFor a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. \"bank_id\":\"\"\n\nFor a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. \"bank_id\":\"my-bank-id\"\n\n",
      "example_request_body": {
        "bank_id": "GENODEM1GLS",
        "role_name": "CanGetEntitlementsForAnyUserAtOneBank"
      },
      "success_response_body": {
        "scope_id": "88625da4-a671-435e-9d24-e5b6e5cc404f",
        "role_name": "CanGetEntitlementsForAnyUserAtOneBank",
        "bank_id": "GENODEM1GLS"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20024: Consumer not found. Please specify a valid value for CONSUMER_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-10007: Incorrect Role name: ",
        "OBP-30205: This entitlement is a Bank Role. Please set bank_id to a valid bank id.",
        "OBP-30206: This entitlement is a System Role. Please set bank_id to empty string.",
        "OBP-30216: Entitlement already exists for the user.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Scope",
        "Role",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "role_name": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "role_name": {
            "type": "string"
          },
          "scope_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateScopeAtOneBank",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateScopeAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/consumers/CONSUMER_ID/scopes"
    },
    {
      "operation_id": "OBPv3.1.0-getCustomerByCustomerNumber",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCustomerByCustomerNumber"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/customer-number",
      "summary": "通过CUSTOMER_NUMBER获取客户",
      "description": "<p>获取由CUSTOMER_NUMBER指定的客户。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Gets the Customer specified by CUSTOMER_NUMBER.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "customer_number": "5987953"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "eveline@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "2017-09-18T22:00:00Z"
        },
        "date_of_birth": "2017-09-18T22:00:00Z",
        "relationship_status": "single",
        "dependants": 10,
        "dob_of_dependants": [
          "2017-09-18T22:00:00Z"
        ],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "10"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2017-09-18T22:00:00Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30008: User Customer Link not found by USER_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "KYC",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "customer_number": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "employment_status": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "rating": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "dependants": {
            "type": "integer"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/customer-number"
    },
    {
      "operation_id": "OBPv3.1.0-getCreditLimitRequests",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCreditLimitRequests"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/credit_limit/requests",
      "summary": "获取信用额度订单请求 ",
      "description": "<p> <strong>注意：此端点当前仅返回示例数据。</strong> </p><p>获取信用额度订单请求</p>",
      "description_markdown": "**NOTE: This endpoint currently only returns example data.**\n\n      \nGet Credit Limit Order Requests \n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "rank_amount_1": "String",
        "nominal_interest_1": "String",
        "rank_amount_2": "String",
        "nominal_interest_2": "String"
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Customer"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "nominal_interest_2": {
            "type": "string"
          },
          "rank_amount_2": {
            "type": "string"
          },
          "nominal_interest_1": {
            "type": "string"
          },
          "rank_amount_1": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/credit_limit/requests"
    },
    {
      "operation_id": "OBPv3.1.0-addCardForBank",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "addCardForBank"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/cards",
      "summary": "创建卡",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Create Card at bank specified by BANK_ID .\n\nAuthentication is Mandatory\n",
      "example_request_body": {
        "card_number": "364435172576215",
        "card_type": "Credit",
        "name_on_card": "SusanSmith",
        "issue_number": "1",
        "serial_number": "1324234",
        "valid_from_date": "2017-09-18T22:00:00Z",
        "expires_date": "2017-09-18T22:00:00Z",
        "enabled": true,
        "technology": "technology1",
        "networks": [
          "network1",
          "network2"
        ],
        "allows": [
          "credit",
          "debit"
        ],
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "replacement": {
          "requested_date": "2017-09-18T22:00:00Z",
          "reason_requested": "RENEW"
        },
        "pin_reset": [
          {
            "requested_date": "2017-09-18T22:00:00Z",
            "reason_requested": "FORGOT"
          },
          {
            "requested_date": "2019-12-02T09:27:34Z",
            "reason_requested": "GOOD_SECURITY_PRACTICE"
          }
        ],
        "collected": "2017-09-18T22:00:00Z",
        "posted": "2017-09-18T22:00:00Z",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "success_response_body": {
        "card_id": "36f8a9e6-c2b1-407a-8bd0-421b7119307e ",
        "bank_id": "GENODEM1GLS",
        "card_number": "364435172576215",
        "card_type": "Credit",
        "name_on_card": "SusanSmith",
        "issue_number": "1",
        "serial_number": "1324234",
        "valid_from_date": "2017-09-18T22:00:00Z",
        "expires_date": "2017-09-18T22:00:00Z",
        "enabled": true,
        "cancelled": true,
        "on_hot_list": true,
        "technology": "technologyString1",
        "networks": [
          "networks1"
        ],
        "allows": [
          "credit",
          "debit"
        ],
        "account": {
          "id": "123",
          "label": "OBP",
          "views_available": [
            {
              "id": "123",
              "short_name": "short_name",
              "description": "description",
              "is_public": true,
              "alias": "None",
              "hide_metadata_if_alias_used": true,
              "can_add_comment": true,
              "can_add_corporate_location": true,
              "can_add_image": true,
              "can_add_image_url": true,
              "can_add_more_info": true,
              "can_add_open_corporates_url": true,
              "can_add_physical_location": true,
              "can_add_private_alias": true,
              "can_add_public_alias": true,
              "can_add_tag": true,
              "can_add_url": true,
              "can_add_where_tag": true,
              "can_delete_comment": true,
              "can_delete_corporate_location": true,
              "can_delete_image": true,
              "can_delete_physical_location": true,
              "can_delete_tag": true,
              "can_delete_where_tag": true,
              "can_edit_owner_comment": true,
              "can_see_bank_account_balance": true,
              "can_see_bank_account_bank_name": true,
              "can_see_bank_account_currency": true,
              "can_see_bank_account_iban": true,
              "can_see_bank_account_label": true,
              "can_see_bank_account_national_identifier": true,
              "can_see_bank_account_number": true,
              "can_see_bank_account_owners": true,
              "can_see_bank_account_swift_bic": true,
              "can_see_bank_account_type": true,
              "can_see_comments": true,
              "can_see_corporate_location": true,
              "can_see_image_url": true,
              "can_see_images": true,
              "can_see_more_info": true,
              "can_see_open_corporates_url": true,
              "can_see_other_account_bank_name": true,
              "can_see_other_account_iban": true,
              "can_see_other_account_kind": true,
              "can_see_other_account_metadata": true,
              "can_see_other_account_national_identifier": true,
              "can_see_other_account_number": true,
              "can_see_other_account_swift_bic": true,
              "can_see_owner_comment": true,
              "can_see_physical_location": true,
              "can_see_private_alias": true,
              "can_see_public_alias": true,
              "can_see_tags": true,
              "can_see_transaction_amount": true,
              "can_see_transaction_balance": true,
              "can_see_transaction_currency": true,
              "can_see_transaction_description": true,
              "can_see_transaction_finish_date": true,
              "can_see_transaction_metadata": true,
              "can_see_transaction_other_bank_account": true,
              "can_see_transaction_start_date": true,
              "can_see_transaction_this_bank_account": true,
              "can_see_transaction_type": true,
              "can_see_url": true,
              "can_see_where_tag": true
            }
          ],
          "bank_id": "GENODEM1GLS"
        },
        "replacement": {
          "requested_date": "2017-09-18T22:00:00Z",
          "reason_requested": "RENEW"
        },
        "pin_reset": [
          {
            "requested_date": "2017-09-18T22:00:00Z",
            "reason_requested": "FORGOT"
          }
        ],
        "collected": "2017-09-18T22:00:00Z",
        "posted": "2017-09-18T22:00:00Z",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10015: Allowed values are: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Card"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "card_number": {
            "type": "string"
          },
          "valid_from_date": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "allows": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "technology": {
            "type": "string"
          },
          "replacement": {
            "type": "object",
            "properties": {
              "reason_requested": {
                "type": "string"
              },
              "requested_date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "card_type": {
            "type": "string"
          },
          "name_on_card": {
            "type": "string"
          },
          "expires_date": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "pin_reset": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "reason_requested": {
                  "type": "string"
                },
                "requested_date": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "posted": {
            "type": "string",
            "format": "date-time"
          },
          "networks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "collected": {
            "type": "string",
            "format": "date-time"
          },
          "issue_number": {
            "type": "string"
          },
          "serial_number": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "card_number": {
            "type": "string"
          },
          "valid_from_date": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "allows": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pin_reset": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "reason_requested": {
                  "type": "string"
                },
                "requested_date": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "replacement": {
            "type": "object",
            "properties": {
              "reason_requested": {
                "type": "string"
              },
              "requested_date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "on_hot_list": {
            "type": "boolean"
          },
          "card_type": {
            "type": "string"
          },
          "name_on_card": {
            "type": "string"
          },
          "expires_date": {
            "type": "string",
            "format": "date-time"
          },
          "technology": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "posted": {
            "type": "string",
            "format": "date-time"
          },
          "card_id": {
            "type": "string"
          },
          "collected": {
            "type": "string",
            "format": "date-time"
          },
          "issue_number": {
            "type": "string"
          },
          "serial_number": {
            "type": "string"
          },
          "cancelled": {
            "type": "boolean"
          },
          "account": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "views_available": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "can_see_other_account_swift_bic": {
                      "type": "boolean"
                    },
                    "can_see_where_tag": {
                      "type": "boolean"
                    },
                    "can_see_url": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_swift_bic": {
                      "type": "boolean"
                    },
                    "can_see_tags": {
                      "type": "boolean"
                    },
                    "can_see_transaction_balance": {
                      "type": "boolean"
                    },
                    "can_delete_corporate_location": {
                      "type": "boolean"
                    },
                    "can_add_image_url": {
                      "type": "boolean"
                    },
                    "can_see_public_alias": {
                      "type": "boolean"
                    },
                    "can_add_comment": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    },
                    "can_see_corporate_location": {
                      "type": "boolean"
                    },
                    "can_see_other_account_bank_name": {
                      "type": "boolean"
                    },
                    "can_see_more_info": {
                      "type": "boolean"
                    },
                    "can_see_physical_location": {
                      "type": "boolean"
                    },
                    "can_edit_owner_comment": {
                      "type": "boolean"
                    },
                    "can_see_private_alias": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_balance": {
                      "type": "boolean"
                    },
                    "can_add_public_alias": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_owners": {
                      "type": "boolean"
                    },
                    "can_see_other_account_metadata": {
                      "type": "boolean"
                    },
                    "can_delete_physical_location": {
                      "type": "boolean"
                    },
                    "hide_metadata_if_alias_used": {
                      "type": "boolean"
                    },
                    "can_see_transaction_this_bank_account": {
                      "type": "boolean"
                    },
                    "can_see_image_url": {
                      "type": "boolean"
                    },
                    "can_see_transaction_type": {
                      "type": "boolean"
                    },
                    "can_see_images": {
                      "type": "boolean"
                    },
                    "can_see_transaction_amount": {
                      "type": "boolean"
                    },
                    "can_see_transaction_metadata": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "can_see_comments": {
                      "type": "boolean"
                    },
                    "can_see_other_account_iban": {
                      "type": "boolean"
                    },
                    "can_add_image": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_type": {
                      "type": "boolean"
                    },
                    "can_see_other_account_kind": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_currency": {
                      "type": "boolean"
                    },
                    "can_add_where_tag": {
                      "type": "boolean"
                    },
                    "can_see_transaction_start_date": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_label": {
                      "type": "boolean"
                    },
                    "can_add_private_alias": {
                      "type": "boolean"
                    },
                    "can_see_transaction_currency": {
                      "type": "boolean"
                    },
                    "can_add_more_info": {
                      "type": "boolean"
                    },
                    "can_delete_comment": {
                      "type": "boolean"
                    },
                    "can_see_transaction_other_bank_account": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_number": {
                      "type": "boolean"
                    },
                    "can_add_corporate_location": {
                      "type": "boolean"
                    },
                    "can_add_url": {
                      "type": "boolean"
                    },
                    "short_name": {
                      "type": "string"
                    },
                    "can_delete_where_tag": {
                      "type": "boolean"
                    },
                    "is_public": {
                      "type": "boolean"
                    },
                    "can_see_owner_comment": {
                      "type": "boolean"
                    },
                    "can_see_transaction_finish_date": {
                      "type": "boolean"
                    },
                    "can_see_open_corporates_url": {
                      "type": "boolean"
                    },
                    "can_add_physical_location": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_iban": {
                      "type": "boolean"
                    },
                    "can_see_other_account_national_identifier": {
                      "type": "boolean"
                    },
                    "can_delete_image": {
                      "type": "boolean"
                    },
                    "can_add_tag": {
                      "type": "boolean"
                    },
                    "can_add_open_corporates_url": {
                      "type": "boolean"
                    },
                    "can_delete_tag": {
                      "type": "boolean"
                    },
                    "can_see_transaction_description": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_national_identifier": {
                      "type": "boolean"
                    },
                    "can_see_other_account_number": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_bank_name": {
                      "type": "boolean"
                    },
                    "alias": {
                      "type": "string"
                    }
                  }
                }
              },
              "label": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "networks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateCardsForBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/banks/BANK_ID/cards"
    },
    {
      "operation_id": "OBPv3.1.0-createUserAuthContext",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createUserAuthContext"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/users/USER_ID/auth-context",
      "summary": "创建用户身份验证上下文",
      "description": "<p>创建用户身份验证上下文。这些键值对将通过连接器传播到适配器。通常用于映射OBP用户和<br />银行用户/客户。 <br />身份验证是强制性的</p>",
      "description_markdown": "Create User Auth Context. These key value pairs will be propagated over connector to adapter. Normally used for mapping OBP user and \n Bank User/Customer. \nAuthentication is Mandatory\n",
      "example_request_body": {
        "key": "CUSTOMER_NUMBER",
        "value": "78987432"
      },
      "success_response_body": {
        "user_auth_context_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "key": "CUSTOMER_NUMBER",
        "value": "78987432"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30053: Could not insert the UserAuthContext",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "user_auth_context_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateUserAuthContext",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/USER_ID/auth-context"
    },
    {
      "operation_id": "OBPv3.1.0-getConsumer",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getConsumer"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/consumers/CONSUMER_ID",
      "summary": "吸引消费者",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Get the Consumer specified by CONSUMER_ID.\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "consumer_id": 1213,
        "app_name": "SOFI",
        "app_type": "Web",
        "description": "Account Management",
        "developer_email": "eveline@example.com",
        "redirect_url": "www.openbankproject.com",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "created_by_user": {
          "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "email": "eveline@example.com",
          "provider_id": "Chris",
          "provider": "http://127.0.0.1:8080",
          "username": "felixsmith"
        },
        "enabled": true,
        "created": "2017-09-18T22:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30019: Consumer not found. Please specify a valid value for CONSUMER_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Consumer",
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "app_name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "created_by_user_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_by_user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "user_id": {
                "type": "string"
              }
            }
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "consumer_id": {
            "type": "integer"
          },
          "developer_email": {
            "type": "string"
          },
          "redirect_url": {
            "type": "string"
          },
          "app_type": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetConsumers",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/consumers/CONSUMER_ID"
    },
    {
      "operation_id": "OBPv3.0.0-privateAccountsAtOneBank",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "privateAccountsAtOneBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/private",
      "summary": "在银行获取帐户（最低）。",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Returns the minimal list of private accounts at BANK_ID that the user has access to.\nFor each account, the API returns the ID, routing addresses and the views available to the current user.\n\nIf you want to see more information on the Views, use the Account Detail call.\n\n\noptional request parameters:\n\n* account_type_filter: one or many accountType value, split by comma\n* account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE\n\nwhole url example:\n/banks/BANK_ID/accounts/private?account_type_filter=330,CURRENT+PLUS&account_type_filter_operation=INCLUDE\n    \n\nAuthentication is Mandatory",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "accounts": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "label": "String",
            "bank_id": "GENODEM1GLS",
            "account_type": "330",
            "account_routings": [
              {
                "scheme": "AccountNumber",
                "address": "4930396"
              }
            ],
            "views": [
              {
                "id": "owner",
                "short_name": "Owner",
                "description": "This view is for the owner for the account.",
                "is_public": false
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Account",
        "Account Information Service (AIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "views": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "is_public": {
                        "type": "boolean"
                      },
                      "description": {
                        "type": "string"
                      },
                      "short_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "account_type": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "scheme": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/private"
    },
    {
      "operation_id": "OBPv2.0.0-getKycStatuses",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "getKycStatuses"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/customers/CUSTOMER_ID/kyc_statuses",
      "summary": "获取客户KYC状态",
      "description": "<p>随时间获取由CUSTOMER_ID指定的客户的KYC状态。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get the KYC statuses for a customer specified by CUSTOMER_ID over time.\n\nAuthentication is Mandatory",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "statuses": [
          {
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "customer_number": "5987953",
            "ok": true,
            "date": "2017-09-18T22:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "KYC",
        "Customer"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "ok": {
                  "type": "boolean"
                },
                "customer_number": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyKycStatuses",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/customers/CUSTOMER_ID/kyc_statuses"
    },
    {
      "operation_id": "OBPv1.2.1-removePermissionForUserForBankAccountForOneView",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "removePermissionForUserForBankAccountForOneView"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/permissions/PROVIDER/PROVIDER_ID/views/VIEW_ID",
      "summary": "撤消对一个视图的访问。",
      "description": "<p>撤消对特定用户的帐户视图的访问权限。 </p><p>用户在其PROVIDER处由PROVIDER_ID标识。 </p><p>该帐户由BANK_ID和ACCOUNT_ID指定。 </p><p>视图由VIEW_ID指定。 </p><p>提供者（可能是URL）必须经过URL编码。 </p><p> PROVIDER_ID通常等效于USERNAME。但是，请参阅“按ID获取用户”或“获取当前用户”以获取提供者信息。 </p><p>尝试撤消对公共视图的访问将返回错误消息。 </p><p>除非至少一个其他用户具有所有者视图访问权限，否则帐户所有者不能撤消对所有者视图的访问权限。 </p><p>身份验证是强制性的，用户需要有权访问所有者视图。 </p>",
      "description_markdown": "Revokes access to a View on an Account for a certain User.\n\n\nThe User is identified by PROVIDER_ID at their PROVIDER.\n\nThe Account is specified by BANK_ID and ACCOUNT_ID.\n\nThe View is specified by VIEW_ID.\n\n\nPROVIDER (may be a URL so) must be URL Encoded.\n\nPROVIDER_ID is normally equivalent to USERNAME. However, see Get User by ID or GET Current User for Provider information.\n\nAttempting to revoke access to a public view will return an error message.\n\nAn Account Owner cannot revoke access to an Owner View unless at least one other User has Owner View access.\n\n      \n\nAuthentication is Mandatory and the user needs to have access to the owner view.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "could not save the privilege",
        "user does not have access to owner view on account",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "View",
        "Account",
        "User",
        "Entitlement",
        "OwnerViewRequired"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/permissions/PROVIDER/PROVIDER_ID/views/VIEW_ID"
    },
    {
      "operation_id": "OBPv3.1.0-saveHistoricalTransaction",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "saveHistoricalTransaction"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/management/historical/transactions ",
      "summary": "保存历史交易 ",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "\nImport the historical transactions.\n       ",
      "example_request_body": {
        "from": {
          "bank_id": "GENODEM1GLS",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "to": {
          "bank_id": "GENODEM1GLS",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "value": {
          "currency": "EUR",
          "amount": "10"
        },
        "description": "this is for work",
        "posted": "2017-09-19T02:31:05Z",
        "completed": "2017-09-19T02:31:05Z",
        "type": "SANDBOX_TAN",
        "charge_policy": "SHARED"
      },
      "success_response_body": {
        "transaction_id": "123",
        "from": {
          "bank_id": "GENODEM1GLS",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "to": {
          "bank_id": "GENODEM1GLS",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "value": {
          "currency": "EUR",
          "amount": "10"
        },
        "description": "this is for work",
        "posted": "2017-09-18T22:00:00Z",
        "completed": "2017-09-18T22:00:00Z",
        "transaction_request_type": "SANDBOX_TAN",
        "charge_policy": "SHARED"
      },
      "error_response_bodies": [
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Transaction-Request"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "posted": {
            "type": "string"
          },
          "to": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              }
            }
          },
          "completed": {
            "type": "string"
          },
          "from": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              }
            }
          },
          "charge_policy": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "transaction_id": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "posted": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_request_type": {
            "type": "string"
          },
          "to": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              }
            }
          },
          "completed": {
            "type": "string",
            "format": "date-time"
          },
          "from": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              }
            }
          },
          "charge_policy": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateHistoricalTransaction",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/historical/transactions "
    },
    {
      "operation_id": "OBPv3.1.0-refreshUser",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "refreshUser"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/users/USER_ID/refresh",
      "summary": "刷新用户。",
      "description": "<p>端点用于更新用户的帐户，视图，帐户所有者。 <br />至于Json主体，可以将其保留为空。 <br />该调用将从后端获取数据，无需在api端准备json主体。 </p><p>身份验证是强制性的</p>",
      "description_markdown": " The endpoint is used for updating the accounts, views, account holders for the user.\n As to the Json body, you can leave it as Empty. \n This call will get data from backend, no need to prepare the json body in api side.\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "duration_time": "10 ms"
      },
      "error_response_bodies": [
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "duration_time": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanRefreshUser",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/USER_ID/refresh"
    },
    {
      "operation_id": "OBPv1.2.1-getOtherAccountMetadata",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getOtherAccountMetadata"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata",
      "summary": "获取其他帐户元数据。",
      "description": "<p>获取另一个帐户的元数据。 <br />仅返回有关另一个银行帐户（OTHER_ACCOUNT_ID）的元数据，该银行帐户已与ACCOUNT_ID在BANK_ID共享了至少一笔交易。 </p><p>如果视图不是公开的，则需要通过OAuth进行身份验证。 </p>",
      "description_markdown": "Get metadata of one other account.\nReturns only the metadata about one other bank account (OTHER_ACCOUNT_ID) that had shared at least one transaction with ACCOUNT_ID at BANK_ID.\n\nAuthentication via OAuth is required if the view is not public.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "public_alias": "NONE",
        "private_alias": "NONE",
        "more_info": "www.openbankproject.com",
        "URL": "www.openbankproject.com",
        "image_URL": "www.openbankproject.com",
        "open_corporates_URL": "www.openbankproject.com",
        "corporate_location": {
          "latitude": 1.231,
          "longitude": 1.231,
          "date": "2017-09-18T22:00:00Z",
          "user": {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "provider": "http://127.0.0.1:8080",
            "display_name": "OBP"
          }
        },
        "physical_location": {
          "latitude": 1.231,
          "longitude": 1.231,
          "date": "2017-09-18T22:00:00Z",
          "user": {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "provider": "http://127.0.0.1:8080",
            "display_name": "OBP"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error.",
        "the view does not allow metadata access"
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "image_URL": {
            "type": "string"
          },
          "corporate_location": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              },
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "URL": {
            "type": "string"
          },
          "open_corporates_URL": {
            "type": "string"
          },
          "physical_location": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              },
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "public_alias": {
            "type": "string"
          },
          "private_alias": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata"
    },
    {
      "operation_id": "OBPv3.1.0-createAccountAttribute",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createAccountAttribute"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/products/PRODUCT_CODE/attribute",
      "summary": "创建帐户属性",
      "description": "<p>创建帐户属性</p><p>帐户属性用于描述带有键入的键值对列表的金融产品。 </p><p>每个帐户属性都通过ACCOUNT_ID链接到其帐户</p><p>典型的帐户属性可能是： </p><p> ISIN（用于国际债券） <br /> VKN（用于德国债券） <br /> REDCODE（信用衍生产品的Markit短代码） <br /> LOAN_ID（例如用于Anacredit报告） </p><p>发行日期（债券在市场上发行时） <br /> MATURITY_DATE（产品寿命终止） <br />可交易的</p><p>有关更多示例，请参见<a href=\"http://www.fpml.org/\">FPML</a> 。 </p><p>类型字段必须是“ STRING”，“ INTEGER”，“ DOUBLE”或DATE_WITH_DAY”之一</p><p>身份验证是强制性的</p>",
      "description_markdown": " Create Account Attribute\n\n\nAccount Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Account Attribute is linked to its Account by ACCOUNT_ID\n\n\n       \n\nTypical account attributes might be:\n\nISIN (for International bonds)\nVKN (for German bonds)\nREDCODE (markit short code for credit derivative)\nLOAN_ID (e.g. used for Anacredit reporting)\n\nISSUE_DATE (When the bond was issued in the market)\nMATURITY_DATE (End of life time of a product)\nTRADABLE\n\nSee [FPML](http://www.fpml.org/) for more examples.\n\nThe type field must be one of \"STRING\", \"INTEGER\", \"DOUBLE\" or DATE_WITH_DAY\"\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23"
      },
      "success_response_body": {
        "product_code": "saving1",
        "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "account_attribute_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/products/PRODUCT_CODE/attribute"
    },
    {
      "operation_id": "OBPv4.0.0-getEntitlementsForBank",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getEntitlementsForBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/entitlements",
      "summary": "获取一家银行的权益",
      "description": "<p>身份验证是强制性的</p>",
      "description_markdown": "\nAuthentication is Mandatory\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "list": [
          {
            "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
            "role_name": "CanQueryOtherUser",
            "bank_id": "GENODEM1GLS"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Role",
        "Entitlement",
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                },
                "entitlement_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetEntitlementsForOneBank",
          "requires_bank_id": true
        },
        {
          "role": "CanGetEntitlementsForAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/entitlements"
    },
    {
      "operation_id": "OBPv3.1.0-createAccountApplication",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createAccountApplication"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/account-applications",
      "summary": "创建账户申请",
      "description": "<p>创建账户申请</p><p>身份验证是强制性的</p>",
      "description_markdown": " Create Account Application\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "product_code": "saveing1",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "success_response_body": {
        "account_application_id": "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763",
        "product_code": "saveing1",
        "user": {
          "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "email": "eveline@example.com",
          "provider_id": "Chris",
          "provider": "http://127.0.0.1:8080",
          "username": "felixsmith"
        },
        "customer": {
          "bank_id": "GENODEM1GLS",
          "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
          "customer_number": "5987953",
          "legal_name": "Eveline Tripman",
          "mobile_phone_number": "+44 07972 444 876",
          "email": "eveline@example.com",
          "face_image": {
            "url": "www.openbankproject",
            "date": "2017-09-18T22:00:00Z"
          },
          "date_of_birth": "2017-09-18T22:00:00Z",
          "relationship_status": "single",
          "dependants": 10,
          "dob_of_dependants": [
            "2017-09-18T22:00:00Z"
          ],
          "credit_rating": {
            "rating": "OBP",
            "source": "OBP"
          },
          "credit_limit": {
            "currency": "EUR",
            "amount": "10"
          },
          "highest_education_attained": "Master",
          "employment_status": "worker",
          "kyc_status": true,
          "last_ok_date": "2017-09-18T22:00:00Z",
          "title": "Dr.",
          "branch_id": "DERBY6",
          "name_suffix": "Sr"
        },
        "date_of_application": "2017-09-18T22:00:00Z",
        "status": "REQUESTED"
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account-Application",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "customer": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "dob_of_dependants": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "employment_status": {
                "type": "string"
              },
              "customer_id": {
                "type": "string"
              },
              "relationship_status": {
                "type": "string"
              },
              "date_of_birth": {
                "type": "string",
                "format": "date-time"
              },
              "last_ok_date": {
                "type": "string",
                "format": "date-time"
              },
              "highest_education_attained": {
                "type": "string"
              },
              "customer_number": {
                "type": "string"
              },
              "credit_rating": {
                "type": "object",
                "properties": {
                  "source": {
                    "type": "string"
                  },
                  "rating": {
                    "type": "string"
                  }
                }
              },
              "name_suffix": {
                "type": "string"
              },
              "credit_limit": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "dependants": {
                "type": "integer"
              },
              "legal_name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "face_image": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "url": {
                    "type": "string"
                  }
                }
              },
              "branch_id": {
                "type": "string"
              },
              "mobile_phone_number": {
                "type": "string"
              },
              "kyc_status": {
                "type": "boolean"
              }
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "user_id": {
                "type": "string"
              }
            }
          },
          "date_of_application": {
            "type": "string",
            "format": "date-time"
          },
          "account_application_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/account-applications"
    },
    {
      "operation_id": "OBPv4.0.0-createTransactionRequestCounterparty",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createTransactionRequestCounterparty"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/COUNTERPARTY/transaction-requests",
      "summary": "映射（类型-&gt;字符串）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "\nSpecial instructions for COUNTERPARTY:\n\nWhen using a COUNTERPARTY to create a Transaction Request, specificy the counterparty_id in the body of the request.\nThe routing details of the counterparty will be forwarded for the transfer.\n\nInitiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\nlocalhost:8082/more?version=OBPv4.0.0&list-all-banks=false&core=&psd2=&obwg=#OBPv2_2_0-getCurrentFxRate\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\nAuthentication is Mandatory\n\n\n\n       ",
      "example_request_body": {
        "to": {
          "counterparty_id": "123456"
        },
        "value": {
          "currency": "EUR",
          "amount": "10"
        },
        "description": "A description for the transaction to the counterparty",
        "charge_policy": "SHARED",
        "future_date": "20881230"
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "GENODEM1GLS",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "String"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "10"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": [
          "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
        ],
        "status": "COMPLETED",
        "start_date": "2017-09-18T22:00:00Z",
        "end_date": "2017-09-18T22:00:00Z",
        "challenge": {
          "id": "be1a183d-b301-4b83-b855-5eeffdd3526f",
          "allowed_attempts": 3,
          "challenge_type": "SANDBOX_TAN"
        },
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "10"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because you don't have access to the owner view of the from account or you don't have access to canCreateAnyTransactionRequest.",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Transaction-Request",
        "Payment Initiation Service (PIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "to": {
            "type": "object",
            "properties": {
              "counterparty_id": {
                "type": "string"
              }
            }
          },
          "value": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "charge_policy": {
            "type": "string"
          },
          "future_date": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenge": {
            "type": "object",
            "properties": {
              "challenge_type": {
                "type": "string"
              },
              "allowed_attempts": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "string"
          },
          "charge": {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      },
                      "date_of_birth": {
                        "type": "string"
                      },
                      "legal_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "creditorName": {
                    "type": "string"
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "account": {
                        "type": "object",
                        "properties": {
                          "iban": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "branch_number": {
                        "type": "string"
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "future_date": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/COUNTERPARTY/transaction-requests"
    },
    {
      "operation_id": "OBPv3.1.0-enableDisableAccountWebhook",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "enableDisableAccountWebhook"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/account-web-hooks",
      "summary": "启用/禁用帐户Webhook",
      "description": "<p>启用/禁用帐户Webhook </p><p>当某些事件发生时，Webhooks用于调用外部URL。 </p><p>帐户Webhooks专注于帐户事件。 </p><p>例如，如果帐户中的余额发生变化，则可以使用Webhook通知外部服务。 </p><p>此功能正在开发中！请注意，只有实现的触发器是：OnBalanceChange </p>",
      "description_markdown": "Enable/Disable an Account Webhook\n\n\nWebhooks are used to call external URLs when certain events happen.\n\nAccount Webhooks focus on events around accounts.\n\nFor instance, a webhook could be used to notify an external service if a balance changes on an account.\n\nThis functionality is work in progress! Please note that only implemented trigger is: OnBalanceChange\n",
      "example_request_body": {
        "account_webhook_id": "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762",
        "is_active": "true"
      },
      "success_response_body": {
        "account_webhook_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "bank_id": "GENODEM1GLS",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "trigger_name": "OnBalanceChange",
        "url": "https://localhost.openbankproject.com",
        "http_method": "POST",
        "http_protocol": "HTTP/1.1",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Webhook",
        "Bank",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "is_active": {
            "type": "string"
          },
          "account_webhook_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "created_by_user_id": {
            "type": "string"
          },
          "http_method": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "http_protocol": {
            "type": "string"
          },
          "account_webhook_id": {
            "type": "string"
          },
          "trigger_name": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateWebhook",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/account-web-hooks"
    },
    {
      "operation_id": "OBPv3.1.0-getBankAccountsBalances",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getBankAccountsBalances"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/balances",
      "summary": "获取帐户余额",
      "description": "<p>在一家银行获取当前用户帐户的余额。 </p>",
      "description_markdown": "Get the Balances for the Accounts of the current User at one bank.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "accounts": [
          {
            "id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "label": "My Account",
            "bank_id": "GENODEM1GLS",
            "account_routings": [
              {
                "scheme": "accountNumber",
                "address": "123456"
              }
            ],
            "balance": {
              "currency": "EUR",
              "amount": "100"
            }
          }
        ],
        "overall_balance": {
          "currency": "EUR",
          "amount": "100"
        },
        "overall_balance_date": "2017-09-18T22:00:00Z"
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Account",
        "Account Information Service (AIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "overall_balance_date": {
            "type": "string",
            "format": "date-time"
          },
          "overall_balance": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "balance": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string"
                    }
                  }
                },
                "label": {
                  "type": "string"
                },
                "account_routings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string"
                      },
                      "scheme": {
                        "type": "string"
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/balances"
    },
    {
      "operation_id": "OBPv4.0.0-createTransactionRequestAccountOtp",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createTransactionRequestAccountOtp"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/ACCOUNT_OTP/transaction-requests",
      "summary": "映射（类型-&gt;字符串）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "When using ACCOUNT, the payee is set in the request body.\n\nMoney goes into the BANK_ID and ACCOUNT_ID specified in the request body.\n\nInitiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\nlocalhost:8082/more?version=OBPv4.0.0&list-all-banks=false&core=&psd2=&obwg=#OBPv2_2_0-getCurrentFxRate\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\nAuthentication is Mandatory\n\n\n\n       ",
      "example_request_body": {
        "to": {
          "bank_id": "GENODEM1GLS",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "value": {
          "currency": "EUR",
          "amount": "10"
        },
        "description": "this is for work"
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "GENODEM1GLS",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "String"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "10"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": [
          "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
        ],
        "status": "COMPLETED",
        "start_date": "2017-09-18T22:00:00Z",
        "end_date": "2017-09-18T22:00:00Z",
        "challenge": {
          "id": "be1a183d-b301-4b83-b855-5eeffdd3526f",
          "allowed_attempts": 3,
          "challenge_type": "SANDBOX_TAN"
        },
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "10"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because you don't have access to the owner view of the from account or you don't have access to canCreateAnyTransactionRequest.",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Transaction-Request",
        "Payment Initiation Service (PIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "to": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenge": {
            "type": "object",
            "properties": {
              "challenge_type": {
                "type": "string"
              },
              "allowed_attempts": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "string"
          },
          "charge": {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      },
                      "date_of_birth": {
                        "type": "string"
                      },
                      "legal_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "creditorName": {
                    "type": "string"
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "account": {
                        "type": "object",
                        "properties": {
                          "iban": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "branch_number": {
                        "type": "string"
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "future_date": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/ACCOUNT_OTP/transaction-requests"
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerNumber",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerNumber"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/number",
      "summary": "更新客户数量",
      "description": "<p>更新CUSTOMER_ID指定的客户编号。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Update the number of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "customer_number": "5987953"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "eveline@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "2017-09-18T22:00:00Z"
        },
        "date_of_birth": "2017-09-18T22:00:00Z",
        "relationship_status": "single",
        "dependants": 10,
        "dob_of_dependants": [
          "2017-09-18T22:00:00Z"
        ],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "10"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2017-09-18T22:00:00Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "customer_number": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "employment_status": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "rating": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "dependants": {
            "type": "integer"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerNumber",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/number"
    },
    {
      "operation_id": "OBPv1.2.1-addPermissionForUserForBankAccountForOneView",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addPermissionForUserForBankAccountForOneView"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/permissions/PROVIDER/PROVIDER_ID/views/VIEW_ID",
      "summary": "授予用户访问视图的权限。",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Grants the User identified by PROVIDER_ID at PROVIDER access to the view VIEW_ID at BANK_ID for account ACCOUNT_ID.\n\nAll url parameters must be [%-encoded](http://en.wikipedia.org/wiki/Percent-encoding), which is often especially relevant for PROVIDER and PROVIDER_ID.\n\nAuthentication is Mandatory and the user needs to have access to the owner view.\n\nGranting access to a public view will return an error message, as the user already has access.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "id": "123",
        "short_name": "short_name",
        "description": "description",
        "is_public": true,
        "alias": "None",
        "hide_metadata_if_alias_used": true,
        "can_add_comment": true,
        "can_add_corporate_location": true,
        "can_add_image": true,
        "can_add_image_url": true,
        "can_add_more_info": true,
        "can_add_open_corporates_url": true,
        "can_add_physical_location": true,
        "can_add_private_alias": true,
        "can_add_public_alias": true,
        "can_add_tag": true,
        "can_add_url": true,
        "can_add_where_tag": true,
        "can_delete_comment": true,
        "can_delete_corporate_location": true,
        "can_delete_image": true,
        "can_delete_physical_location": true,
        "can_delete_tag": true,
        "can_delete_where_tag": true,
        "can_edit_owner_comment": true,
        "can_see_bank_account_balance": true,
        "can_see_bank_account_bank_name": true,
        "can_see_bank_account_currency": true,
        "can_see_bank_account_iban": true,
        "can_see_bank_account_label": true,
        "can_see_bank_account_national_identifier": true,
        "can_see_bank_account_number": true,
        "can_see_bank_account_owners": true,
        "can_see_bank_account_swift_bic": true,
        "can_see_bank_account_type": true,
        "can_see_comments": true,
        "can_see_corporate_location": true,
        "can_see_image_url": true,
        "can_see_images": true,
        "can_see_more_info": true,
        "can_see_open_corporates_url": true,
        "can_see_other_account_bank_name": true,
        "can_see_other_account_iban": true,
        "can_see_other_account_kind": true,
        "can_see_other_account_metadata": true,
        "can_see_other_account_national_identifier": true,
        "can_see_other_account_number": true,
        "can_see_other_account_swift_bic": true,
        "can_see_owner_comment": true,
        "can_see_physical_location": true,
        "can_see_private_alias": true,
        "can_see_public_alias": true,
        "can_see_tags": true,
        "can_see_transaction_amount": true,
        "can_see_transaction_balance": true,
        "can_see_transaction_currency": true,
        "can_see_transaction_description": true,
        "can_see_transaction_finish_date": true,
        "can_see_transaction_metadata": true,
        "can_see_transaction_other_bank_account": true,
        "can_see_transaction_start_date": true,
        "can_see_transaction_this_bank_account": true,
        "can_see_transaction_type": true,
        "can_see_url": true,
        "can_see_where_tag": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error.",
        "could not save the privilege",
        "user does not have access to owner view on account"
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "View",
        "Account",
        "User",
        "OwnerViewRequired"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_see_other_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_where_tag": {
            "type": "boolean"
          },
          "can_see_url": {
            "type": "boolean"
          },
          "can_see_bank_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_tags": {
            "type": "boolean"
          },
          "can_see_transaction_balance": {
            "type": "boolean"
          },
          "can_delete_corporate_location": {
            "type": "boolean"
          },
          "can_add_image_url": {
            "type": "boolean"
          },
          "can_see_public_alias": {
            "type": "boolean"
          },
          "can_add_comment": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "can_see_corporate_location": {
            "type": "boolean"
          },
          "can_see_other_account_bank_name": {
            "type": "boolean"
          },
          "can_see_more_info": {
            "type": "boolean"
          },
          "can_see_physical_location": {
            "type": "boolean"
          },
          "can_edit_owner_comment": {
            "type": "boolean"
          },
          "can_see_private_alias": {
            "type": "boolean"
          },
          "can_see_bank_account_balance": {
            "type": "boolean"
          },
          "can_add_public_alias": {
            "type": "boolean"
          },
          "can_see_bank_account_owners": {
            "type": "boolean"
          },
          "can_see_other_account_metadata": {
            "type": "boolean"
          },
          "can_delete_physical_location": {
            "type": "boolean"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "can_see_transaction_this_bank_account": {
            "type": "boolean"
          },
          "can_see_image_url": {
            "type": "boolean"
          },
          "can_see_transaction_type": {
            "type": "boolean"
          },
          "can_see_images": {
            "type": "boolean"
          },
          "can_see_transaction_amount": {
            "type": "boolean"
          },
          "can_see_transaction_metadata": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "can_see_comments": {
            "type": "boolean"
          },
          "can_see_other_account_iban": {
            "type": "boolean"
          },
          "can_add_image": {
            "type": "boolean"
          },
          "can_see_bank_account_type": {
            "type": "boolean"
          },
          "can_see_other_account_kind": {
            "type": "boolean"
          },
          "can_see_bank_account_currency": {
            "type": "boolean"
          },
          "can_add_where_tag": {
            "type": "boolean"
          },
          "can_see_transaction_start_date": {
            "type": "boolean"
          },
          "can_see_bank_account_label": {
            "type": "boolean"
          },
          "can_add_private_alias": {
            "type": "boolean"
          },
          "can_see_transaction_currency": {
            "type": "boolean"
          },
          "can_add_more_info": {
            "type": "boolean"
          },
          "can_delete_comment": {
            "type": "boolean"
          },
          "can_see_transaction_other_bank_account": {
            "type": "boolean"
          },
          "can_see_bank_account_number": {
            "type": "boolean"
          },
          "can_add_corporate_location": {
            "type": "boolean"
          },
          "can_add_url": {
            "type": "boolean"
          },
          "short_name": {
            "type": "string"
          },
          "can_delete_where_tag": {
            "type": "boolean"
          },
          "is_public": {
            "type": "boolean"
          },
          "can_see_owner_comment": {
            "type": "boolean"
          },
          "can_see_transaction_finish_date": {
            "type": "boolean"
          },
          "can_see_open_corporates_url": {
            "type": "boolean"
          },
          "can_add_physical_location": {
            "type": "boolean"
          },
          "can_see_bank_account_iban": {
            "type": "boolean"
          },
          "can_see_other_account_national_identifier": {
            "type": "boolean"
          },
          "can_delete_image": {
            "type": "boolean"
          },
          "can_add_tag": {
            "type": "boolean"
          },
          "can_add_open_corporates_url": {
            "type": "boolean"
          },
          "can_delete_tag": {
            "type": "boolean"
          },
          "can_see_transaction_description": {
            "type": "boolean"
          },
          "can_see_bank_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_other_account_number": {
            "type": "boolean"
          },
          "can_see_bank_account_bank_name": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/permissions/PROVIDER/PROVIDER_ID/views/VIEW_ID"
    },
    {
      "operation_id": "OBPv1.2.1-getTagsForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getTagsForViewOnTransaction"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/tags",
      "summary": "获取标签。",
      "description": "<p>返回在<a href=\"#1_2_1-getViewsForBankAccount\">视图</a> （VIEW_ID）上进行的交易TRANSACTION_ID标签。 <br />如果视图不是公开的，则需要通过OAuth进行身份验证。 </p>",
      "description_markdown": "Returns the transaction TRANSACTION_ID tags made on a [view](#1_2_1-getViewsForBankAccount) (VIEW_ID).\n         Authentication via OAuth is required if the view is not public.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "value": "OBP",
        "date": "2017-09-18T22:00:00Z",
        "user": {
          "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
          "provider": "http://127.0.0.1:8080",
          "display_name": "OBP"
        }
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "display_name": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/tags"
    },
    {
      "operation_id": "OBPv3.1.0-updateSystemView",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateSystemView"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/system-views/VIEW_ID",
      "summary": "更新系统视图。",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Update an existing view on a bank account\n\nAuthentication is Mandatory and the user needs to have access to the owner view.\n\nThe json sent is the same as during view creation (above), with one difference: the 'name' field\nof a view is not editable (it is only set when a view is created)",
      "example_request_body": {
        "description": "this is for family",
        "metadata_view": "owner",
        "is_public": true,
        "which_alias_to_use": "family",
        "hide_metadata_if_alias_used": true,
        "allowed_actions": [
          "can_see_transaction_this_bank_account",
          "can_see_transaction_other_bank_account",
          "can_see_transaction_metadata",
          "can_see_transaction_label",
          "can_see_transaction_amount",
          "can_see_transaction_type",
          "can_see_transaction_currency",
          "can_see_transaction_start_date",
          "can_see_transaction_finish_date",
          "can_see_transaction_balance",
          "can_see_comments",
          "can_see_narrative",
          "can_see_tags",
          "can_see_images",
          "can_see_bank_account_owners",
          "can_see_bank_account_type",
          "can_see_bank_account_balance",
          "can_see_bank_account_currency",
          "can_see_bank_account_label",
          "can_see_bank_account_national_identifier",
          "can_see_bank_account_swift_bic",
          "can_see_bank_account_iban",
          "can_see_bank_account_number",
          "can_see_bank_account_bank_name",
          "can_see_other_account_national_identifier",
          "can_see_other_account_swift_bic",
          "can_see_other_account_iban",
          "can_see_other_account_bank_name",
          "can_see_other_account_number",
          "can_see_other_account_metadata",
          "can_see_other_account_kind",
          "can_see_more_info",
          "can_see_url",
          "can_see_image_url",
          "can_see_open_corporates_url",
          "can_see_corporate_location",
          "can_see_physical_location",
          "can_see_public_alias",
          "can_see_private_alias",
          "can_add_more_info",
          "can_add_url",
          "can_add_image_url",
          "can_add_open_corporates_url",
          "can_add_corporate_location",
          "can_add_physical_location",
          "can_add_public_alias",
          "can_add_private_alias",
          "can_delete_corporate_location",
          "can_delete_physical_location",
          "can_edit_narrative",
          "can_add_comment",
          "can_delete_comment",
          "can_add_tag",
          "can_delete_tag",
          "can_add_image",
          "can_delete_image",
          "can_add_where_tag",
          "can_see_where_tag",
          "can_delete_where_tag",
          "can_create_counterparty",
          "can_see_bank_routing_scheme",
          "can_see_bank_routing_address",
          "can_see_bank_account_routing_scheme",
          "can_see_bank_account_routing_address",
          "can_see_other_bank_routing_scheme",
          "can_see_other_bank_routing_address",
          "can_see_other_account_routing_scheme",
          "can_see_other_account_routing_address",
          "can_query_available_funds"
        ]
      },
      "success_response_body": {
        "id": "1234",
        "short_name": "short_name",
        "description": "description",
        "metadata_view": "owner",
        "is_public": true,
        "alias": "No",
        "hide_metadata_if_alias_used": true,
        "can_add_comment": true,
        "can_add_corporate_location": true,
        "can_add_image": true,
        "can_add_image_url": true,
        "can_add_more_info": true,
        "can_add_open_corporates_url": true,
        "can_add_physical_location": true,
        "can_add_private_alias": true,
        "can_add_public_alias": true,
        "can_add_tag": true,
        "can_add_url": true,
        "can_add_where_tag": true,
        "can_delete_comment": true,
        "can_add_counterparty": true,
        "can_delete_corporate_location": true,
        "can_delete_image": true,
        "can_delete_physical_location": true,
        "can_delete_tag": true,
        "can_delete_where_tag": true,
        "can_edit_owner_comment": true,
        "can_see_bank_account_balance": true,
        "can_query_available_funds": true,
        "can_see_bank_account_bank_name": true,
        "can_see_bank_account_currency": true,
        "can_see_bank_account_iban": true,
        "can_see_bank_account_label": true,
        "can_see_bank_account_national_identifier": true,
        "can_see_bank_account_number": true,
        "can_see_bank_account_owners": true,
        "can_see_bank_account_swift_bic": true,
        "can_see_bank_account_type": true,
        "can_see_comments": true,
        "can_see_corporate_location": true,
        "can_see_image_url": true,
        "can_see_images": true,
        "can_see_more_info": true,
        "can_see_open_corporates_url": true,
        "can_see_other_account_bank_name": true,
        "can_see_other_account_iban": true,
        "can_see_other_account_kind": true,
        "can_see_other_account_metadata": true,
        "can_see_other_account_national_identifier": true,
        "can_see_other_account_number": true,
        "can_see_other_account_swift_bic": true,
        "can_see_owner_comment": true,
        "can_see_physical_location": true,
        "can_see_private_alias": true,
        "can_see_public_alias": true,
        "can_see_tags": true,
        "can_see_transaction_amount": true,
        "can_see_transaction_balance": true,
        "can_see_transaction_currency": true,
        "can_see_transaction_description": true,
        "can_see_transaction_finish_date": true,
        "can_see_transaction_metadata": true,
        "can_see_transaction_other_bank_account": true,
        "can_see_transaction_start_date": true,
        "can_see_transaction_this_bank_account": true,
        "can_see_transaction_type": true,
        "can_see_url": true,
        "can_see_where_tag": true,
        "can_see_bank_routing_scheme": true,
        "can_see_bank_routing_address": true,
        "can_see_bank_account_routing_scheme": true,
        "can_see_bank_account_routing_address": true,
        "can_see_other_bank_routing_scheme": true,
        "can_see_other_bank_routing_address": true,
        "can_see_other_account_routing_scheme": true,
        "can_see_other_account_routing_address": true,
        "can_add_transaction_request_to_own_account": true,
        "can_add_transaction_request_to_any_account": true,
        "can_see_bank_account_credit_limit": true,
        "can_create_direct_debit": true,
        "can_create_standing_order": true
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "System-View",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "allowed_actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "is_public": {
            "type": "boolean"
          },
          "which_alias_to_use": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_see_other_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_where_tag": {
            "type": "boolean"
          },
          "can_see_url": {
            "type": "boolean"
          },
          "can_create_direct_debit": {
            "type": "boolean"
          },
          "can_see_bank_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_address": {
            "type": "boolean"
          },
          "can_see_tags": {
            "type": "boolean"
          },
          "can_see_transaction_balance": {
            "type": "boolean"
          },
          "can_delete_corporate_location": {
            "type": "boolean"
          },
          "can_add_image_url": {
            "type": "boolean"
          },
          "can_see_public_alias": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_own_account": {
            "type": "boolean"
          },
          "can_add_comment": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_scheme": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "can_see_corporate_location": {
            "type": "boolean"
          },
          "can_see_other_account_bank_name": {
            "type": "boolean"
          },
          "can_see_more_info": {
            "type": "boolean"
          },
          "can_add_counterparty": {
            "type": "boolean"
          },
          "can_see_physical_location": {
            "type": "boolean"
          },
          "can_query_available_funds": {
            "type": "boolean"
          },
          "can_edit_owner_comment": {
            "type": "boolean"
          },
          "can_see_private_alias": {
            "type": "boolean"
          },
          "can_see_bank_account_credit_limit": {
            "type": "boolean"
          },
          "can_see_other_account_routing_address": {
            "type": "boolean"
          },
          "can_see_bank_account_balance": {
            "type": "boolean"
          },
          "can_add_public_alias": {
            "type": "boolean"
          },
          "can_see_bank_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_owners": {
            "type": "boolean"
          },
          "can_see_other_account_metadata": {
            "type": "boolean"
          },
          "can_delete_physical_location": {
            "type": "boolean"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "can_see_transaction_this_bank_account": {
            "type": "boolean"
          },
          "can_see_image_url": {
            "type": "boolean"
          },
          "can_see_transaction_type": {
            "type": "boolean"
          },
          "can_see_images": {
            "type": "boolean"
          },
          "can_see_transaction_amount": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "can_see_transaction_metadata": {
            "type": "boolean"
          },
          "can_see_comments": {
            "type": "boolean"
          },
          "can_see_other_account_iban": {
            "type": "boolean"
          },
          "can_add_image": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_type": {
            "type": "boolean"
          },
          "can_see_other_account_kind": {
            "type": "boolean"
          },
          "can_see_bank_account_currency": {
            "type": "boolean"
          },
          "can_add_where_tag": {
            "type": "boolean"
          },
          "can_see_transaction_start_date": {
            "type": "boolean"
          },
          "can_see_bank_account_label": {
            "type": "boolean"
          },
          "can_add_private_alias": {
            "type": "boolean"
          },
          "can_see_transaction_currency": {
            "type": "boolean"
          },
          "can_add_more_info": {
            "type": "boolean"
          },
          "can_delete_comment": {
            "type": "boolean"
          },
          "can_create_standing_order": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_address": {
            "type": "boolean"
          },
          "can_see_transaction_other_bank_account": {
            "type": "boolean"
          },
          "can_see_bank_account_number": {
            "type": "boolean"
          },
          "can_add_corporate_location": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "can_add_url": {
            "type": "boolean"
          },
          "short_name": {
            "type": "string"
          },
          "can_delete_where_tag": {
            "type": "boolean"
          },
          "is_public": {
            "type": "boolean"
          },
          "can_see_owner_comment": {
            "type": "boolean"
          },
          "can_see_transaction_finish_date": {
            "type": "boolean"
          },
          "can_see_open_corporates_url": {
            "type": "boolean"
          },
          "can_add_physical_location": {
            "type": "boolean"
          },
          "can_see_bank_account_iban": {
            "type": "boolean"
          },
          "can_see_other_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_bank_routing_address": {
            "type": "boolean"
          },
          "can_delete_image": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_any_account": {
            "type": "boolean"
          },
          "can_add_tag": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "can_see_other_account_routing_scheme": {
            "type": "boolean"
          },
          "can_add_open_corporates_url": {
            "type": "boolean"
          },
          "can_delete_tag": {
            "type": "boolean"
          },
          "can_see_transaction_description": {
            "type": "boolean"
          },
          "can_see_bank_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_other_account_number": {
            "type": "boolean"
          },
          "can_see_bank_account_bank_name": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateSystemView",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/system-views/VIEW_ID"
    },
    {
      "operation_id": "OBPv3.1.0-createConsentEmail",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createConsentEmail"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/my/consents/EMAIL",
      "summary": "建立同意书（EMAIL）",
      "description": "<p> OBP同意书允许同意书持有人呼叫一个或多个端点。 </p><p>必须使用SCA（严格的客户身份验证）来创建和授权同意书。 </p><p>也就是说，可以由授权用户通过OBP REST API创建同意书，但是必须通过带外（OOB）机制（例如发送到手机的代码）进行确认。 </p><p>每个同意书都具有以下状态之一：初始化，接受，拒绝，撤回，已接收，有效，撤回BYPSU，已过期，终止DBP。 </p><p>该端点开始创建同意的过程。 </p><p>同意是在INITIATED状态下创建的。 </p><p>通过SCA_METHOD中定义的传输，将一次性密码（OTP）（又称为安全性挑战）发送给用户（OOB） <br /> SCA_METHOD通常是“ SMS”或“ EMAIL”。 “ EMAIL”用于测试目的。 </p><p>创建同意书后，OBP（或后端系统）将存储挑战，以便稍后可以根据用户通过“回答同意书挑战”端点提供的值进行检查。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "\n\n\n\nAn OBP Consent allows the holder of the Consent to call one or more endpoints.\n\nConsents must be created and authorisied using SCA (Strong Customer Authentication).\n\nThat is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.\n\nEach Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP.\n\n\n\n      \n\nThis endpoint starts the process of creating a Consent.\n\nThe Consent is created in an INITIATED state.\n\nA One Time Password (OTP) (AKA security challenge) is sent Out of band (OOB) to the User via the transport defined in SCA_METHOD\nSCA_METHOD is typically \"SMS\" or \"EMAIL\". \"EMAIL\" is used for testing purposes.\n\nWhen the Consent is created, OBP (or a backend system) stores the challenge so it can be checked later against the value supplied by the User with the Answer Consent Challenge endpoint.\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "everything": false,
        "views": [
          {
            "bank_id": "GENODEM1GLS",
            "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "view_id": "owner"
          }
        ],
        "entitlements": [
          {
            "bank_id": "GENODEM1GLS",
            "role_name": "CanQueryOtherUser"
          }
        ],
        "email": "eveline@example.com"
      },
      "success_response_body": {
        "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
        "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
        "status": "INITIATED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Consent",
        "Account Information Service (AIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "entitlements": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role_name": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                }
              }
            }
          },
          "views": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "view_id": {
                  "type": "string"
                },
                "account_id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                }
              }
            }
          },
          "everything": {
            "type": "boolean"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          },
          "consent_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/my/consents/EMAIL"
    },
    {
      "operation_id": "OBPv1.2.1-addCounterpartyPublicAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCounterpartyPublicAlias"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias",
      "summary": "将公共别名添加到其他银行帐户。",
      "description": "<p>为其他帐户OTHER_ACCOUNT_ID创建公用别名。 </p><p>身份验证是可选的<br />如果视图不是公共的，则需要认证。 </p><p>注意：将为新的“其他帐户/交易对手”自动生成公共别名，因此仅在以下情况下使用此调用： <br />公共别名已删除。 </p><p> VIEW_ID参数应该是允许调用者访问的视图，并且有权创建公共别名。 </p>",
      "description_markdown": "Creates the public alias for the other account OTHER_ACCOUNT_ID.\n\nAuthentication is Optional\nAuthentication is required if the view is not public.\n\nNote: Public aliases are automatically generated for new 'other accounts / counterparties', so this call should only be used if\nthe public alias was deleted.\n\nThe VIEW_ID parameter should be a view the caller is permitted to access to and that has permission to create public aliases.",
      "example_request_body": {
        "alias": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error.",
        "the view does not allow metadata access",
        "the view does not allow adding a public alias",
        "Alias cannot be added",
        "public alias added"
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias"
    },
    {
      "operation_id": "OBPv2.2.0-getConnectorMetrics",
      "implemented_by": {
        "version": "OBPv2.2.0",
        "function": "getConnectorMetrics"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.2.0/management/connector/metrics",
      "summary": "获取连接器指标",
      "description": "<p>获取所有指标</p><p>需要CanGetConnectorMetrics角色</p><p>过滤第1部分。将参数<em>过滤</em> （没有通配符等）到GET / management / connector / metrics </p><p>应该能够根据以下指标字段进行过滤</p><p>例如：/ management / connector / metrics？from_date = 2017-09-19＆to_date = 2017-09-19＆limit = 50＆offset = 2 </p><p> 1个from_date（默认为当前日期之前的一周）：例如：from_date = 2017-09-19 </p><p> 2 to_date（默认为当前日期），例如：to_date = 2017-09-19 </p><p> 3个限制（用于分页：默认为1000），例如：limit = 2000 </p><p> 4个偏移量（对于分页：零索引，默认为0），例如：offset = 10 </p><p>例如：/ management / connector / metrics？from_date = 2017-09-19＆to_date = 2017-09-19＆limit = 100＆offset = 300 </p><p>其他过滤器： </p><p> 5 connector_name（如果为null，则忽略） </p><p> 6 function_name（如果为null，则忽略） </p><p> 7correlation_id（如果为null，则忽略） </p>",
      "description_markdown": "Get the all metrics\n\nrequire CanGetConnectorMetrics role\n\nFilters Part 1.*filtering* (no wilde cards etc.) parameters to GET /management/connector/metrics\n\nShould be able to filter on the following metrics fields\n\neg: /management/connector/metrics?from_date=2017-09-19&to_date=2017-09-19&limit=50&offset=2\n\n1 from_date (defaults to one week before current date): eg:from_date=2017-09-19\n\n2 to_date (defaults to current date) eg:to_date=2017-09-19\n\n3 limit (for pagination: defaults to 1000)  eg:limit=2000\n\n4 offset (for pagination: zero index, defaults to 0) eg: offset=10\n\neg: /management/connector/metrics?from_date=2017-09-19&to_date=2017-09-19&limit=100&offset=300\n\nOther filters:\n\n5 connector_name  (if null ignore)\n\n6 function_name (if null ignore)\n\n7 correlation_id (if null ignore)\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "metrics": [
          {
            "connector_name": "mapper",
            "function_name": "getBanks",
            "correlation_id": "12345",
            "date": "2017-09-18T22:00:00Z",
            "duration": 1000
          }
        ]
      },
      "error_response_bodies": [
        "OBP-10005: Invalid Date Format. Could not convert value to a Date.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Metric",
        "API"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "connector_name": {
                  "type": "string"
                },
                "duration": {
                  "type": "integer"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "correlation_id": {
                  "type": "string"
                },
                "function_name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetConnectorMetrics",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/connector/metrics"
    },
    {
      "operation_id": "OBPv1.2.1-addWhereTagForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addWhereTagForViewOnTransaction"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where",
      "summary": "添加where标记。",
      "description": "<p>在<a href=\"#1_2_1-getViewsForBankAccount\">视图中</a>的交易TRANSACTION_ID上创建一个“ where”地理标签。 </p><p>身份验证是强制性的</p><p>地理位置标记与用户链接。 </p>",
      "description_markdown": "Creates a \"where\" Geo tag on a transaction TRANSACTION_ID in a [view](#1_2_1-getViewsForBankAccount).\n\nAuthentication is Mandatory\n\nThe geo tag is linked with the user.",
      "example_request_body": {
        "where": {
          "latitude": 1.532,
          "longitude": 1.535
        }
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-30022: The current view does not have the permission: ",
        "Coordinates not possible",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "where": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where"
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerMobileNumber",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerMobileNumber"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/mobile-number",
      "summary": "更新客户的手机号码",
      "description": "<p>更新CUSTOMER_ID指定的客户的手机号码。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Update the mobile number of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "mobile_phone_number": "+381631954907"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "eveline@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "2017-09-18T22:00:00Z"
        },
        "date_of_birth": "2017-09-18T22:00:00Z",
        "relationship_status": "single",
        "dependants": 10,
        "dob_of_dependants": [
          "2017-09-18T22:00:00Z"
        ],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "10"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2017-09-18T22:00:00Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "mobile_phone_number": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "employment_status": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "rating": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "dependants": {
            "type": "integer"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerMobilePhoneNumber",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/mobile-number"
    },
    {
      "operation_id": "OBPv3.0.0-getEntitlementsForCurrentUser",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getEntitlementsForCurrentUser"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/my/entitlements",
      "summary": "获取当前用户的权利。",
      "description": "<p>获取当前用户的权利。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get Entitlements for the current User.\n\n\nAuthentication is Mandatory\n\n        ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "list": [
          {
            "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
            "role_name": "CanQueryOtherUser",
            "bank_id": "GENODEM1GLS"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20050: Current User is not a Super Admin!",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Role",
        "Entitlement",
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                },
                "entitlement_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/my/entitlements"
    },
    {
      "operation_id": "OBPv3.1.0-createMeeting",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createMeeting"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/meetings",
      "summary": "创建会议（视频会议/通话）",
      "description": "<p>创建会议：与银行发起视频会议/通话。 </p><p>会议资源包含有关视频/其他会议会话的元数据</p><p> provider_id确定会议/视频聊天服务的提供者。必须是网址友好的（没有空格）。 </p><p> Purpose_id解释了聊天的目的。入职|抵押|投诉等。必须是网址友好的（不能有空格）。 </p><p>需要登录。 </p><p>此调用是<strong>实验性的</strong> 。当前尚未设置staff_user_id。需要进一步调用才能正确设置此设置。 </p>",
      "description_markdown": "Create Meeting: Initiate a video conference/call with the bank.\n\nThe Meetings resource contains meta data about video/other conference sessions\n\nprovider_id determines the provider of the meeting / video chat service. MUST be url friendly (no spaces).\n\npurpose_id explains the purpose of the chat. onboarding | mortgage | complaint etc. MUST be url friendly (no spaces).\n\nLogin is required.\n\nThis call is **experimental**. Currently staff_user_id is not set. Further calls will be needed to correctly set this.\n      ",
      "example_request_body": {
        "provider_id": "Chris",
        "purpose_id": "String, eg: onboarding",
        "date": "2017-09-18T22:00:00Z",
        "creator": {
          "name": "Simon ",
          "mobile_phone": "+44 07972 444 876",
          "email_address": "eveline@example.com"
        },
        "invitees": [
          {
            "contact_details": {
              "name": "Simon ",
              "mobile_phone": "+44 07972 444 876",
              "email_address": "eveline@example.com"
            },
            "status": "String, eg: Good"
          }
        ]
      },
      "success_response_body": {
        "meeting_id": "UUID-String",
        "provider_id": "Chris",
        "purpose_id": "String, eg: onboarding",
        "bank_id": "GENODEM1GLS",
        "present": {
          "staff_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "customer_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "keys": {
          "session_id": "String",
          "staff_token": "String",
          "customer_token": "String"
        },
        "when": "2017-09-18T22:00:00Z",
        "creator": {
          "name": "Simon ",
          "mobile_phone": "+44 07972 444 876",
          "email_address": "eveline@example.com"
        },
        "invitees": [
          {
            "contact_details": {
              "name": "Simon ",
              "mobile_phone": "+44 07972 444 876",
              "email_address": "eveline@example.com"
            },
            "status": "String, eg: Good"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer-Meeting",
        "KYC",
        "Customer",
        "User",
        "Experimental"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "provider_id": {
            "type": "string"
          },
          "creator": {
            "type": "object",
            "properties": {
              "email_address": {
                "type": "string"
              },
              "mobile_phone": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "purpose_id": {
            "type": "string"
          },
          "invitees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "contact_details": {
                  "type": "object",
                  "properties": {
                    "email_address": {
                      "type": "string"
                    },
                    "mobile_phone": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "present": {
            "type": "object",
            "properties": {
              "customer_user_id": {
                "type": "string"
              },
              "staff_user_id": {
                "type": "string"
              }
            }
          },
          "when": {
            "type": "string",
            "format": "date-time"
          },
          "provider_id": {
            "type": "string"
          },
          "creator": {
            "type": "object",
            "properties": {
              "email_address": {
                "type": "string"
              },
              "mobile_phone": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "purpose_id": {
            "type": "string"
          },
          "keys": {
            "type": "object",
            "properties": {
              "customer_token": {
                "type": "string"
              },
              "staff_token": {
                "type": "string"
              },
              "session_id": {
                "type": "string"
              }
            }
          },
          "invitees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "contact_details": {
                  "type": "object",
                  "properties": {
                    "email_address": {
                      "type": "string"
                    },
                    "mobile_phone": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "meeting_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/meetings"
    },
    {
      "operation_id": "OBPv3.1.0-createConsentSms",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createConsentSms"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/my/consents/SMS",
      "summary": "建立同意书（SMS）",
      "description": "<p> OBP同意书允许同意书持有人呼叫一个或多个端点。 </p><p>必须使用SCA（严格的客户身份验证）来创建和授权同意书。 </p><p>也就是说，可以由授权用户通过OBP REST API创建同意书，但是必须通过带外（OOB）机制（例如发送到手机的代码）进行确认。 </p><p>每个同意书都具有以下状态之一：初始化，接受，拒绝，撤回，已接收，有效，撤回BYPSU，已过期，终止DBP。 </p><p>该端点开始创建同意的过程。 </p><p>同意是在INITIATED状态下创建的。 </p><p>通过SCA_METHOD中定义的传输，将一次性密码（OTP）（又称为安全性挑战）发送给用户（OOB） <br /> SCA_METHOD通常是“ SMS”或“ EMAIL”。 “ EMAIL”用于测试目的。 </p><p>创建同意书后，OBP（或后端系统）将存储挑战，以便稍后可以根据用户通过“回答同意书挑战”端点提供的值进行检查。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "\n\n\n\nAn OBP Consent allows the holder of the Consent to call one or more endpoints.\n\nConsents must be created and authorisied using SCA (Strong Customer Authentication).\n\nThat is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.\n\nEach Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP.\n\n\n\n      \n\nThis endpoint starts the process of creating a Consent.\n\nThe Consent is created in an INITIATED state.\n\nA One Time Password (OTP) (AKA security challenge) is sent Out of band (OOB) to the User via the transport defined in SCA_METHOD\nSCA_METHOD is typically \"SMS\" or \"EMAIL\". \"EMAIL\" is used for testing purposes.\n\nWhen the Consent is created, OBP (or a backend system) stores the challenge so it can be checked later against the value supplied by the User with the Answer Consent Challenge endpoint.\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "everything": false,
        "views": [
          {
            "bank_id": "GENODEM1GLS",
            "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "view_id": "owner"
          }
        ],
        "entitlements": [
          {
            "bank_id": "GENODEM1GLS",
            "role_name": "CanQueryOtherUser"
          }
        ],
        "phone_number": "+44 07972 444 876"
      },
      "success_response_body": {
        "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
        "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
        "status": "INITIATED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Consent",
        "Account Information Service (AIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string"
          },
          "entitlements": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role_name": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                }
              }
            }
          },
          "views": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "view_id": {
                  "type": "string"
                },
                "account_id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                }
              }
            }
          },
          "everything": {
            "type": "boolean"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          },
          "consent_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/my/consents/SMS"
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyCorporateLocation",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyCorporateLocation"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/corporate_location",
      "summary": "删除对方公司位置。",
      "description": "<p>删除其他银行帐户的公司位置。删除交易对手注册地址的地理位置</p>",
      "description_markdown": "Delete corporate location of other bank account. Delete the geolocation of the counterparty's registered address",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "Corporate Location cannot be deleted",
        "Delete not completed",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/corporate_location"
    },
    {
      "operation_id": "OBPv1.2.1-deleteCommentForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCommentForViewOnTransaction"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/comments/COMMENT_ID",
      "summary": "删除评论。",
      "description": "<p>删除有关在<a href=\"#1_2_1-getViewsForBankAccount\">view</a>上进行的交易TRANSACTION_ID的评论COMMENT_ID。 </p><p>需要通过OAuth进行身份验证。该用户必须对此帐户具有所有者特权，或者必须是发布评论的用户。 </p>",
      "description_markdown": "Delete the comment COMMENT_ID about the transaction TRANSACTION_ID made on [view](#1_2_1-getViewsForBankAccount).\n\nAuthentication via OAuth is required. The user must either have owner privileges for this account, or must be the user that posted the comment.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/comments/COMMENT_ID"
    },
    {
      "operation_id": "OBPv3.1.0-getServerJWK",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getServerJWK"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/certs",
      "summary": "获取JSON Web密钥（JWK）",
      "description": "<p>获取服务器的公共JSON Web密钥（JWK）集和证书链。 <br />客户端应用程序需要验证ID令牌，自包含访问令牌和其他已发布的对象。 </p>",
      "description_markdown": "Get the server's public JSON Web Key (JWK) set and certificate chain.\n It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "kty": "RSA",
        "e": "AQAB",
        "use": "sig",
        "kid": "fr6-BxXH5gikFeZ2O6rGk0LUmJpukeswASN_TMW8U_s",
        "n": "hrB0OWqg6AeNU3WCnhheG18R5EbQtdNYGOaSeylTjkj2lZr0_vkhNVYvase-CroxO4HOT06InxTYwLnmJiyv2cZxReuoVjTlk--olGu-9MZooiFiqWez0JzndyKxQ27OiAjFsMh0P04kaUXeHKhXRfiU7K2FqBshR1UlnWe7iHLkq2p9rrGjxQc7ff0w-Uc0f-8PWg36Y2Od7s65493iVQwnI13egqMaSvgB1s8_dgm08noEjhr8C5m1aKmr5oipWEPNi-SBV2VNuiCLR1IEPuXq0tOwwZfv31t34KPO-2H2bbaWmzGJy9mMOGqoNrbXyGiUZoyeHRELaNtm1GilyQ"
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": false,
      "tags": [
        "API",
        "Account Information Service (AIS)"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "kid": {
            "type": "string"
          },
          "use": {
            "type": "string"
          },
          "n": {
            "type": "string"
          },
          "e": {
            "type": "string"
          },
          "kty": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/certs"
    },
    {
      "operation_id": "OBPv1.2.1-getCounterpartyPublicAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getCounterpartyPublicAlias"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias",
      "summary": "获取其他银行帐户的公共别名。",
      "description": "<p>返回其他帐户OTHER_ACCOUNT_ID的公共别名。 <br />身份验证是可选的<br />如果视图不是公共的，则必须进行身份验证。 </p>",
      "description_markdown": "Returns the public alias of the other account OTHER_ACCOUNT_ID.\nAuthentication is Optional\nAuthentication is Mandatory if the view is not public.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "alias": "String"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error.",
        "the view does not allow metadata access",
        "the view does not allow public alias access"
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias"
    },
    {
      "operation_id": "OBPv3.0.0-getUsers",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getUsers"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/users",
      "summary": "获取所有用户",
      "description": "<p>获取所有用户</p><p>身份验证是强制性的</p><p>必须具有CanGetAnyUser授权， </p>",
      "description_markdown": "Get all users\n\nAuthentication is Mandatory\n\nCanGetAnyUser entitlement is required,\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "users": [
          {
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "email": "eveline@example.com",
            "provider_id": "Chris",
            "provider": "http://127.0.0.1:8080",
            "username": "felixsmith",
            "entitlements": {
              "list": [
                {
                  "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
                  "role_name": "CanQueryOtherUser",
                  "bank_id": "GENODEM1GLS"
                }
              ]
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "entitlements": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "bank_id": {
                            "type": "string"
                          },
                          "role_name": {
                            "type": "string"
                          },
                          "entitlement_id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "provider": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "provider_id": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyUser",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users"
    },
    {
      "operation_id": "OBPv4.0.0-getDynamicEntities",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getDynamicEntities"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/management/dynamic_entities",
      "summary": "获取动态实体",
      "description": "<p>获取所有DynamicEntities。 </p>",
      "description_markdown": "Get the all DynamicEntities.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "dynamic_entities": [
          {
            "FooBar": {
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "James Brown"
                },
                "number": {
                  "type": "integer",
                  "example": 698761728
                }
              }
            },
            "dynamicEntityId": "dynamic-entity-id"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Dynamic-Entity",
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "dynamic_entities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dynamicEntityId": {
                  "type": "string"
                },
                "FooBar": {
                  "type": "object",
                  "properties": {
                    "properties": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "object",
                          "properties": {
                            "example": {
                              "type": "integer"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "string",
                                "number",
                                "integer",
                                "boolean"
                              ]
                            }
                          }
                        },
                        "name": {
                          "type": "object",
                          "properties": {
                            "example": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "string",
                                "number",
                                "integer",
                                "boolean"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetDynamicEntities",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/dynamic_entities"
    },
    {
      "operation_id": "OBPv3.1.0-deleteMethodRouting",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteMethodRouting"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/management/method_routings/METHOD_ROUTING_ID",
      "summary": "删除方法",
      "description": "<p>删除METHOD_ROUTING_ID指定的MethodRouting。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Delete a MethodRouting specified by METHOD_ROUTING_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Method-Routing",
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanDeleteMethodRouting",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/method_routings/METHOD_ROUTING_ID"
    },
    {
      "operation_id": "OBPv2.0.0-addKycDocument",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "addKycDocument"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_documents/KYC_DOCUMENT_ID",
      "summary": "添加KYC文档。",
      "description": "<p>为CUSTOMER_ID指定的客户添加一个KYC文档。 KYC文件包含文件类型（例如护照），签发地点，有效期等。 </p>",
      "description_markdown": "Add a KYC document for the customer specified by CUSTOMER_ID. KYC Documents contain the document type (e.g. passport), place of issue, expiry etc. ",
      "example_request_body": {
        "customer_number": "5987953",
        "type": "passport",
        "number": "12345",
        "issue_date": "2017-09-18T22:00:00Z",
        "issue_place": "Berlin",
        "expiry_date": "2017-09-18T22:00:00Z"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "id": "PlaceholderString",
        "customer_number": "5987953",
        "type": "PlaceholderString",
        "number": "PlaceholderString",
        "issue_date": "2017-09-18T22:00:00Z",
        "issue_place": "PlaceholderString",
        "expiry_date": "2017-09-18T22:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "Server error: could not add KycDocument",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "KYC",
        "Customer"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "issue_place": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "issue_date": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "expiry_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "issue_place": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "issue_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "expiry_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "roles": [
        {
          "role": "CanAddKycDocument",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_documents/KYC_DOCUMENT_ID"
    },
    {
      "operation_id": "OBPv1.2.1-addPermissionForUserForBankAccountForMultipleViews",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addPermissionForUserForBankAccountForMultipleViews"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/permissions/PROVIDER/PROVIDER_ID/views",
      "summary": "授予用户访问视图列表的权限。",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Grants the user identified by PROVIDER_ID at their provider PROVIDER access to a list of views at BANK_ID for account ACCOUNT_ID.\n\nAll url parameters must be [%-encoded](http://en.wikipedia.org/wiki/Percent-encoding), which is often especially relevant for PROVIDER_ID and PROVIDER.\n\nAuthentication is Mandatory\n\nThe User needs to have access to the owner view.",
      "example_request_body": {
        "views": [
          "_family",
          "_work"
        ]
      },
      "success_response_body": {
        "views": [
          {
            "id": "123",
            "short_name": "short_name",
            "description": "description",
            "is_public": true,
            "alias": "None",
            "hide_metadata_if_alias_used": true,
            "can_add_comment": true,
            "can_add_corporate_location": true,
            "can_add_image": true,
            "can_add_image_url": true,
            "can_add_more_info": true,
            "can_add_open_corporates_url": true,
            "can_add_physical_location": true,
            "can_add_private_alias": true,
            "can_add_public_alias": true,
            "can_add_tag": true,
            "can_add_url": true,
            "can_add_where_tag": true,
            "can_delete_comment": true,
            "can_delete_corporate_location": true,
            "can_delete_image": true,
            "can_delete_physical_location": true,
            "can_delete_tag": true,
            "can_delete_where_tag": true,
            "can_edit_owner_comment": true,
            "can_see_bank_account_balance": true,
            "can_see_bank_account_bank_name": true,
            "can_see_bank_account_currency": true,
            "can_see_bank_account_iban": true,
            "can_see_bank_account_label": true,
            "can_see_bank_account_national_identifier": true,
            "can_see_bank_account_number": true,
            "can_see_bank_account_owners": true,
            "can_see_bank_account_swift_bic": true,
            "can_see_bank_account_type": true,
            "can_see_comments": true,
            "can_see_corporate_location": true,
            "can_see_image_url": true,
            "can_see_images": true,
            "can_see_more_info": true,
            "can_see_open_corporates_url": true,
            "can_see_other_account_bank_name": true,
            "can_see_other_account_iban": true,
            "can_see_other_account_kind": true,
            "can_see_other_account_metadata": true,
            "can_see_other_account_national_identifier": true,
            "can_see_other_account_number": true,
            "can_see_other_account_swift_bic": true,
            "can_see_owner_comment": true,
            "can_see_physical_location": true,
            "can_see_private_alias": true,
            "can_see_public_alias": true,
            "can_see_tags": true,
            "can_see_transaction_amount": true,
            "can_see_transaction_balance": true,
            "can_see_transaction_currency": true,
            "can_see_transaction_description": true,
            "can_see_transaction_finish_date": true,
            "can_see_transaction_metadata": true,
            "can_see_transaction_other_bank_account": true,
            "can_see_transaction_start_date": true,
            "can_see_transaction_this_bank_account": true,
            "can_see_transaction_type": true,
            "can_see_url": true,
            "can_see_where_tag": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error.",
        "wrong format JSON",
        "could not save the privilege",
        "user does not have access to owner view on account"
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "View",
        "Account",
        "User",
        "OwnerViewRequired"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "views": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "can_see_other_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_where_tag": {
                  "type": "boolean"
                },
                "can_see_url": {
                  "type": "boolean"
                },
                "can_see_bank_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_tags": {
                  "type": "boolean"
                },
                "can_see_transaction_balance": {
                  "type": "boolean"
                },
                "can_delete_corporate_location": {
                  "type": "boolean"
                },
                "can_add_image_url": {
                  "type": "boolean"
                },
                "can_see_public_alias": {
                  "type": "boolean"
                },
                "can_add_comment": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "can_see_corporate_location": {
                  "type": "boolean"
                },
                "can_see_other_account_bank_name": {
                  "type": "boolean"
                },
                "can_see_more_info": {
                  "type": "boolean"
                },
                "can_see_physical_location": {
                  "type": "boolean"
                },
                "can_edit_owner_comment": {
                  "type": "boolean"
                },
                "can_see_private_alias": {
                  "type": "boolean"
                },
                "can_see_bank_account_balance": {
                  "type": "boolean"
                },
                "can_add_public_alias": {
                  "type": "boolean"
                },
                "can_see_bank_account_owners": {
                  "type": "boolean"
                },
                "can_see_other_account_metadata": {
                  "type": "boolean"
                },
                "can_delete_physical_location": {
                  "type": "boolean"
                },
                "hide_metadata_if_alias_used": {
                  "type": "boolean"
                },
                "can_see_transaction_this_bank_account": {
                  "type": "boolean"
                },
                "can_see_image_url": {
                  "type": "boolean"
                },
                "can_see_transaction_type": {
                  "type": "boolean"
                },
                "can_see_images": {
                  "type": "boolean"
                },
                "can_see_transaction_amount": {
                  "type": "boolean"
                },
                "can_see_transaction_metadata": {
                  "type": "boolean"
                },
                "id": {
                  "type": "string"
                },
                "can_see_comments": {
                  "type": "boolean"
                },
                "can_see_other_account_iban": {
                  "type": "boolean"
                },
                "can_add_image": {
                  "type": "boolean"
                },
                "can_see_bank_account_type": {
                  "type": "boolean"
                },
                "can_see_other_account_kind": {
                  "type": "boolean"
                },
                "can_see_bank_account_currency": {
                  "type": "boolean"
                },
                "can_add_where_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_start_date": {
                  "type": "boolean"
                },
                "can_see_bank_account_label": {
                  "type": "boolean"
                },
                "can_add_private_alias": {
                  "type": "boolean"
                },
                "can_see_transaction_currency": {
                  "type": "boolean"
                },
                "can_add_more_info": {
                  "type": "boolean"
                },
                "can_delete_comment": {
                  "type": "boolean"
                },
                "can_see_transaction_other_bank_account": {
                  "type": "boolean"
                },
                "can_see_bank_account_number": {
                  "type": "boolean"
                },
                "can_add_corporate_location": {
                  "type": "boolean"
                },
                "can_add_url": {
                  "type": "boolean"
                },
                "short_name": {
                  "type": "string"
                },
                "can_delete_where_tag": {
                  "type": "boolean"
                },
                "is_public": {
                  "type": "boolean"
                },
                "can_see_owner_comment": {
                  "type": "boolean"
                },
                "can_see_transaction_finish_date": {
                  "type": "boolean"
                },
                "can_see_open_corporates_url": {
                  "type": "boolean"
                },
                "can_add_physical_location": {
                  "type": "boolean"
                },
                "can_see_bank_account_iban": {
                  "type": "boolean"
                },
                "can_see_other_account_national_identifier": {
                  "type": "boolean"
                },
                "can_delete_image": {
                  "type": "boolean"
                },
                "can_add_tag": {
                  "type": "boolean"
                },
                "can_add_open_corporates_url": {
                  "type": "boolean"
                },
                "can_delete_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_description": {
                  "type": "boolean"
                },
                "can_see_bank_account_national_identifier": {
                  "type": "boolean"
                },
                "can_see_other_account_number": {
                  "type": "boolean"
                },
                "can_see_bank_account_bank_name": {
                  "type": "boolean"
                },
                "alias": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/permissions/PROVIDER/PROVIDER_ID/views"
    },
    {
      "operation_id": "OBPv3.0.0-createBranch",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "createBranch"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/branches",
      "summary": "创建分支",
      "description": "<p>为银行创建分行。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Create Branch for the Bank.\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "id": "branch-id-123",
        "bank_id": "bank-id-123",
        "name": "Branch by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "String",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 10.0,
          "longitude": 10.0
        },
        "meta": {
          "license": {
            "id": "PDDL",
            "name": "Open Data Commons Public Domain Dedication and License "
          }
        },
        "lobby": {
          "monday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "tuesday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "wednesday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "thursday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "friday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "saturday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "sunday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ]
        },
        "drive_up": {
          "monday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "tuesday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "wednesday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "thursday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "friday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "saturday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "sunday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          }
        },
        "branch_routing": {
          "scheme": "OBP",
          "address": "123abc"
        },
        "is_accessible": "true",
        "accessibleFeatures": "wheelchair, atm usuable by the visually impaired",
        "branch_type": "Full service store",
        "more_info": "short walk to the lake from here",
        "phone_number": "+381631954907"
      },
      "success_response_body": {
        "id": "branch-id-123",
        "bank_id": "bank-id-123",
        "name": "Branch by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "String",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 10.0,
          "longitude": 10.0
        },
        "meta": {
          "license": {
            "id": "PDDL",
            "name": "Open Data Commons Public Domain Dedication and License "
          }
        },
        "lobby": {
          "monday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "tuesday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "wednesday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "thursday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "friday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "saturday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "sunday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ]
        },
        "drive_up": {
          "monday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "tuesday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "wednesday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "thursday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "friday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "saturday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "sunday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          }
        },
        "branch_routing": {
          "scheme": "OBP",
          "address": "123abc"
        },
        "is_accessible": "true",
        "accessibleFeatures": "wheelchair, atm usuable by the visually impaired",
        "branch_type": "Full service store",
        "more_info": "short walk to the lake from here",
        "phone_number": "+381631954907"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30209: Insufficient authorisation to Create Branch. You do not have the role CanCreateBranch.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Branch"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "accessibleFeatures": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "branch_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "county": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              }
            }
          },
          "drive_up": {
            "type": "object",
            "properties": {
              "friday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "monday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "saturday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "thursday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "tuesday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "wednesday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "sunday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "branch_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          },
          "phone_number": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "lobby": {
            "type": "object",
            "properties": {
              "saturday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "tuesday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "monday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "friday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "sunday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "wednesday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "thursday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accessibleFeatures": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "branch_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "county": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              }
            }
          },
          "drive_up": {
            "type": "object",
            "properties": {
              "friday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "monday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "saturday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "thursday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "tuesday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "wednesday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "sunday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "branch_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          },
          "phone_number": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "lobby": {
            "type": "object",
            "properties": {
              "saturday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "tuesday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "monday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "friday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "sunday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "wednesday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "thursday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateBranch",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateBranchAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/branches"
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyPhysicalLocation",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyPhysicalLocation"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/physical_location",
      "summary": "删除对方的物理位置。",
      "description": "<p>删除其他银行帐户的实际位置。 </p>",
      "description_markdown": "Delete physical location of other bank account.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "Physical Location cannot be deleted",
        "Delete not completed",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/physical_location"
    },
    {
      "operation_id": "OBPv3.0.0-getEntitlementRequests",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getEntitlementRequests"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/users/USER_ID/entitlement-requests",
      "summary": "获取用户的权利请求。",
      "description": "<p>获取用户的权利请求。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get Entitlement Requests for a User.\n\n\nAuthentication is Mandatory\n\n        ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "entitlement_requests": [
          {
            "entitlement_request_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
            "user": {
              "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
              "email": "eveline@example.com",
              "provider_id": "Chris",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith",
              "entitlements": {
                "list": [
                  {
                    "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
                    "role_name": "CanQueryOtherUser",
                    "bank_id": "GENODEM1GLS"
                  }
                ]
              }
            },
            "role_name": "CanQueryOtherUser",
            "bank_id": "GENODEM1GLS",
            "created": "2017-09-18T22:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20050: Current User is not a Super Admin!",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Role",
        "Entitlement",
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "entitlement_requests": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "entitlement_request_id": {
                  "type": "string"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "entitlements": {
                      "type": "object",
                      "properties": {
                        "list": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "bank_id": {
                                "type": "string"
                              },
                              "role_name": {
                                "type": "string"
                              },
                              "entitlement_id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "provider": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider_id": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  }
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "role_name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetEntitlementRequestsAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/USER_ID/entitlement-requests"
    },
    {
      "operation_id": "OBPv3.1.0-getTransactionByIdForBankAccount",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getTransactionByIdForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/transaction",
      "summary": "通过ID获取交易。",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Returns one transaction specified by TRANSACTION_ID of the account ACCOUNT_ID and [moderated](#1_2_1-getViewsForBankAccount) by the view (VIEW_ID).\n\nAuthentication is Optional\nAuthentication is required if the view is not public.\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "this_account": {
          "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
          "holders": [
            {
              "name": "OBP",
              "is_alias": true
            }
          ],
          "number": "123",
          "kind": "AC",
          "IBAN": "UK1234AD",
          "swift_bic": "UK1234AD",
          "bank": {
            "national_identifier": "OBP",
            "name": "OBP"
          }
        },
        "other_account": {
          "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
          "holder": {
            "name": "OBP",
            "is_alias": true
          },
          "number": "123",
          "kind": "3456",
          "IBAN": "UK234DB",
          "swift_bic": "UK12321DB",
          "bank": {
            "national_identifier": "OBP",
            "name": "OBP"
          },
          "metadata": {
            "public_alias": "NONE",
            "private_alias": "NONE",
            "more_info": "www.openbankproject.com",
            "URL": "www.openbankproject.com",
            "image_URL": "www.openbankproject.com",
            "open_corporates_URL": "www.openbankproject.com",
            "corporate_location": {
              "latitude": 1.231,
              "longitude": 1.231,
              "date": "2017-09-18T22:00:00Z",
              "user": {
                "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                "provider": "http://127.0.0.1:8080",
                "display_name": "OBP"
              }
            },
            "physical_location": {
              "latitude": 1.231,
              "longitude": 1.231,
              "date": "2017-09-18T22:00:00Z",
              "user": {
                "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                "provider": "http://127.0.0.1:8080",
                "display_name": "OBP"
              }
            }
          }
        },
        "details": {
          "type": "AC",
          "description": "this is for family",
          "posted": "2017-09-18T22:00:00Z",
          "completed": "2017-09-18T22:00:00Z",
          "new_balance": {
            "currency": "EUR",
            "amount": "10"
          },
          "value": {
            "currency": "EUR",
            "amount": "10"
          }
        },
        "metadata": {
          "narrative": "NONE",
          "comments": [
            {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "value": "OBP",
              "date": "2017-09-18T22:00:00Z",
              "user": {
                "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                "provider": "http://127.0.0.1:8080",
                "display_name": "OBP"
              }
            }
          ],
          "tags": [
            {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "value": "OBP",
              "date": "2017-09-18T22:00:00Z",
              "user": {
                "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                "provider": "http://127.0.0.1:8080",
                "display_name": "OBP"
              }
            }
          ],
          "images": [
            {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "label": "NONE",
              "URL": "www.openbankproject.com",
              "date": "2017-09-18T22:00:00Z",
              "user": {
                "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                "provider": "http://127.0.0.1:8080",
                "display_name": "OBP"
              }
            }
          ],
          "where": {
            "latitude": 1.231,
            "longitude": 1.231,
            "date": "2017-09-18T22:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Transaction",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "details": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "value": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "new_balance": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "posted": {
                "type": "string",
                "format": "date-time"
              },
              "completed": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "this_account": {
            "type": "object",
            "properties": {
              "swift_bic": {
                "type": "string"
              },
              "number": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "bank": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "national_identifier": {
                    "type": "string"
                  }
                }
              },
              "holders": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "is_alias": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              },
              "kind": {
                "type": "string"
              },
              "IBAN": {
                "type": "string"
              }
            }
          },
          "metadata": {
            "type": "object",
            "properties": {
              "comments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "display_name": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "value": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "URL": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "display_name": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "label": {
                      "type": "string"
                    }
                  }
                }
              },
              "narrative": {
                "type": "string"
              },
              "where": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "display_name": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "display_name": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "value": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "other_account": {
            "type": "object",
            "properties": {
              "IBAN": {
                "type": "string"
              },
              "swift_bic": {
                "type": "string"
              },
              "number": {
                "type": "string"
              },
              "holder": {
                "type": "object",
                "properties": {
                  "is_alias": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "id": {
                "type": "string"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "image_URL": {
                    "type": "string"
                  },
                  "corporate_location": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "type": "object",
                        "properties": {
                          "display_name": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "longitude": {
                        "type": "number"
                      },
                      "latitude": {
                        "type": "number"
                      }
                    }
                  },
                  "URL": {
                    "type": "string"
                  },
                  "open_corporates_URL": {
                    "type": "string"
                  },
                  "physical_location": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "type": "object",
                        "properties": {
                          "display_name": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "longitude": {
                        "type": "number"
                      },
                      "latitude": {
                        "type": "number"
                      }
                    }
                  },
                  "public_alias": {
                    "type": "string"
                  },
                  "private_alias": {
                    "type": "string"
                  },
                  "more_info": {
                    "type": "string"
                  }
                }
              },
              "bank": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "national_identifier": {
                    "type": "string"
                  }
                }
              },
              "kind": {
                "type": "string"
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/transaction"
    },
    {
      "operation_id": "OBPv3.1.0-getRateLimitingInfo",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getRateLimitingInfo"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/rate-limiting",
      "summary": "获取速率限制信息",
      "description": "<p>获取有关此OBP实例上的速率限制设置的信息，例如： </p><p>速率限制已启用并处于活动状态吗？ <br />后端用于跟踪API调用（例如REDIS）。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get information about the Rate Limiting setup on this OBP Instance such as:\n\nIs rate limiting enabled and active?\nWhat backend is used to keep track of the API calls (e.g. REDIS).\n\n\nAuthentication is Mandatory\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "enabled": true,
        "technology": "REDIS",
        "service_available": true,
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "is_active": {
            "type": "boolean"
          },
          "service_available": {
            "type": "boolean"
          },
          "technology": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/rate-limiting"
    },
    {
      "operation_id": "OBPv3.0.0-updateViewForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "updateViewForBankAccount"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/views/VIEW_ID",
      "summary": "更新视图。",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Update an existing view on a bank account\n\nAuthentication is Mandatory and the user needs to have access to the owner view.\n\nThe json sent is the same as during view creation (above), with one difference: the 'name' field\nof a view is not editable (it is only set when a view is created)",
      "example_request_body": {
        "description": "this is for family",
        "metadata_view": "owner",
        "is_public": true,
        "which_alias_to_use": "family",
        "hide_metadata_if_alias_used": true,
        "allowed_actions": [
          "can_see_transaction_this_bank_account",
          "can_see_transaction_other_bank_account",
          "can_see_transaction_metadata",
          "can_see_transaction_label",
          "can_see_transaction_amount",
          "can_see_transaction_type",
          "can_see_transaction_currency",
          "can_see_transaction_start_date",
          "can_see_transaction_finish_date",
          "can_see_transaction_balance",
          "can_see_comments",
          "can_see_narrative",
          "can_see_tags",
          "can_see_images",
          "can_see_bank_account_owners",
          "can_see_bank_account_type",
          "can_see_bank_account_balance",
          "can_see_bank_account_currency",
          "can_see_bank_account_label",
          "can_see_bank_account_national_identifier",
          "can_see_bank_account_swift_bic",
          "can_see_bank_account_iban",
          "can_see_bank_account_number",
          "can_see_bank_account_bank_name",
          "can_see_other_account_national_identifier",
          "can_see_other_account_swift_bic",
          "can_see_other_account_iban",
          "can_see_other_account_bank_name",
          "can_see_other_account_number",
          "can_see_other_account_metadata",
          "can_see_other_account_kind",
          "can_see_more_info",
          "can_see_url",
          "can_see_image_url",
          "can_see_open_corporates_url",
          "can_see_corporate_location",
          "can_see_physical_location",
          "can_see_public_alias",
          "can_see_private_alias",
          "can_add_more_info",
          "can_add_url",
          "can_add_image_url",
          "can_add_open_corporates_url",
          "can_add_corporate_location",
          "can_add_physical_location",
          "can_add_public_alias",
          "can_add_private_alias",
          "can_delete_corporate_location",
          "can_delete_physical_location",
          "can_edit_narrative",
          "can_add_comment",
          "can_delete_comment",
          "can_add_tag",
          "can_delete_tag",
          "can_add_image",
          "can_delete_image",
          "can_add_where_tag",
          "can_see_where_tag",
          "can_delete_where_tag",
          "can_create_counterparty",
          "can_see_bank_routing_scheme",
          "can_see_bank_routing_address",
          "can_see_bank_account_routing_scheme",
          "can_see_bank_account_routing_address",
          "can_see_other_bank_routing_scheme",
          "can_see_other_bank_routing_address",
          "can_see_other_account_routing_scheme",
          "can_see_other_account_routing_address",
          "can_query_available_funds"
        ]
      },
      "success_response_body": {
        "id": "1234",
        "short_name": "short_name",
        "description": "description",
        "metadata_view": "owner",
        "is_public": true,
        "alias": "No",
        "hide_metadata_if_alias_used": true,
        "can_add_comment": true,
        "can_add_corporate_location": true,
        "can_add_image": true,
        "can_add_image_url": true,
        "can_add_more_info": true,
        "can_add_open_corporates_url": true,
        "can_add_physical_location": true,
        "can_add_private_alias": true,
        "can_add_public_alias": true,
        "can_add_tag": true,
        "can_add_url": true,
        "can_add_where_tag": true,
        "can_delete_comment": true,
        "can_add_counterparty": true,
        "can_delete_corporate_location": true,
        "can_delete_image": true,
        "can_delete_physical_location": true,
        "can_delete_tag": true,
        "can_delete_where_tag": true,
        "can_edit_owner_comment": true,
        "can_see_bank_account_balance": true,
        "can_query_available_funds": true,
        "can_see_bank_account_bank_name": true,
        "can_see_bank_account_currency": true,
        "can_see_bank_account_iban": true,
        "can_see_bank_account_label": true,
        "can_see_bank_account_national_identifier": true,
        "can_see_bank_account_number": true,
        "can_see_bank_account_owners": true,
        "can_see_bank_account_swift_bic": true,
        "can_see_bank_account_type": true,
        "can_see_comments": true,
        "can_see_corporate_location": true,
        "can_see_image_url": true,
        "can_see_images": true,
        "can_see_more_info": true,
        "can_see_open_corporates_url": true,
        "can_see_other_account_bank_name": true,
        "can_see_other_account_iban": true,
        "can_see_other_account_kind": true,
        "can_see_other_account_metadata": true,
        "can_see_other_account_national_identifier": true,
        "can_see_other_account_number": true,
        "can_see_other_account_swift_bic": true,
        "can_see_owner_comment": true,
        "can_see_physical_location": true,
        "can_see_private_alias": true,
        "can_see_public_alias": true,
        "can_see_tags": true,
        "can_see_transaction_amount": true,
        "can_see_transaction_balance": true,
        "can_see_transaction_currency": true,
        "can_see_transaction_description": true,
        "can_see_transaction_finish_date": true,
        "can_see_transaction_metadata": true,
        "can_see_transaction_other_bank_account": true,
        "can_see_transaction_start_date": true,
        "can_see_transaction_this_bank_account": true,
        "can_see_transaction_type": true,
        "can_see_url": true,
        "can_see_where_tag": true,
        "can_see_bank_routing_scheme": true,
        "can_see_bank_routing_address": true,
        "can_see_bank_account_routing_scheme": true,
        "can_see_bank_account_routing_address": true,
        "can_see_other_bank_routing_scheme": true,
        "can_see_other_bank_routing_address": true,
        "can_see_other_account_routing_scheme": true,
        "can_see_other_account_routing_address": true,
        "can_add_transaction_request_to_own_account": true,
        "can_add_transaction_request_to_any_account": true,
        "can_see_bank_account_credit_limit": true,
        "can_create_direct_debit": true,
        "can_create_standing_order": true
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "View",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "allowed_actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "is_public": {
            "type": "boolean"
          },
          "which_alias_to_use": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_see_other_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_where_tag": {
            "type": "boolean"
          },
          "can_see_url": {
            "type": "boolean"
          },
          "can_create_direct_debit": {
            "type": "boolean"
          },
          "can_see_bank_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_address": {
            "type": "boolean"
          },
          "can_see_tags": {
            "type": "boolean"
          },
          "can_see_transaction_balance": {
            "type": "boolean"
          },
          "can_delete_corporate_location": {
            "type": "boolean"
          },
          "can_add_image_url": {
            "type": "boolean"
          },
          "can_see_public_alias": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_own_account": {
            "type": "boolean"
          },
          "can_add_comment": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_scheme": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "can_see_corporate_location": {
            "type": "boolean"
          },
          "can_see_other_account_bank_name": {
            "type": "boolean"
          },
          "can_see_more_info": {
            "type": "boolean"
          },
          "can_add_counterparty": {
            "type": "boolean"
          },
          "can_see_physical_location": {
            "type": "boolean"
          },
          "can_query_available_funds": {
            "type": "boolean"
          },
          "can_edit_owner_comment": {
            "type": "boolean"
          },
          "can_see_private_alias": {
            "type": "boolean"
          },
          "can_see_bank_account_credit_limit": {
            "type": "boolean"
          },
          "can_see_other_account_routing_address": {
            "type": "boolean"
          },
          "can_see_bank_account_balance": {
            "type": "boolean"
          },
          "can_add_public_alias": {
            "type": "boolean"
          },
          "can_see_bank_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_owners": {
            "type": "boolean"
          },
          "can_see_other_account_metadata": {
            "type": "boolean"
          },
          "can_delete_physical_location": {
            "type": "boolean"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "can_see_transaction_this_bank_account": {
            "type": "boolean"
          },
          "can_see_image_url": {
            "type": "boolean"
          },
          "can_see_transaction_type": {
            "type": "boolean"
          },
          "can_see_images": {
            "type": "boolean"
          },
          "can_see_transaction_amount": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "can_see_transaction_metadata": {
            "type": "boolean"
          },
          "can_see_comments": {
            "type": "boolean"
          },
          "can_see_other_account_iban": {
            "type": "boolean"
          },
          "can_add_image": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_type": {
            "type": "boolean"
          },
          "can_see_other_account_kind": {
            "type": "boolean"
          },
          "can_see_bank_account_currency": {
            "type": "boolean"
          },
          "can_add_where_tag": {
            "type": "boolean"
          },
          "can_see_transaction_start_date": {
            "type": "boolean"
          },
          "can_see_bank_account_label": {
            "type": "boolean"
          },
          "can_add_private_alias": {
            "type": "boolean"
          },
          "can_see_transaction_currency": {
            "type": "boolean"
          },
          "can_add_more_info": {
            "type": "boolean"
          },
          "can_delete_comment": {
            "type": "boolean"
          },
          "can_create_standing_order": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_address": {
            "type": "boolean"
          },
          "can_see_transaction_other_bank_account": {
            "type": "boolean"
          },
          "can_see_bank_account_number": {
            "type": "boolean"
          },
          "can_add_corporate_location": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "can_add_url": {
            "type": "boolean"
          },
          "short_name": {
            "type": "string"
          },
          "can_delete_where_tag": {
            "type": "boolean"
          },
          "is_public": {
            "type": "boolean"
          },
          "can_see_owner_comment": {
            "type": "boolean"
          },
          "can_see_transaction_finish_date": {
            "type": "boolean"
          },
          "can_see_open_corporates_url": {
            "type": "boolean"
          },
          "can_add_physical_location": {
            "type": "boolean"
          },
          "can_see_bank_account_iban": {
            "type": "boolean"
          },
          "can_see_other_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_bank_routing_address": {
            "type": "boolean"
          },
          "can_delete_image": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_any_account": {
            "type": "boolean"
          },
          "can_add_tag": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "can_see_other_account_routing_scheme": {
            "type": "boolean"
          },
          "can_add_open_corporates_url": {
            "type": "boolean"
          },
          "can_delete_tag": {
            "type": "boolean"
          },
          "can_see_transaction_description": {
            "type": "boolean"
          },
          "can_see_bank_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_other_account_number": {
            "type": "boolean"
          },
          "can_see_bank_account_bank_name": {
            "type": "boolean"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/views/VIEW_ID"
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyPublicAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyPublicAlias"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias",
      "summary": "删除对方公共别名",
      "description": "<p>删除另一个帐户OTHER_ACCOUNT_ID的公共别名。 </p><p>身份验证是可选的<br />如果视图不是公共的，则需要认证。 </p>",
      "description_markdown": "Deletes the public alias of the other account OTHER_ACCOUNT_ID.\n\nAuthentication is Optional\nAuthentication is required if the view is not public.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "the view does not allow deleting the public alias",
        "Alias cannot be deleted",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias"
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyPublicAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyPublicAlias"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias",
      "summary": "更新其他银行帐户的公共别名。",
      "description": "<p>更新其他帐户/交易对手OTHER_ACCOUNT_ID的公共别名。 </p><p>身份验证是可选的<br />如果视图不是公共的，则需要认证。 </p>",
      "description_markdown": "Updates the public alias of the other account / counterparty OTHER_ACCOUNT_ID.\n\nAuthentication is Optional\nAuthentication is required if the view is not public.",
      "example_request_body": {
        "alias": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-20001: User not logged in. Authentication is required!",
        "the view does not allow metadata access",
        "the view does not allow updating the public alias",
        "Alias cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/public_alias"
    },
    {
      "operation_id": "OBPv1.2.1-addOtherAccountPrivateAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addOtherAccountPrivateAlias"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias",
      "summary": "创建其他帐户专用别名",
      "description": "<p>为其他帐户OTHER_ACCOUNT_ID创建一个专用别名。 </p><p>身份验证是可选的<br />如果视图不是公共的，则需要认证。 </p>",
      "description_markdown": "Creates a private alias for the other account OTHER_ACCOUNT_ID.\n\nAuthentication is Optional\nAuthentication is required if the view is not public.",
      "example_request_body": {
        "alias": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow adding a private alias",
        "Alias cannot be added",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias"
    },
    {
      "operation_id": "OBPv3.1.0-config",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "config"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/config",
      "summary": "获取API配置",
      "description": "<p>返回有关以下内容的信息： </p><ul><li>默认的bank_id </li><li> Akka配置</li><li>弹性搜索配置</li><li>缓存功能</li></ul>",
      "description_markdown": "Returns information about:\n\n* The default bank_id\n* Akka configuration\n* Elastic Search configuration\n* Cached functions ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "akka": {
          "ports": [
            {
              "property": "default",
              "value": "8080"
            }
          ],
          "log_level": "Debug",
          "remote_data_secret_matched": true
        },
        "elastic_search": {
          "metrics": [
            {
              "property": "String",
              "value": "Mapper"
            }
          ],
          "warehouse": [
            {
              "property": "String",
              "value": "ElasticSearch"
            }
          ]
        },
        "cache": [
          {
            "function_name": "getBanks",
            "ttl_in_seconds": 5
          }
        ],
        "scopes": {
          "require_scopes_for_all_roles": true,
          "require_scopes_for_listed_roles": [
            "CanCreateUserAuthContextUpdate"
          ]
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "scopes": {
            "type": "object",
            "properties": {
              "require_scopes_for_listed_roles": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "require_scopes_for_all_roles": {
                "type": "boolean"
              }
            }
          },
          "cache": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ttl_in_seconds": {
                  "type": "integer"
                },
                "function_name": {
                  "type": "string"
                }
              }
            }
          },
          "elastic_search": {
            "type": "object",
            "properties": {
              "warehouse": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "property": {
                      "type": "string"
                    }
                  }
                }
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "property": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "akka": {
            "type": "object",
            "properties": {
              "remote_data_secret_matched": {
                "type": "boolean"
              },
              "log_level": {
                "type": "string"
              },
              "ports": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    },
                    "property": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetConfig",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/config"
    },
    {
      "operation_id": "OBPv3.1.0-deleteCardForBank",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteCardForBank"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/cards/CARD_ID",
      "summary": "删除卡",
      "description": "<p>在CARD_ID指定的银行删除卡。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Delete a Card at bank specified by CARD_ID .\n\nAuthentication is Mandatory\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10015: Allowed values are: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Card"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateCardsForBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/banks/BANK_ID/cards/CARD_ID"
    },
    {
      "operation_id": "OBPv3.1.0-getMeetings",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getMeetings"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/meetings",
      "summary": "开会",
      "description": "<p>会议包含有关视频会议/聊天等的元数据，并用于促进会议。 </p><p>实际的会议/聊天由外部服务处理。 </p><p>需要登录。 </p><p>此调用是<strong>实验性的</strong> ，将来需要进一步的授权。 </p>",
      "description_markdown": "Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.\n\nThe actual conference/chats are handled by external services.\n\nLogin is required.\n\nThis call is **experimental** and will require further authorisation in the future.\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "meetings": [
          {
            "meeting_id": "UUID-String",
            "provider_id": "Chris",
            "purpose_id": "String, eg: onboarding",
            "bank_id": "GENODEM1GLS",
            "present": {
              "staff_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
              "customer_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
            },
            "keys": {
              "session_id": "String",
              "staff_token": "String",
              "customer_token": "String"
            },
            "when": "2017-09-18T22:00:00Z",
            "creator": {
              "name": "Simon ",
              "mobile_phone": "+44 07972 444 876",
              "email_address": "eveline@example.com"
            },
            "invitees": [
              {
                "contact_details": {
                  "name": "Simon ",
                  "mobile_phone": "+44 07972 444 876",
                  "email_address": "eveline@example.com"
                },
                "status": "String, eg: Good"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer-Meeting",
        "KYC",
        "Customer",
        "User",
        "Experimental"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "meetings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "present": {
                  "type": "object",
                  "properties": {
                    "customer_user_id": {
                      "type": "string"
                    },
                    "staff_user_id": {
                      "type": "string"
                    }
                  }
                },
                "when": {
                  "type": "string",
                  "format": "date-time"
                },
                "provider_id": {
                  "type": "string"
                },
                "creator": {
                  "type": "object",
                  "properties": {
                    "email_address": {
                      "type": "string"
                    },
                    "mobile_phone": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "purpose_id": {
                  "type": "string"
                },
                "keys": {
                  "type": "object",
                  "properties": {
                    "customer_token": {
                      "type": "string"
                    },
                    "staff_token": {
                      "type": "string"
                    },
                    "session_id": {
                      "type": "string"
                    }
                  }
                },
                "invitees": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string"
                      },
                      "contact_details": {
                        "type": "object",
                        "properties": {
                          "email_address": {
                            "type": "string"
                          },
                          "mobile_phone": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "meeting_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/meetings"
    },
    {
      "operation_id": "OBPv1.4.0-getResourceDocsObp",
      "implemented_by": {
        "version": "OBPv1.4.0",
        "function": "getResourceDocsObp"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.4.0/resource-docs/API_VERSION/obp",
      "summary": "获取资源文档。",
      "description": "<p>获取有关此服务器上RESTful资源的文档，包括POST和PUT请求的示例正文。 </p><p>这是用于记录OBP端点的本机数据格式。每个端点都有一个在源代码中定义的Resource Doc（Scala案例类）。 </p><p> OBP API资源管理器使用此端点来显示和使用API​​文档。 </p><p>大多数（但不是全部）字段也都可以使用摇摇欲坠的格式。 （Swagger终结点是从“资源文档”构建的。） </p><p> API_VERSION是您想要有关例如v3.0.0的文档的版本</p><p>您可以使用标签参数过滤此端点，例如？tags = Account，Bank </p><p>您可以使用功能参数过滤此端点，例如？functions = enableDisableConsumers，getConnectorMetrics </p><p>有关可能的函数值，请参见此终结点返回的JSON中的Implemented_by.function或OBP源代码或API Explorer的页脚，它们会产生逗号分隔的函数列表，这些函数列表反映了服务器或API Explorer基于标记等进行过滤。 </p><p>您可以使用“目录” URL参数过滤此端点，例如？core =＆psd2 = true＆obwg = </p><p>有关更多信息，请参见Resource Doc端点。 </p><p>以下是更多示例： <br /> <a href=\"http://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/obp\">http：// localhost：8080 / obp / v3.1.0 / resource-docs / v3.1.0 / obp</a> <br /> <a href=\"http://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/obp?psd2=true\">http：// localhost：8080 / obp / v3.1.0 / resource-docs / v3.1.0 / obp？psd2 = true</a> <br /> <a href=\"http://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/obp?tags=Account,Bank\">http：// localhost：8080 / obp / v3.1.0 / resource-docs / v3.1.0 / obp？tags = Account，Bank</a> <br /> <a href=\"http://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/obp?functions=getBanks,bankById\">http：// localhost：8080 / obp / v3.1.0 / resource-docs / v3.1.0 / obp？functions = getBanks，bankById</a> <br /> <a href=\"http://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/obp?psd2=true&amp;tags=Account,Bank&amp;functions=getBanks,bankById\">http：// localhost：8080 / obp / v3.1.0 / resource-docs / v3.1.0 / obp？psd2 = true＆tags = Account，Bank＆functions = getBanks，bankById</a> </p><ul><li> operation_id是“ v”，版本和功能的串联，并且应该是唯一的（用于DOM元素ID等，可能用于链接到源代码） </li><li>版本引用定义了API调用的版本。 </li><li> function是实现此端点的（标量）部分函数。每个API版本都是唯一的。 </li><li>对于根调用，request_url为空，否则为路径。它包含标准前缀（例如/ obp）和实现的版本（定义此端点的版本），例如/obp/v1.2.0/resource </li><li>对于根调用，指定路径（建议使用）为空，否则为路径。它包含标准前缀（例如/ obp）和调用中指定的版本，例如/obp/v3.1.0/resource。在OBP中，首先在request_url上使端点可用，但是在更高版本（specified_url）下通常使相同的资源（函数调用）可用。要访问所有端点的最新版本，请使用OBP实例上可用的最新版本，例如/obp/v3.1.0-要获取原始版本，请使用request_url。我们建议使用指定的URL，因为非语义上的改进很可能会应用于以后的调用实现中。 </li><li>摘要是与草率术语一致的简短描述。 </li><li>说明可能包含html标记（从服务器上的markdown生成）。 </li></ul>",
      "description_markdown": "Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.\n\nThis is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.\n\n This endpoint is used by OBP API Explorer to display and work with the API documentation.\n\n Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)\n\n API_VERSION is the version you want documentation about e.g. v3.0.0\n\n You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank\n\n You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics\n\n For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.\n\nYou may filter this endpoint using the 'Catalogs' url parameter e.g. ?core=&psd2=true&obwg=\n\nSee the Resource Doc endpoint for more information.\n\nFollowing are more examples:\nhttp://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/obp\nhttp://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/obp?psd2=true\nhttp://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/obp?tags=Account,Bank\nhttp://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/obp?functions=getBanks,bankById\nhttp://localhost:8080/obp/v3.1.0/resource-docs/v3.1.0/obp?psd2=true&tags=Account,Bank&functions=getBanks,bankById\n\n<ul>\n<li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li>\n<li> version references the version that the API call is defined in.</li>\n<li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li>\n<li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li>\n<li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li>\n<li> summary is a short description inline with the swagger terminology. </li>\n<li> description may contain html markup (generated from markdown on the server).</li>\n</ul>\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Documentation",
        "API"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/resource-docs/API_VERSION/obp"
    },
    {
      "operation_id": "OBPv2.1.0-getRoles",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "getRoles"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.1.0/roles",
      "summary": "获取角色",
      "description": "<p>返回所有可用角色</p><p>身份验证是强制性的</p>",
      "description_markdown": "Returns all available roles\n\nAuthentication is Mandatory\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "roles": [
          {
            "role": "eBranch",
            "requires_bank_id": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Role",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "requires_bank_id": {
                  "type": "boolean"
                },
                "role": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/roles"
    },
    {
      "operation_id": "OBPv3.0.0-getBranch",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getBranch"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/branches/BRANCH_ID",
      "summary": "获取分支",
      "description": "<p>返回有关由BANK_ID和BRANCH_ID指定的单个Branch的信息，包括： </p><ul><li>名称</li><li>地址</li><li>地理位置</li><li>许可下发布该端点下的数据。 </li></ul><p>身份验证是可选的</p>",
      "description_markdown": "Returns information about a single Branch specified by BANK_ID and BRANCH_ID including:\n\n* Name\n* Address\n* Geo Location\n* License the data under this endpoint is released under.\n\nAuthentication is Optional",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "id": "branch-id-123",
        "bank_id": "bank-id-123",
        "name": "Branch by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "String",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 10.0,
          "longitude": 10.0
        },
        "meta": {
          "license": {
            "id": "PDDL",
            "name": "Open Data Commons Public Domain Dedication and License "
          }
        },
        "lobby": {
          "monday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "tuesday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "wednesday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "thursday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "friday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "saturday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ],
          "sunday": [
            {
              "opening_time": "10:00",
              "closing_time": "18:00"
            }
          ]
        },
        "drive_up": {
          "monday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "tuesday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "wednesday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "thursday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "friday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "saturday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          },
          "sunday": {
            "opening_time": "10:00",
            "closing_time": "18:00"
          }
        },
        "branch_routing": {
          "scheme": "OBP",
          "address": "123abc"
        },
        "is_accessible": "true",
        "accessibleFeatures": "wheelchair, atm usuable by the visually impaired",
        "branch_type": "Full service store",
        "more_info": "short walk to the lake from here",
        "phone_number": "+381631954907"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "License may not be set. meta.license.id and eta.license.name can not be empty",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Branch",
        "Bank",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accessibleFeatures": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "branch_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "county": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              }
            }
          },
          "drive_up": {
            "type": "object",
            "properties": {
              "friday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "monday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "saturday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "thursday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "tuesday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "wednesday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              },
              "sunday": {
                "type": "object",
                "properties": {
                  "closing_time": {
                    "type": "string"
                  },
                  "opening_time": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "branch_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          },
          "phone_number": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "lobby": {
            "type": "object",
            "properties": {
              "saturday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "tuesday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "monday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "friday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "sunday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "wednesday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              },
              "thursday": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "closing_time": {
                      "type": "string"
                    },
                    "opening_time": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/branches/BRANCH_ID"
    },
    {
      "operation_id": "OBPv4.0.0-getEntitlements",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getEntitlements"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/users/USER_ID/entitlements",
      "summary": "获取用户权利",
      "description": "<p>身份验证是强制性的</p>",
      "description_markdown": "\n\nAuthentication is Mandatory\n\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "list": [
          {
            "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
            "role_name": "CanQueryOtherUser",
            "bank_id": "GENODEM1GLS"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Role",
        "Entitlement",
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                },
                "entitlement_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetEntitlementsForAnyUserAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/USER_ID/entitlements"
    },
    {
      "operation_id": "OBPv1.2.1-deleteImageForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteImageForViewOnTransaction"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/images/IMAGE_ID",
      "summary": "删除图片",
      "description": "<p>删除有关在<a href=\"#1_2_1-getViewsForBankAccount\">view</a>上进行的交易TRANSACTION_ID的图像IMAGE_ID。 </p><p>需要通过OAuth进行身份验证。该用户必须对此帐户具有所有者特权，或者必须是发布该图像的用户。 </p>",
      "description_markdown": "Deletes the image IMAGE_ID about the transaction TRANSACTION_ID made on [view](#1_2_1-getViewsForBankAccount).\n\nAuthentication via OAuth is required. The user must either have owner privileges for this account, or must be the user that posted the image.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-20001: User not logged in. Authentication is required!",
        "You must be able to see images in order to delete them",
        "Image not found for this transaction",
        "Deleting images not permitted for this view",
        "Deleting images not permitted for the current user",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/images/IMAGE_ID"
    },
    {
      "operation_id": "OBPv3.1.0-updateMethodRouting",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateMethodRouting"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/management/method_routings/METHOD_ROUTING_ID",
      "summary": "更新方法",
      "description": "<p>更新MethodRouting。 </p><p>身份验证是强制性的</p><p>领域解释： </p><ul><li> method_name是必需的字符串值</li><li> connector_name是必需的字符串值</li><li> is_bank_id_exact_match是必需的布尔值，如果bank_id_pattern是确切的bank_id值，则此值为true；否则，此值为true。如果bank_id_pattern为null或正则表达式，则该值为false </li><li> bank_id_pattern是可选的字符串值，可以为null，确切的bank_id或正则表达式</li><li>参数是键值对的可选数组。您可以为此方法设置一些参数<br />注意： </li><li><p>如果bank_id_pattern是正则表达式，则需要对特殊字符进行转义，例如：bank_id_pattern =“ some-id_pattern_ \\ d +” </p></li></ul>",
      "description_markdown": "Update a MethodRouting.\n\n\nAuthentication is Mandatory\n\nExplaination of Fields:\n\n* method_name is required String value\n* connector_name is required String value\n* is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false\n* bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex\n* parameters is optional array of key value pairs. You can set some paremeters for this method\nnote:\n\n* if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = \"some\\-id_pattern_\\d+\"\n",
      "example_request_body": {
        "is_bank_id_exact_match": true,
        "method_name": "getBank",
        "connector_name": "rest_vMar2019",
        "bank_id_pattern": "some_bankId",
        "parameters": [
          {
            "key": "url",
            "value": "http://mydomain.com/xxx"
          }
        ]
      },
      "success_response_body": {
        "is_bank_id_exact_match": true,
        "method_name": "getBank",
        "connector_name": "rest_vMar2019",
        "method_routing_id": "this-method-routing-Id",
        "bank_id_pattern": "some_bankId",
        "parameters": [
          {
            "key": "url",
            "value": "http://mydomain.com/xxx"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Method-Routing",
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "is_bank_id_exact_match": {
            "type": "boolean"
          },
          "method_name": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "bank_id_pattern": {
            "type": "string"
          },
          "connector_name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "is_bank_id_exact_match": {
            "type": "boolean"
          },
          "method_name": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "bank_id_pattern": {
            "type": "string"
          },
          "method_routing_id": {
            "type": "string"
          },
          "connector_name": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateMethodRouting",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/method_routings/METHOD_ROUTING_ID"
    },
    {
      "operation_id": "OBPv3.1.0-createWebUiProps",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createWebUiProps"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/management/webui_props",
      "summary": "添加WebUiProps",
      "description": "<p>添加一个WebUiProps。 </p><p>身份验证是强制性的</p><p>领域解释： </p><ul><li>名称为必填字符串值</li><li>值是必需的字符串值</li></ul><p>换行符和双引号应该可以转义，例如： </p><pre> <code>{&quot;name&quot;: &quot;webui_some&quot;, &quot;value&quot;: &quot;this value have &quot;line break&quot; and double quotations.&quot;}</code> </pre><p>应该这样逃避： </p><pre> <code>{&quot;name&quot;: &quot;webui_some&quot;, &quot;value&quot;: &quot;this value\\nhave \\&quot;line break\\&quot; and double quotations.&quot;}</code> </pre><p>插入图片示例： </p><pre> <code>// set width=100 and height=50 {&quot;name&quot;: &quot;webui_some_pic&quot;, &quot;value&quot;: &quot;here is a picture &lt;img alt=&quot;hello&quot; src=&quot;http://somedomain.com/images/pic.png&quot; width=&quot;100&quot; height=&quot;50&quot; /&gt;&quot;} // only set height=50 {&quot;name&quot;: &quot;webui_some_pic&quot;, &quot;value&quot;: &quot;here is a picture &lt;img alt=&quot;hello&quot; src=&quot;http://somedomain.com/images/pic.png&quot; width=&quot;&quot; height=&quot;50&quot; /&gt;&quot;} // only width=20% {&quot;name&quot;: &quot;webui_some_pic&quot;, &quot;value&quot;: &quot;here is a picture &lt;img alt=&quot;hello&quot; src=&quot;http://somedomain.com/images/pic.png&quot; width=&quot;20%&quot; height=&quot;&quot; /&gt;&quot;}</code> </pre>",
      "description_markdown": "Add a WebUiProps.\n\n\nAuthentication is Mandatory\n\nExplaination of Fields:\n\n* name is required String value\n* value is required String value\n\nThe line break and double quotations should do escape, example:\n\n```\n\n{\"name\": \"webui_some\", \"value\": \"this value\nhave \"line break\" and double quotations.\"}\n\n```\nshould do escape like this:\n\n```\n\n{\"name\": \"webui_some\", \"value\": \"this value\\nhave \\\"line break\\\" and double quotations.\"}\n\n```\n\nInsert image examples:\n\n```\n// set width=100 and height=50\n{\"name\": \"webui_some_pic\", \"value\": \"here is a picture ![hello](http://somedomain.com/images/pic.png =100x50)\"}\n\n// only set height=50\n{\"name\": \"webui_some_pic\", \"value\": \"here is a picture ![hello](http://somedomain.com/images/pic.png =x50)\"}\n\n// only width=20%\n{\"name\": \"webui_some_pic\", \"value\": \"here is a picture ![hello](http://somedomain.com/images/pic.png =20%x)\"}\n\n```\n\n",
      "example_request_body": {
        "name": "webui_api_explorer_url",
        "value": "https://apiexplorer.openbankproject.com"
      },
      "success_response_body": {
        "name": "webui_api_explorer_url",
        "value": "https://apiexplorer.openbankproject.com",
        "web_ui_props_id": "some-web-ui-props-id"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "WebUi-Props",
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "web_ui_props_id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateWebUiProps",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/webui_props"
    },
    {
      "operation_id": "OBPv2.1.0-createTransactionType",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "createTransactionType"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v2.1.0/banks/BANK_ID/transaction-types",
      "summary": "映射（类型-&gt;字符串）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Create Transaction Types for the bank specified by BANK_ID:\n\n  * id : Unique transaction type id across the API instance. SHOULD be a UUID. MUST be unique.\n  * bank_id : The bank that supports this TransactionType\n  * short_code : A short code (SHOULD have no-spaces) which MUST be unique across the bank. May be stored with Transactions to link here\n  * summary : A succinct summary\n  * description : A longer description\n  * charge : The charge to the customer for each one of these\n\nAuthentication is Mandatory",
      "example_request_body": {
        "id": {
          "value": "123"
        },
        "bank_id": "GENODEM1GLS",
        "short_code": "PlaceholderString",
        "summary": "PlaceholderString",
        "description": "PlaceholderString",
        "charge": {
          "currency": "EUR",
          "amount": "10"
        }
      },
      "success_response_body": {
        "id": {
          "value": "123"
        },
        "bankId": {
          "value": "gh.uk.9j"
        },
        "shortCode": "80080",
        "summary": "SANDBOX_TAN",
        "description": "This is the sandbox mode, charging litter money.",
        "charge": {
          "currency": "EUR",
          "amount": "100"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-40005: Insufficient authorisation to Create Transaction Type offered by the bank. The Request could not be created because you don't have access to CanCreateTransactionType.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Bank"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "charge": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "description": {
            "type": "string"
          },
          "short_code": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "id": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bankId": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          },
          "charge": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "summary": {
            "type": "string"
          },
          "shortCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateTransactionType",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/transaction-types"
    },
    {
      "operation_id": "OBPv3.1.0-deleteCustomerAddress",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteCustomerAddress"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/addresses/CUSTOMER_ADDRESS_ID",
      "summary": "删除客户地址",
      "description": "<p>删除由CUSTOMER_ADDRESS_ID指定的客户地址。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Delete an Address of the Customer specified by CUSTOMER_ADDRESS_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "KYC",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanDeleteCustomerAddress",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/addresses/CUSTOMER_ADDRESS_ID"
    },
    {
      "operation_id": "OBPv3.1.0-getAccountApplication",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getAccountApplication"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/account-applications/ACCOUNT_APPLICATION_ID",
      "summary": "通过ID获取帐户申请",
      "description": "<p>获取帐户申请。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get the Account Application.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "account_application_id": "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763",
        "product_code": "saveing1",
        "user": {
          "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "email": "eveline@example.com",
          "provider_id": "Chris",
          "provider": "http://127.0.0.1:8080",
          "username": "felixsmith"
        },
        "customer": {
          "bank_id": "GENODEM1GLS",
          "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
          "customer_number": "5987953",
          "legal_name": "Eveline Tripman",
          "mobile_phone_number": "+44 07972 444 876",
          "email": "eveline@example.com",
          "face_image": {
            "url": "www.openbankproject",
            "date": "2017-09-18T22:00:00Z"
          },
          "date_of_birth": "2017-09-18T22:00:00Z",
          "relationship_status": "single",
          "dependants": 10,
          "dob_of_dependants": [
            "2017-09-18T22:00:00Z"
          ],
          "credit_rating": {
            "rating": "OBP",
            "source": "OBP"
          },
          "credit_limit": {
            "currency": "EUR",
            "amount": "10"
          },
          "highest_education_attained": "Master",
          "employment_status": "worker",
          "kyc_status": true,
          "last_ok_date": "2017-09-18T22:00:00Z",
          "title": "Dr.",
          "branch_id": "DERBY6",
          "name_suffix": "Sr"
        },
        "date_of_application": "2017-09-18T22:00:00Z",
        "status": "REQUESTED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account-Application",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "product_code": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "customer": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "dob_of_dependants": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "employment_status": {
                "type": "string"
              },
              "customer_id": {
                "type": "string"
              },
              "relationship_status": {
                "type": "string"
              },
              "date_of_birth": {
                "type": "string",
                "format": "date-time"
              },
              "last_ok_date": {
                "type": "string",
                "format": "date-time"
              },
              "highest_education_attained": {
                "type": "string"
              },
              "customer_number": {
                "type": "string"
              },
              "credit_rating": {
                "type": "object",
                "properties": {
                  "source": {
                    "type": "string"
                  },
                  "rating": {
                    "type": "string"
                  }
                }
              },
              "name_suffix": {
                "type": "string"
              },
              "credit_limit": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "dependants": {
                "type": "integer"
              },
              "legal_name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "face_image": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "url": {
                    "type": "string"
                  }
                }
              },
              "branch_id": {
                "type": "string"
              },
              "mobile_phone_number": {
                "type": "string"
              },
              "kyc_status": {
                "type": "boolean"
              }
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "user_id": {
                "type": "string"
              }
            }
          },
          "date_of_application": {
            "type": "string",
            "format": "date-time"
          },
          "account_application_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/account-applications/ACCOUNT_APPLICATION_ID"
    },
    {
      "operation_id": "OBPv3.0.0-getScopes",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getScopes"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/consumers/CONSUMER_ID/scopes",
      "summary": "获取消费者范围",
      "description": "<p>获取由CONSUMER_ID指定的使用者的所有范围</p><p>身份验证是强制性的</p>",
      "description_markdown": "Get all the scopes for an consumer specified by CONSUMER_ID\n\nAuthentication is Mandatory\n\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "list": [
          {
            "scope_id": "88625da4-a671-435e-9d24-e5b6e5cc404f",
            "role_name": "CanGetEntitlementsForAnyUserAtOneBank",
            "bank_id": "GENODEM1GLS"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20050: Current User is not a Super Admin!",
        "OBP-30212: EntitlementId not found",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Scope",
        "Role",
        "Entitlement",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                },
                "scope_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/consumers/CONSUMER_ID/scopes"
    },
    {
      "operation_id": "OBPv1.2.1-updateWhereTagForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateWhereTagForViewOnTransaction"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where",
      "summary": "更新where标记。",
      "description": "<p>在<a href=\"#1_2_1-getViewsForBankAccount\">视图中</a>更新事务TRANSACTION_ID上的“ where”地理标签。 </p><p>身份验证是强制性的</p><p>地理位置标记与用户链接。 </p>",
      "description_markdown": "Updates the \"where\" Geo tag on a transaction TRANSACTION_ID in a [view](#1_2_1-getViewsForBankAccount).\n\nAuthentication is Mandatory\n\nThe geo tag is linked with the user.",
      "example_request_body": {
        "where": {
          "latitude": 1.532,
          "longitude": 1.535
        }
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-30022: The current view does not have the permission: ",
        "Coordinates not possible",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "where": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/where"
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerCreditRatingAndSource",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerCreditRatingAndSource"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/credit-rating-and-source",
      "summary": "更新客户的信用等级和来源",
      "description": "<p>更新CUSTOMER_ID指定的客户的信用等级和来源。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Update the credit rating and source of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "credit_rating": "Good",
        "credit_source": "Bank"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "eveline@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "2017-09-18T22:00:00Z"
        },
        "date_of_birth": "2017-09-18T22:00:00Z",
        "relationship_status": "single",
        "dependants": 10,
        "dob_of_dependants": [
          "2017-09-18T22:00:00Z"
        ],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "10"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2017-09-18T22:00:00Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "credit_source": {
            "type": "string"
          },
          "credit_rating": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "employment_status": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "rating": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "dependants": {
            "type": "integer"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerCreditRatingAndSource",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/credit-rating-and-source"
    },
    {
      "operation_id": "OBPv3.1.0-getConsumersForCurrentUser",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getConsumersForCurrentUser"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/users/current/consumers",
      "summary": "吸引消费者（登录用户）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Get the Consumers for logged in User.\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "consumers": [
          {
            "consumer_id": "8e716299-4668-4efd-976a-67f57a9984ec",
            "app_name": "SOFI",
            "app_type": "Web",
            "description": "Account Management",
            "developer_email": "eveline@example.com",
            "redirect_url": "www.openbankproject.com",
            "created_by_user": {
              "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
              "email": "eveline@example.com",
              "provider_id": "Chris",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            },
            "enabled": true,
            "created": "2017-09-18T22:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Consumer",
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consumers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "app_name": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "created_by_user": {
                  "type": "object",
                  "properties": {
                    "provider": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider_id": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  }
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "consumer_id": {
                  "type": "string"
                },
                "developer_email": {
                  "type": "string"
                },
                "redirect_url": {
                  "type": "string"
                },
                "app_type": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/users/current/consumers"
    },
    {
      "operation_id": "OBPv3.1.0-getCardsForBank",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCardsForBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/cards",
      "summary": "获取指定银行的卡",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Should be able to filter on the following fields\n\neg:/management/banks/BANK_ID/cards?customer_id=66214b8e-259e-44ad-8868-3eb47be70646$account_id=8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0\n\n1 customer_id should be valid customer_id, otherwise, it will return an empty card list.  \n\n2 account_id should be valid account_id , otherwise, it will return an empty card list.  \n\n\n${authenticationRequiredMessage(true)}",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "cards": [
          {
            "card_id": "36f8a9e6-c2b1-407a-8bd0-421b7119307e ",
            "bank_id": "GENODEM1GLS",
            "card_number": "364435172576215",
            "card_type": "Credit",
            "name_on_card": "SusanSmith",
            "issue_number": "1",
            "serial_number": "1324234",
            "valid_from_date": "2017-09-18T22:00:00Z",
            "expires_date": "2017-09-18T22:00:00Z",
            "enabled": true,
            "cancelled": true,
            "on_hot_list": true,
            "technology": "technologyString1",
            "networks": [
              "networks1"
            ],
            "allows": [
              "credit",
              "debit"
            ],
            "account": {
              "id": "123",
              "label": "OBP",
              "views_available": [
                {
                  "id": "123",
                  "short_name": "short_name",
                  "description": "description",
                  "is_public": true,
                  "alias": "None",
                  "hide_metadata_if_alias_used": true,
                  "can_add_comment": true,
                  "can_add_corporate_location": true,
                  "can_add_image": true,
                  "can_add_image_url": true,
                  "can_add_more_info": true,
                  "can_add_open_corporates_url": true,
                  "can_add_physical_location": true,
                  "can_add_private_alias": true,
                  "can_add_public_alias": true,
                  "can_add_tag": true,
                  "can_add_url": true,
                  "can_add_where_tag": true,
                  "can_delete_comment": true,
                  "can_delete_corporate_location": true,
                  "can_delete_image": true,
                  "can_delete_physical_location": true,
                  "can_delete_tag": true,
                  "can_delete_where_tag": true,
                  "can_edit_owner_comment": true,
                  "can_see_bank_account_balance": true,
                  "can_see_bank_account_bank_name": true,
                  "can_see_bank_account_currency": true,
                  "can_see_bank_account_iban": true,
                  "can_see_bank_account_label": true,
                  "can_see_bank_account_national_identifier": true,
                  "can_see_bank_account_number": true,
                  "can_see_bank_account_owners": true,
                  "can_see_bank_account_swift_bic": true,
                  "can_see_bank_account_type": true,
                  "can_see_comments": true,
                  "can_see_corporate_location": true,
                  "can_see_image_url": true,
                  "can_see_images": true,
                  "can_see_more_info": true,
                  "can_see_open_corporates_url": true,
                  "can_see_other_account_bank_name": true,
                  "can_see_other_account_iban": true,
                  "can_see_other_account_kind": true,
                  "can_see_other_account_metadata": true,
                  "can_see_other_account_national_identifier": true,
                  "can_see_other_account_number": true,
                  "can_see_other_account_swift_bic": true,
                  "can_see_owner_comment": true,
                  "can_see_physical_location": true,
                  "can_see_private_alias": true,
                  "can_see_public_alias": true,
                  "can_see_tags": true,
                  "can_see_transaction_amount": true,
                  "can_see_transaction_balance": true,
                  "can_see_transaction_currency": true,
                  "can_see_transaction_description": true,
                  "can_see_transaction_finish_date": true,
                  "can_see_transaction_metadata": true,
                  "can_see_transaction_other_bank_account": true,
                  "can_see_transaction_start_date": true,
                  "can_see_transaction_this_bank_account": true,
                  "can_see_transaction_type": true,
                  "can_see_url": true,
                  "can_see_where_tag": true
                }
              ],
              "bank_id": "GENODEM1GLS"
            },
            "replacement": {
              "requested_date": "2017-09-18T22:00:00Z",
              "reason_requested": "RENEW"
            },
            "pin_reset": [
              {
                "requested_date": "2017-09-18T22:00:00Z",
                "reason_requested": "FORGOT"
              }
            ],
            "collected": "2017-09-18T22:00:00Z",
            "posted": "2017-09-18T22:00:00Z",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Card"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "cards": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "card_number": {
                  "type": "string"
                },
                "valid_from_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "enabled": {
                  "type": "boolean"
                },
                "allows": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pin_reset": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "reason_requested": {
                        "type": "string"
                      },
                      "requested_date": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "replacement": {
                  "type": "object",
                  "properties": {
                    "reason_requested": {
                      "type": "string"
                    },
                    "requested_date": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "on_hot_list": {
                  "type": "boolean"
                },
                "card_type": {
                  "type": "string"
                },
                "name_on_card": {
                  "type": "string"
                },
                "expires_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "technology": {
                  "type": "string"
                },
                "customer_id": {
                  "type": "string"
                },
                "posted": {
                  "type": "string",
                  "format": "date-time"
                },
                "card_id": {
                  "type": "string"
                },
                "collected": {
                  "type": "string",
                  "format": "date-time"
                },
                "issue_number": {
                  "type": "string"
                },
                "serial_number": {
                  "type": "string"
                },
                "cancelled": {
                  "type": "boolean"
                },
                "account": {
                  "type": "object",
                  "properties": {
                    "bank_id": {
                      "type": "string"
                    },
                    "views_available": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "can_see_other_account_swift_bic": {
                            "type": "boolean"
                          },
                          "can_see_where_tag": {
                            "type": "boolean"
                          },
                          "can_see_url": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_swift_bic": {
                            "type": "boolean"
                          },
                          "can_see_tags": {
                            "type": "boolean"
                          },
                          "can_see_transaction_balance": {
                            "type": "boolean"
                          },
                          "can_delete_corporate_location": {
                            "type": "boolean"
                          },
                          "can_add_image_url": {
                            "type": "boolean"
                          },
                          "can_see_public_alias": {
                            "type": "boolean"
                          },
                          "can_add_comment": {
                            "type": "boolean"
                          },
                          "description": {
                            "type": "string"
                          },
                          "can_see_corporate_location": {
                            "type": "boolean"
                          },
                          "can_see_other_account_bank_name": {
                            "type": "boolean"
                          },
                          "can_see_more_info": {
                            "type": "boolean"
                          },
                          "can_see_physical_location": {
                            "type": "boolean"
                          },
                          "can_edit_owner_comment": {
                            "type": "boolean"
                          },
                          "can_see_private_alias": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_balance": {
                            "type": "boolean"
                          },
                          "can_add_public_alias": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_owners": {
                            "type": "boolean"
                          },
                          "can_see_other_account_metadata": {
                            "type": "boolean"
                          },
                          "can_delete_physical_location": {
                            "type": "boolean"
                          },
                          "hide_metadata_if_alias_used": {
                            "type": "boolean"
                          },
                          "can_see_transaction_this_bank_account": {
                            "type": "boolean"
                          },
                          "can_see_image_url": {
                            "type": "boolean"
                          },
                          "can_see_transaction_type": {
                            "type": "boolean"
                          },
                          "can_see_images": {
                            "type": "boolean"
                          },
                          "can_see_transaction_amount": {
                            "type": "boolean"
                          },
                          "can_see_transaction_metadata": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "can_see_comments": {
                            "type": "boolean"
                          },
                          "can_see_other_account_iban": {
                            "type": "boolean"
                          },
                          "can_add_image": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_type": {
                            "type": "boolean"
                          },
                          "can_see_other_account_kind": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_currency": {
                            "type": "boolean"
                          },
                          "can_add_where_tag": {
                            "type": "boolean"
                          },
                          "can_see_transaction_start_date": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_label": {
                            "type": "boolean"
                          },
                          "can_add_private_alias": {
                            "type": "boolean"
                          },
                          "can_see_transaction_currency": {
                            "type": "boolean"
                          },
                          "can_add_more_info": {
                            "type": "boolean"
                          },
                          "can_delete_comment": {
                            "type": "boolean"
                          },
                          "can_see_transaction_other_bank_account": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_number": {
                            "type": "boolean"
                          },
                          "can_add_corporate_location": {
                            "type": "boolean"
                          },
                          "can_add_url": {
                            "type": "boolean"
                          },
                          "short_name": {
                            "type": "string"
                          },
                          "can_delete_where_tag": {
                            "type": "boolean"
                          },
                          "is_public": {
                            "type": "boolean"
                          },
                          "can_see_owner_comment": {
                            "type": "boolean"
                          },
                          "can_see_transaction_finish_date": {
                            "type": "boolean"
                          },
                          "can_see_open_corporates_url": {
                            "type": "boolean"
                          },
                          "can_add_physical_location": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_iban": {
                            "type": "boolean"
                          },
                          "can_see_other_account_national_identifier": {
                            "type": "boolean"
                          },
                          "can_delete_image": {
                            "type": "boolean"
                          },
                          "can_add_tag": {
                            "type": "boolean"
                          },
                          "can_add_open_corporates_url": {
                            "type": "boolean"
                          },
                          "can_delete_tag": {
                            "type": "boolean"
                          },
                          "can_see_transaction_description": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_national_identifier": {
                            "type": "boolean"
                          },
                          "can_see_other_account_number": {
                            "type": "boolean"
                          },
                          "can_see_bank_account_bank_name": {
                            "type": "boolean"
                          },
                          "alias": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "label": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "networks": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/banks/BANK_ID/cards"
    },
    {
      "operation_id": "OBPv2.0.0-getSocialMediaHandles",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "getSocialMediaHandles"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/customers/CUSTOMER_ID/social_media_handles",
      "summary": "获取客户社交媒体句柄",
      "description": "<p>获取由CUSTOMER_ID指定的客户的社交媒体句柄。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get social media handles for a customer specified by CUSTOMER_ID.\n\nAuthentication is Mandatory",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "checks": [
          {
            "customer_number": "5987953",
            "type": "PlaceholderString",
            "handle": "PlaceholderString",
            "date_added": "2017-09-18T22:00:00Z",
            "date_activated": "2017-09-18T22:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "checks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "customer_number": {
                  "type": "string"
                },
                "date_added": {
                  "type": "string",
                  "format": "date-time"
                },
                "handle": {
                  "type": "string"
                },
                "date_activated": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetSocialMediaHandles",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/social_media_handles"
    },
    {
      "operation_id": "OBPv3.1.0-updatedCardForBank",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updatedCardForBank"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/cards/CARD_ID",
      "summary": "更新卡",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Update Card at bank specified by CARD_ID .\nAuthentication is Mandatory\n",
      "example_request_body": {
        "card_type": "Credit",
        "name_on_card": "SusanSmith",
        "issue_number": "1",
        "serial_number": "1324234",
        "valid_from_date": "2017-09-18T22:00:00Z",
        "expires_date": "2017-09-18T22:00:00Z",
        "enabled": true,
        "technology": "technology1",
        "networks": [
          "network1",
          "network2"
        ],
        "allows": [
          "credit",
          "debit"
        ],
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "replacement": {
          "requested_date": "2017-09-18T22:00:00Z",
          "reason_requested": "RENEW"
        },
        "pin_reset": [
          {
            "requested_date": "2017-09-18T22:00:00Z",
            "reason_requested": "FORGOT"
          },
          {
            "requested_date": "2019-12-02T09:27:34Z",
            "reason_requested": "GOOD_SECURITY_PRACTICE"
          }
        ],
        "collected": "2017-09-18T22:00:00Z",
        "posted": "2017-09-18T22:00:00Z",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "success_response_body": {
        "card_id": "36f8a9e6-c2b1-407a-8bd0-421b7119307e ",
        "bank_id": "GENODEM1GLS",
        "card_number": "364435172576215",
        "card_type": "Credit",
        "name_on_card": "SusanSmith",
        "issue_number": "1",
        "serial_number": "1324234",
        "valid_from_date": "2017-09-18T22:00:00Z",
        "expires_date": "2017-09-18T22:00:00Z",
        "enabled": true,
        "cancelled": true,
        "on_hot_list": true,
        "technology": "technologyString1",
        "networks": [
          "networks1"
        ],
        "allows": [
          "credit",
          "debit"
        ],
        "account": {
          "id": "123",
          "label": "OBP",
          "views_available": [
            {
              "id": "123",
              "short_name": "short_name",
              "description": "description",
              "is_public": true,
              "alias": "None",
              "hide_metadata_if_alias_used": true,
              "can_add_comment": true,
              "can_add_corporate_location": true,
              "can_add_image": true,
              "can_add_image_url": true,
              "can_add_more_info": true,
              "can_add_open_corporates_url": true,
              "can_add_physical_location": true,
              "can_add_private_alias": true,
              "can_add_public_alias": true,
              "can_add_tag": true,
              "can_add_url": true,
              "can_add_where_tag": true,
              "can_delete_comment": true,
              "can_delete_corporate_location": true,
              "can_delete_image": true,
              "can_delete_physical_location": true,
              "can_delete_tag": true,
              "can_delete_where_tag": true,
              "can_edit_owner_comment": true,
              "can_see_bank_account_balance": true,
              "can_see_bank_account_bank_name": true,
              "can_see_bank_account_currency": true,
              "can_see_bank_account_iban": true,
              "can_see_bank_account_label": true,
              "can_see_bank_account_national_identifier": true,
              "can_see_bank_account_number": true,
              "can_see_bank_account_owners": true,
              "can_see_bank_account_swift_bic": true,
              "can_see_bank_account_type": true,
              "can_see_comments": true,
              "can_see_corporate_location": true,
              "can_see_image_url": true,
              "can_see_images": true,
              "can_see_more_info": true,
              "can_see_open_corporates_url": true,
              "can_see_other_account_bank_name": true,
              "can_see_other_account_iban": true,
              "can_see_other_account_kind": true,
              "can_see_other_account_metadata": true,
              "can_see_other_account_national_identifier": true,
              "can_see_other_account_number": true,
              "can_see_other_account_swift_bic": true,
              "can_see_owner_comment": true,
              "can_see_physical_location": true,
              "can_see_private_alias": true,
              "can_see_public_alias": true,
              "can_see_tags": true,
              "can_see_transaction_amount": true,
              "can_see_transaction_balance": true,
              "can_see_transaction_currency": true,
              "can_see_transaction_description": true,
              "can_see_transaction_finish_date": true,
              "can_see_transaction_metadata": true,
              "can_see_transaction_other_bank_account": true,
              "can_see_transaction_start_date": true,
              "can_see_transaction_this_bank_account": true,
              "can_see_transaction_type": true,
              "can_see_url": true,
              "can_see_where_tag": true
            }
          ],
          "bank_id": "GENODEM1GLS"
        },
        "replacement": {
          "requested_date": "2017-09-18T22:00:00Z",
          "reason_requested": "RENEW"
        },
        "pin_reset": [
          {
            "requested_date": "2017-09-18T22:00:00Z",
            "reason_requested": "FORGOT"
          }
        ],
        "collected": "2017-09-18T22:00:00Z",
        "posted": "2017-09-18T22:00:00Z",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10015: Allowed values are: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Card"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "valid_from_date": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "allows": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "technology": {
            "type": "string"
          },
          "replacement": {
            "type": "object",
            "properties": {
              "reason_requested": {
                "type": "string"
              },
              "requested_date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "card_type": {
            "type": "string"
          },
          "name_on_card": {
            "type": "string"
          },
          "expires_date": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "pin_reset": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "reason_requested": {
                  "type": "string"
                },
                "requested_date": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "posted": {
            "type": "string",
            "format": "date-time"
          },
          "networks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "collected": {
            "type": "string",
            "format": "date-time"
          },
          "issue_number": {
            "type": "string"
          },
          "serial_number": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "card_number": {
            "type": "string"
          },
          "valid_from_date": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "allows": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pin_reset": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "reason_requested": {
                  "type": "string"
                },
                "requested_date": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "replacement": {
            "type": "object",
            "properties": {
              "reason_requested": {
                "type": "string"
              },
              "requested_date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "on_hot_list": {
            "type": "boolean"
          },
          "card_type": {
            "type": "string"
          },
          "name_on_card": {
            "type": "string"
          },
          "expires_date": {
            "type": "string",
            "format": "date-time"
          },
          "technology": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "posted": {
            "type": "string",
            "format": "date-time"
          },
          "card_id": {
            "type": "string"
          },
          "collected": {
            "type": "string",
            "format": "date-time"
          },
          "issue_number": {
            "type": "string"
          },
          "serial_number": {
            "type": "string"
          },
          "cancelled": {
            "type": "boolean"
          },
          "account": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "views_available": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "can_see_other_account_swift_bic": {
                      "type": "boolean"
                    },
                    "can_see_where_tag": {
                      "type": "boolean"
                    },
                    "can_see_url": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_swift_bic": {
                      "type": "boolean"
                    },
                    "can_see_tags": {
                      "type": "boolean"
                    },
                    "can_see_transaction_balance": {
                      "type": "boolean"
                    },
                    "can_delete_corporate_location": {
                      "type": "boolean"
                    },
                    "can_add_image_url": {
                      "type": "boolean"
                    },
                    "can_see_public_alias": {
                      "type": "boolean"
                    },
                    "can_add_comment": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    },
                    "can_see_corporate_location": {
                      "type": "boolean"
                    },
                    "can_see_other_account_bank_name": {
                      "type": "boolean"
                    },
                    "can_see_more_info": {
                      "type": "boolean"
                    },
                    "can_see_physical_location": {
                      "type": "boolean"
                    },
                    "can_edit_owner_comment": {
                      "type": "boolean"
                    },
                    "can_see_private_alias": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_balance": {
                      "type": "boolean"
                    },
                    "can_add_public_alias": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_owners": {
                      "type": "boolean"
                    },
                    "can_see_other_account_metadata": {
                      "type": "boolean"
                    },
                    "can_delete_physical_location": {
                      "type": "boolean"
                    },
                    "hide_metadata_if_alias_used": {
                      "type": "boolean"
                    },
                    "can_see_transaction_this_bank_account": {
                      "type": "boolean"
                    },
                    "can_see_image_url": {
                      "type": "boolean"
                    },
                    "can_see_transaction_type": {
                      "type": "boolean"
                    },
                    "can_see_images": {
                      "type": "boolean"
                    },
                    "can_see_transaction_amount": {
                      "type": "boolean"
                    },
                    "can_see_transaction_metadata": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "can_see_comments": {
                      "type": "boolean"
                    },
                    "can_see_other_account_iban": {
                      "type": "boolean"
                    },
                    "can_add_image": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_type": {
                      "type": "boolean"
                    },
                    "can_see_other_account_kind": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_currency": {
                      "type": "boolean"
                    },
                    "can_add_where_tag": {
                      "type": "boolean"
                    },
                    "can_see_transaction_start_date": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_label": {
                      "type": "boolean"
                    },
                    "can_add_private_alias": {
                      "type": "boolean"
                    },
                    "can_see_transaction_currency": {
                      "type": "boolean"
                    },
                    "can_add_more_info": {
                      "type": "boolean"
                    },
                    "can_delete_comment": {
                      "type": "boolean"
                    },
                    "can_see_transaction_other_bank_account": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_number": {
                      "type": "boolean"
                    },
                    "can_add_corporate_location": {
                      "type": "boolean"
                    },
                    "can_add_url": {
                      "type": "boolean"
                    },
                    "short_name": {
                      "type": "string"
                    },
                    "can_delete_where_tag": {
                      "type": "boolean"
                    },
                    "is_public": {
                      "type": "boolean"
                    },
                    "can_see_owner_comment": {
                      "type": "boolean"
                    },
                    "can_see_transaction_finish_date": {
                      "type": "boolean"
                    },
                    "can_see_open_corporates_url": {
                      "type": "boolean"
                    },
                    "can_add_physical_location": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_iban": {
                      "type": "boolean"
                    },
                    "can_see_other_account_national_identifier": {
                      "type": "boolean"
                    },
                    "can_delete_image": {
                      "type": "boolean"
                    },
                    "can_add_tag": {
                      "type": "boolean"
                    },
                    "can_add_open_corporates_url": {
                      "type": "boolean"
                    },
                    "can_delete_tag": {
                      "type": "boolean"
                    },
                    "can_see_transaction_description": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_national_identifier": {
                      "type": "boolean"
                    },
                    "can_see_other_account_number": {
                      "type": "boolean"
                    },
                    "can_see_bank_account_bank_name": {
                      "type": "boolean"
                    },
                    "alias": {
                      "type": "string"
                    }
                  }
                }
              },
              "label": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "networks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateCardsForBank",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/banks/BANK_ID/cards/CARD_ID"
    },
    {
      "operation_id": "OBPv3.0.0-getUserByUsername",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getUserByUsername"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/users/username/USERNAME",
      "summary": "通过USERNAME获取用户",
      "description": "<p>通过USERNAME获取用户</p><p>身份验证是强制性的</p><p>必须具有CanGetAnyUser授权， </p>",
      "description_markdown": "Get user by USERNAME\n\nAuthentication is Mandatory\n\nCanGetAnyUser entitlement is required,\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "users": [
          {
            "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "email": "eveline@example.com",
            "provider_id": "Chris",
            "provider": "http://127.0.0.1:8080",
            "username": "felixsmith",
            "entitlements": {
              "list": [
                {
                  "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
                  "role_name": "CanQueryOtherUser",
                  "bank_id": "GENODEM1GLS"
                }
              ]
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-20027: User not found by username.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "entitlements": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "bank_id": {
                            "type": "string"
                          },
                          "role_name": {
                            "type": "string"
                          },
                          "entitlement_id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "provider": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "provider_id": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetAnyUser",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/username/USERNAME"
    },
    {
      "operation_id": "OBPv3.0.0-getViewsForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getViewsForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/views",
      "summary": "获取帐户视图。",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "#Views\n\n\nViews in Open Bank Project provide a mechanism for fine grained access control and delegation to Accounts and Transactions. Account holders use the 'owner' view by default. Delegated access is made through other views for example 'accountants', 'share-holders' or 'tagging-application'. Views can be created via the API and each view has a list of entitlements.\n\nViews on accounts and transactions filter the underlying data to redact certain fields for certain users. For instance the balance on an account may be hidden from the public. The way to know what is possible on a view is determined in the following JSON.\n\n**Data:** When a view moderates a set of data, some fields my contain the value `null` rather than the original value. This indicates either that the user is not allowed to see the original data or the field is empty.\n\nThere is currently one exception to this rule; the 'holder' field in the JSON contains always a value which is either an alias or the real name - indicated by the 'is_alias' field.\n\n**Action:** When a user performs an action like trying to post a comment (with POST API call), if he is not allowed, the body response will contain an error message.\n\n**Metadata:**\nTransaction metadata (like images, tags, comments, etc.) will appears *ONLY* on the view where they have been created e.g. comments posted to the public view only appear on the public view.\n\nThe other account metadata fields (like image_URL, more_info, etc.) are unique through all the views. Example, if a user edits the 'more_info' field in the 'team' view, then the view 'authorities' will show the new value (if it is allowed to do it).\n\n# All\n*Optional*\n\nReturns the list of the views created for account ACCOUNT_ID at BANK_ID.\n\nAuthentication is Mandatory and the user needs to have access to the owner view.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "views": [
          {
            "id": "1234",
            "short_name": "short_name",
            "description": "description",
            "metadata_view": "owner",
            "is_public": true,
            "alias": "No",
            "hide_metadata_if_alias_used": true,
            "can_add_comment": true,
            "can_add_corporate_location": true,
            "can_add_image": true,
            "can_add_image_url": true,
            "can_add_more_info": true,
            "can_add_open_corporates_url": true,
            "can_add_physical_location": true,
            "can_add_private_alias": true,
            "can_add_public_alias": true,
            "can_add_tag": true,
            "can_add_url": true,
            "can_add_where_tag": true,
            "can_delete_comment": true,
            "can_add_counterparty": true,
            "can_delete_corporate_location": true,
            "can_delete_image": true,
            "can_delete_physical_location": true,
            "can_delete_tag": true,
            "can_delete_where_tag": true,
            "can_edit_owner_comment": true,
            "can_see_bank_account_balance": true,
            "can_query_available_funds": true,
            "can_see_bank_account_bank_name": true,
            "can_see_bank_account_currency": true,
            "can_see_bank_account_iban": true,
            "can_see_bank_account_label": true,
            "can_see_bank_account_national_identifier": true,
            "can_see_bank_account_number": true,
            "can_see_bank_account_owners": true,
            "can_see_bank_account_swift_bic": true,
            "can_see_bank_account_type": true,
            "can_see_comments": true,
            "can_see_corporate_location": true,
            "can_see_image_url": true,
            "can_see_images": true,
            "can_see_more_info": true,
            "can_see_open_corporates_url": true,
            "can_see_other_account_bank_name": true,
            "can_see_other_account_iban": true,
            "can_see_other_account_kind": true,
            "can_see_other_account_metadata": true,
            "can_see_other_account_national_identifier": true,
            "can_see_other_account_number": true,
            "can_see_other_account_swift_bic": true,
            "can_see_owner_comment": true,
            "can_see_physical_location": true,
            "can_see_private_alias": true,
            "can_see_public_alias": true,
            "can_see_tags": true,
            "can_see_transaction_amount": true,
            "can_see_transaction_balance": true,
            "can_see_transaction_currency": true,
            "can_see_transaction_description": true,
            "can_see_transaction_finish_date": true,
            "can_see_transaction_metadata": true,
            "can_see_transaction_other_bank_account": true,
            "can_see_transaction_start_date": true,
            "can_see_transaction_this_bank_account": true,
            "can_see_transaction_type": true,
            "can_see_url": true,
            "can_see_where_tag": true,
            "can_see_bank_routing_scheme": true,
            "can_see_bank_routing_address": true,
            "can_see_bank_account_routing_scheme": true,
            "can_see_bank_account_routing_address": true,
            "can_see_other_bank_routing_scheme": true,
            "can_see_other_bank_routing_address": true,
            "can_see_other_account_routing_scheme": true,
            "can_see_other_account_routing_address": true,
            "can_add_transaction_request_to_own_account": true,
            "can_add_transaction_request_to_any_account": true,
            "can_see_bank_account_credit_limit": true,
            "can_create_direct_debit": true,
            "can_create_standing_order": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "View",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "views": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "can_see_other_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_where_tag": {
                  "type": "boolean"
                },
                "can_see_url": {
                  "type": "boolean"
                },
                "can_create_direct_debit": {
                  "type": "boolean"
                },
                "can_see_bank_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_bank_account_routing_address": {
                  "type": "boolean"
                },
                "can_see_tags": {
                  "type": "boolean"
                },
                "can_see_transaction_balance": {
                  "type": "boolean"
                },
                "can_delete_corporate_location": {
                  "type": "boolean"
                },
                "can_add_image_url": {
                  "type": "boolean"
                },
                "can_see_public_alias": {
                  "type": "boolean"
                },
                "can_add_transaction_request_to_own_account": {
                  "type": "boolean"
                },
                "can_add_comment": {
                  "type": "boolean"
                },
                "can_see_other_bank_routing_scheme": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "can_see_corporate_location": {
                  "type": "boolean"
                },
                "can_see_other_account_bank_name": {
                  "type": "boolean"
                },
                "can_see_more_info": {
                  "type": "boolean"
                },
                "can_add_counterparty": {
                  "type": "boolean"
                },
                "can_see_physical_location": {
                  "type": "boolean"
                },
                "can_query_available_funds": {
                  "type": "boolean"
                },
                "can_edit_owner_comment": {
                  "type": "boolean"
                },
                "can_see_private_alias": {
                  "type": "boolean"
                },
                "can_see_bank_account_credit_limit": {
                  "type": "boolean"
                },
                "can_see_other_account_routing_address": {
                  "type": "boolean"
                },
                "can_see_bank_account_balance": {
                  "type": "boolean"
                },
                "can_add_public_alias": {
                  "type": "boolean"
                },
                "can_see_bank_routing_scheme": {
                  "type": "boolean"
                },
                "can_see_bank_account_owners": {
                  "type": "boolean"
                },
                "can_see_other_account_metadata": {
                  "type": "boolean"
                },
                "can_delete_physical_location": {
                  "type": "boolean"
                },
                "hide_metadata_if_alias_used": {
                  "type": "boolean"
                },
                "can_see_transaction_this_bank_account": {
                  "type": "boolean"
                },
                "can_see_image_url": {
                  "type": "boolean"
                },
                "can_see_transaction_type": {
                  "type": "boolean"
                },
                "can_see_images": {
                  "type": "boolean"
                },
                "can_see_transaction_amount": {
                  "type": "boolean"
                },
                "metadata_view": {
                  "type": "string"
                },
                "can_see_transaction_metadata": {
                  "type": "boolean"
                },
                "can_see_comments": {
                  "type": "boolean"
                },
                "can_see_other_account_iban": {
                  "type": "boolean"
                },
                "can_add_image": {
                  "type": "boolean"
                },
                "can_see_bank_account_routing_scheme": {
                  "type": "boolean"
                },
                "can_see_bank_account_type": {
                  "type": "boolean"
                },
                "can_see_other_account_kind": {
                  "type": "boolean"
                },
                "can_see_bank_account_currency": {
                  "type": "boolean"
                },
                "can_add_where_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_start_date": {
                  "type": "boolean"
                },
                "can_see_bank_account_label": {
                  "type": "boolean"
                },
                "can_add_private_alias": {
                  "type": "boolean"
                },
                "can_see_transaction_currency": {
                  "type": "boolean"
                },
                "can_add_more_info": {
                  "type": "boolean"
                },
                "can_delete_comment": {
                  "type": "boolean"
                },
                "can_create_standing_order": {
                  "type": "boolean"
                },
                "can_see_other_bank_routing_address": {
                  "type": "boolean"
                },
                "can_see_transaction_other_bank_account": {
                  "type": "boolean"
                },
                "can_see_bank_account_number": {
                  "type": "boolean"
                },
                "can_add_corporate_location": {
                  "type": "boolean"
                },
                "alias": {
                  "type": "string"
                },
                "can_add_url": {
                  "type": "boolean"
                },
                "short_name": {
                  "type": "string"
                },
                "can_delete_where_tag": {
                  "type": "boolean"
                },
                "is_public": {
                  "type": "boolean"
                },
                "can_see_owner_comment": {
                  "type": "boolean"
                },
                "can_see_transaction_finish_date": {
                  "type": "boolean"
                },
                "can_see_open_corporates_url": {
                  "type": "boolean"
                },
                "can_add_physical_location": {
                  "type": "boolean"
                },
                "can_see_bank_account_iban": {
                  "type": "boolean"
                },
                "can_see_other_account_national_identifier": {
                  "type": "boolean"
                },
                "can_see_bank_routing_address": {
                  "type": "boolean"
                },
                "can_delete_image": {
                  "type": "boolean"
                },
                "can_add_transaction_request_to_any_account": {
                  "type": "boolean"
                },
                "can_add_tag": {
                  "type": "boolean"
                },
                "id": {
                  "type": "string"
                },
                "can_see_other_account_routing_scheme": {
                  "type": "boolean"
                },
                "can_add_open_corporates_url": {
                  "type": "boolean"
                },
                "can_delete_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_description": {
                  "type": "boolean"
                },
                "can_see_bank_account_national_identifier": {
                  "type": "boolean"
                },
                "can_see_other_account_number": {
                  "type": "boolean"
                },
                "can_see_bank_account_bank_name": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/views"
    },
    {
      "operation_id": "OBPv3.1.0-getProductCollection",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getProductCollection"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/product-collections/COLLECTION_CODE",
      "summary": "获取产品集合",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Returns information about the financial Product Collection specified by BANK_ID and COLLECTION_CODE:\n\n          ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "collection_code": "A",
        "products": [
          {
            "bank_id": "GENODEM1GLS",
            "code": "product_code",
            "parent_product_code": "parent",
            "name": "product name",
            "category": "category",
            "family": "family",
            "super_family": "super family",
            "more_info_url": "www.example.com/prod1/more-info.html",
            "details": "Details",
            "description": "Description",
            "meta": {
              "license": {
                "id": "5",
                "name": "TESOBE"
              }
            },
            "product_attributes": [
              {
                "product_code": "saving1",
                "product_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
                "name": "OVERDRAFT_START_DATE",
                "type": "DATE_WITH_DAY",
                "value": "2012-04-23"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Product-Collection",
        "Product"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "super_family": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "string"
                },
                "product_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "product_attribute_id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "product_code": {
                        "type": "string"
                      }
                    }
                  }
                },
                "description": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "parent_product_code": {
                  "type": "string"
                },
                "more_info_url": {
                  "type": "string"
                },
                "family": {
                  "type": "string"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "license": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "name": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                }
              }
            }
          },
          "collection_code": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/product-collections/COLLECTION_CODE"
    },
    {
      "operation_id": "OBPv3.1.0-getAdapterInfo",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getAdapterInfo"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/adapter",
      "summary": "获取适配器信息",
      "description": "<p>获取有关适配器的基本信息。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get basic information about the Adapter.\n\nAuthentication is Mandatory\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "name": "String",
        "version": "String",
        "git_commit": "String",
        "date": "2013-01-21T23:08:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "git_commit": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/adapter"
    },
    {
      "operation_id": "OBPv3.1.0-getMetricsTopConsumers",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getMetricsTopConsumers"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/metrics/top-consumers",
      "summary": "获得顶级消费者",
      "description": "<p>获取有关API使用量最大消费方的指标，例如总数，消费者ID和app_name。 </p><p>应该能够过滤以下字段</p><p>例如：/management/metrics/top-consumers?from_date=2017-09-19T02:31:05.000Z&amp;to_date=2017-05-22T01:02:03.000Z&amp;consumer_id=5 <br /> ＆user_id = 66214b8e-259e-44ad-8868-3eb47be70646＆implemented_by_partial_function = getTransactionsForBankAccount <br /> ＆implemented_in_version = v3.0.0＆url = / obp / v3.0.0 / banks / gh.29.uk / accounts / 8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0 / owner / transactions <br /> ＆verb = GET＆anon = false＆app_name = MapperPostman <br /> ＆exclude_app_names = API-EXPLORER，API-Manager，SOFI，空<br /> ＆limit = 100 </p><p> 1个from_date（默认为当前日期的前一天）：例如：from_date = 2017-09-19T02：31：05.000Z </p><p> 2 to_date（默认为当前日期），例如：to_date = 2017-09-19T02：31：05.000Z </p><p> 3 Consumer_id（如果为null，则忽略） </p><p> 4 user_id（如果为null，则忽略） </p><p> 5 anon（如果忽略null）仅支持两个值：true（返回user_id为null的位置）或false（返回user_id不为null的位置。） </p><p> 6 url（如果为null，则忽略），注意：不能包含&#39;＆&#39;。 </p><p> 7 app_name（如果为null，则忽略） </p><p> 8 Implemented_by_partial_function（如果为null，则忽略）， </p><p> 9 Implemented_in_version（如果为null则忽略） </p><p> 10个动词（如果为null，则忽略） </p><p> 11correlation_id（如果为null，则忽略） </p><p> 12个持续时间（如果忽略null）非数字字符将被忽略</p><p> 13 exclude_app_names（如果为null则忽略）。例如：＆exclude_app_names = API-EXPLORER，API-Manager，SOFI，null </p><p> 14 exclude_url_patterns（如果为null，则忽略）。您可以设计自己的SQL NOT LIKE模式。例如：＆exclude_url_patterns =％management / metrics％，％management / aggregate-metrics％ </p><p> 15 exclude_implemented_by_partial_functions（如果为null则忽略）。例如：＆exclude_implemented_by_partial_functions = getMetrics，getConnectorMetrics，getAggregateMetrics </p><p> 16个限制（用于分页：默认为50），例如：limit = 200 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get metrics about the top consumers of the API usage e.g. total count, consumer_id and app_name.\n\nShould be able to filter on the following fields\n\ne.g.: /management/metrics/top-consumers?from_date=2017-09-19T02:31:05.000Z&to_date=2017-05-22T01:02:03.000Z&consumer_id=5\n&user_id=66214b8e-259e-44ad-8868-3eb47be70646&implemented_by_partial_function=getTransactionsForBankAccount\n&implemented_in_version=v3.0.0&url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions\n&verb=GET&anon=false&app_name=MapperPostman\n&exclude_app_names=API-EXPLORER,API-Manager,SOFI,null\n&limit=100\n\n1 from_date (defaults to the day before the current date): eg:from_date=2017-09-19T02:31:05.000Z\n\n2 to_date (defaults to the current date) eg:to_date=2017-09-19T02:31:05.000Z\n\n3 consumer_id  (if null ignore)\n\n4 user_id (if null ignore)\n\n5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)\n\n6 url (if null ignore), note: can not contain '&'.\n\n7 app_name (if null ignore)\n\n8 implemented_by_partial_function (if null ignore),\n\n9 implemented_in_version (if null ignore)\n\n10 verb (if null ignore)\n\n11 correlation_id (if null ignore)\n\n12 duration (if null ignore) non digit chars will be silently omitted\n\n13 exclude_app_names (if null ignore).eg: &exclude_app_names=API-EXPLORER,API-Manager,SOFI,null\n\n14 exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE pattern. eg: &exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%\n\n15 exclude_implemented_by_partial_functions (if null ignore).eg: &exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics\n\n16 limit (for pagination: defaults to 50)  eg:limit=200\n\nAuthentication is Mandatory\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "top_consumers": [
          {
            "count": 7076,
            "consumer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "app_name": "Api Explorer",
            "developer_email": "eveline@example.com"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10016: Incorrect filter Parameters in URL. ",
        "OBP-30045: Could not get the top consumers from database.  ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Metric",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "top_consumers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "developer_email": {
                  "type": "string"
                },
                "app_name": {
                  "type": "string"
                },
                "consumer_id": {
                  "type": "string"
                },
                "count": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanReadMetrics",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/metrics/top-consumers"
    },
    {
      "operation_id": "OBPv3.1.0-unlockUser",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "unlockUser"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/users/USERNAME/lock-status",
      "summary": "解锁用户",
      "description": "<p>解锁用户。 </p><p> （也许由于多次登录尝试失败，用户已被锁定） </p><p>身份验证是强制性的</p>",
      "description_markdown": "\nUnlock a User.\n\n(Perhaps the user was locked due to multiple failed login attempts)\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "username": "felixsmith",
        "bad_attempts_since_last_success_or_reset": 0,
        "last_failure_date": "2017-09-18T22:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20027: User not found by username.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "last_failure_date": {
            "type": "string",
            "format": "date-time"
          },
          "bad_attempts_since_last_success_or_reset": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUnlockUser",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/USERNAME/lock-status"
    },
    {
      "operation_id": "OBPv2.2.0-getCurrentFxRate",
      "implemented_by": {
        "version": "OBPv2.2.0",
        "function": "getCurrentFxRate"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.2.0/banks/BANK_ID/fx/FROM_CURRENCY_CODE/TO_CURRENCY_CODE",
      "summary": "获取当前的FxRate",
      "description": "<p>获取由BANK_ID，FROM_CURRENCY_CODE和TO_CURRENCY_CODE指定的最新汇率</p><p> OBP可能会根据运行中的连接器尝试不同的FX汇率信息源。 </p><p>例如，我们要转换EUR =&gt; USD： </p><p> OBP将： <br />第一次尝试-连接器（数据库，核心银行系统或外部FX服务） <br />第2部分-第1部分-fallbackexchangerates / eur.json <br />第2次尝试第2部分-fallbackexchangerates / usd.json（使用反速率） <br />第三次尝试-外汇汇率的硬编码地图。 </p><p><img src=\"https://user-images.githubusercontent.com/485218/60005085-1eded600-966e-11e9-96fb-798b102d9ad0.png\" alt=\"外汇流量\" /></p>",
      "description_markdown": "Get the latest FX rate specified by BANK_ID, FROM_CURRENCY_CODE and TO_CURRENCY_CODE\n\nOBP may try different sources of FX rate information depending on the Connector in operation.\n\nFor example we want to convert EUR => USD:\n\nOBP will:\n1st try - Connector (database, core banking system or external FX service)\n2nd try part 1 - fallbackexchangerates/eur.json\n2nd try part 2 - fallbackexchangerates/usd.json (the inverse rate is used)\n3rd try - Hardcoded map of FX rates.\n\n![FX Flow](https://user-images.githubusercontent.com/485218/60005085-1eded600-966e-11e9-96fb-798b102d9ad0.png)\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "from_currency_code": "EUR",
        "to_currency_code": "GBP",
        "conversion_value": 1.001,
        "inverse_conversion_value": 0.998,
        "effective_date": "2017-09-18T22:00:00Z"
      },
      "error_response_bodies": [
        "OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. ",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10004: ISO Currency code combination not supported for FX. Please modify the FROM_CURRENCY_CODE or TO_CURRENCY_CODE. ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "FX",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "to_currency_code": {
            "type": "string"
          },
          "from_currency_code": {
            "type": "string"
          },
          "effective_date": {
            "type": "string",
            "format": "date-time"
          },
          "inverse_conversion_value": {
            "type": "number"
          },
          "conversion_value": {
            "type": "number"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/fx/FROM_CURRENCY_CODE/TO_CURRENCY_CODE"
    },
    {
      "operation_id": "OBPv3.0.0-getAggregateMetrics",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getAggregateMetrics"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/management/aggregate-metrics",
      "summary": "获取汇总指标",
      "description": "<p>返回有关api使用情况的汇总指标。总计数，响应时间（以毫秒为单位）等。 </p><p>应该能够过滤以下字段</p><p>例如：/ management / aggregate-metrics？from_date = 2017-09-19T02：31：05.000Z＆to_date = 2017-09-19T02：31：05.000Z＆consumer_id = 5 <br /> ＆user_id = 66214b8e-259e-44ad-8868-3eb47be70646＆implemented_by_partial_function = getTransactionsForBankAccount <br /> ＆implemented_in_version = v3.0.0＆url = / obp / v3.0.0 / banks / gh.29.uk / accounts / 8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0 / owner / transactions <br /> ＆verb = GET＆anon = false＆app_name = MapperPostman <br /> ＆exclude_app_names = API-EXPLORER，API-Manager，SOFI，空</p><p> 1个from_date（默认为当前日期的前一天）：例如：from_date = 2017-09-19T02：31：05.000Z </p><p> 2 to_date（默认为当前日期），例如：to_date = 2017-09-19T02：31：05.000Z </p><p> 3 Consumer_id（如果为null，则忽略） </p><p> 4 user_id（如果为null，则忽略） </p><p> 5 anon（如果忽略null）仅支持两个值：true（返回user_id为null的位置）或false（返回user_id不为null的位置。） </p><p> 6 url（如果为null，则忽略），注意：不能包含&#39;＆&#39;。 </p><p> 7 app_name（如果为null，则忽略） </p><p> 8 Implemented_by_partial_function（如果为null，则忽略）， </p><p> 9 Implemented_in_version（如果为null则忽略） </p><p> 10个动词（如果为null，则忽略） </p><p> 11correlation_id（如果为null，则忽略） </p><p> 12个持续时间（如果忽略null）非数字字符将被忽略</p><p> 13 exclude_app_names（如果为null则忽略）。例如：＆exclude_app_names = API-EXPLORER，API-Manager，SOFI，null </p><p> 14 exclude_url_patterns（如果为null，则忽略）。您可以设计自己的SQL NOT LIKE模式。例如：＆exclude_url_patterns =％management / metrics％，％management / aggregate-metrics％ </p><p> 15 exclude_implemented_by_partial_functions（如果为null则忽略）。例如：＆exclude_implemented_by_partial_functions = getMetrics，getConnectorMetrics，getAggregateMetrics </p><p>身份验证是强制性的</p>",
      "description_markdown": "Returns aggregate metrics on api usage eg. total count, response time (in ms), etc.\n\nShould be able to filter on the following fields\n\neg: /management/aggregate-metrics?from_date=2017-09-19T02:31:05.000Z&to_date=2017-09-19T02:31:05.000Z&consumer_id=5\n&user_id=66214b8e-259e-44ad-8868-3eb47be70646&implemented_by_partial_function=getTransactionsForBankAccount\n&implemented_in_version=v3.0.0&url=/obp/v3.0.0/banks/gh.29.uk/accounts/8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0/owner/transactions\n&verb=GET&anon=false&app_name=MapperPostman\n&exclude_app_names=API-EXPLORER,API-Manager,SOFI,null\n\n1 from_date (defaults to the day before the current date): eg:from_date=2017-09-19T02:31:05.000Z\n\n2 to_date (defaults to the current date) eg:to_date=2017-09-19T02:31:05.000Z\n\n3 consumer_id  (if null ignore)\n\n4 user_id (if null ignore)\n\n5 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)\n\n6 url (if null ignore), note: can not contain '&'.\n\n7 app_name (if null ignore)\n\n8 implemented_by_partial_function (if null ignore),\n\n9 implemented_in_version (if null ignore)\n\n10 verb (if null ignore)\n\n11 correlation_id (if null ignore)\n\n12 duration (if null ignore) non digit chars will be silently omitted\n\n13 exclude_app_names (if null ignore).eg: &exclude_app_names=API-EXPLORER,API-Manager,SOFI,null\n\n14 exclude_url_patterns (if null ignore).you can design you own SQL NOT LIKE pattern. eg: &exclude_url_patterns=%management/metrics%,%management/aggregate-metrics%\n\n15 exclude_implemented_by_partial_functions (if null ignore).eg: &exclude_implemented_by_partial_functions=getMetrics,getConnectorMetrics,getAggregateMetrics\n\nAuthentication is Mandatory\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "count": 7076,
        "average_response_time": 65.21,
        "minimum_response_time": 1.0,
        "maximum_response_time": 9039.0
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Metric",
        "Aggregate-Metrics",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "maximum_response_time": {
            "type": "number"
          },
          "minimum_response_time": {
            "type": "number"
          },
          "average_response_time": {
            "type": "number"
          },
          "count": {
            "type": "integer"
          }
        }
      },
      "roles": [
        {
          "role": "CanReadAggregateMetrics",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/aggregate-metrics"
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerAddress",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerAddress"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/addresses/CUSTOMER_ADDRESS_ID",
      "summary": "更新客户地址",
      "description": "<p>更新CUSTOMER_ADDRESS_ID指定的客户地址。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Update an Address of the Customer specified by CUSTOMER_ADDRESS_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "line_1": "No 1 the Road",
        "line_2": "The Place",
        "line_3": "The Hill",
        "city": "Berlin",
        "county": "",
        "state": "Brandenburg",
        "postcode": "13359",
        "country_code": "DE",
        "tags": [
          "mailing",
          "home"
        ],
        "status": "OK"
      },
      "success_response_body": {
        "customer_address_id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "line_1": "No 1 the Road",
        "line_2": "The Place",
        "line_3": "The Hill",
        "city": "Berlin",
        "county": "",
        "state": "Brandenburg",
        "postcode": "13359",
        "country_code": "DE",
        "tags": [
          "mailing",
          "home"
        ],
        "status": "OK",
        "insert_date": "2017-09-18T22:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postcode": {
            "type": "string"
          },
          "line_1": {
            "type": "string"
          },
          "line_2": {
            "type": "string"
          },
          "line_3": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "county": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "insert_date": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postcode": {
            "type": "string"
          },
          "line_1": {
            "type": "string"
          },
          "line_2": {
            "type": "string"
          },
          "line_3": {
            "type": "string"
          },
          "customer_address_id": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "county": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/addresses/CUSTOMER_ADDRESS_ID"
    },
    {
      "operation_id": "OBPv3.0.0-getCurrentUser",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getCurrentUser"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/users/current",
      "summary": "获取用户（当前）",
      "description": "<p>获取登录用户</p><p>身份验证是强制性的</p>",
      "description_markdown": "Get the logged in user\n\nAuthentication is Mandatory\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "email": "eveline@example.com",
        "provider_id": "Chris",
        "provider": "http://127.0.0.1:8080",
        "username": "felixsmith",
        "entitlements": {
          "list": [
            {
              "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
              "role_name": "CanQueryOtherUser",
              "bank_id": "GENODEM1GLS"
            }
          ]
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "entitlements": {
            "type": "object",
            "properties": {
              "list": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "bank_id": {
                      "type": "string"
                    },
                    "role_name": {
                      "type": "string"
                    },
                    "entitlement_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "provider": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "provider_id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/current"
    },
    {
      "operation_id": "OBPv2.2.0-getExplictCounterpartiesForAccount",
      "implemented_by": {
        "version": "OBPv2.2.0",
        "function": "getExplictCounterpartiesForAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.2.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties",
      "summary": "获取对方（明确）。",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Get the Counterparties (Explicit) for the account / view.\n\nAuthentication is Mandatory\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "counterparties": [
          {
            "name": "CounterpartyName",
            "description": "My landlord",
            "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "this_bank_id": "GENODEM1GLS",
            "this_account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "this_view_id": "owner",
            "counterparty_id": "1d65db7c-a7b2-4839-af41-958276ab7790",
            "other_bank_routing_scheme": "bankCode",
            "other_bank_routing_address": "10",
            "other_branch_routing_scheme": "branchNumber",
            "other_branch_routing_address": "10010",
            "other_account_routing_scheme": "accountNumber",
            "other_account_routing_address": "7987987-2348987-234234",
            "other_account_secondary_routing_scheme": "accountId",
            "other_account_secondary_routing_address": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0",
            "is_beneficiary": true,
            "bespoke": [
              {
                "key": "englishName",
                "value": "english Name"
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Counterparty",
        "Payment Initiation Service (PIS)",
        "Account"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "counterparties": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bespoke": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      }
                    }
                  }
                },
                "created_by_user_id": {
                  "type": "string"
                },
                "other_bank_routing_scheme": {
                  "type": "string"
                },
                "this_bank_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "other_account_secondary_routing_scheme": {
                  "type": "string"
                },
                "other_branch_routing_address": {
                  "type": "string"
                },
                "counterparty_id": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "other_account_routing_address": {
                  "type": "string"
                },
                "other_bank_routing_address": {
                  "type": "string"
                },
                "this_account_id": {
                  "type": "string"
                },
                "other_branch_routing_scheme": {
                  "type": "string"
                },
                "other_account_routing_scheme": {
                  "type": "string"
                },
                "other_account_secondary_routing_address": {
                  "type": "string"
                },
                "is_beneficiary": {
                  "type": "boolean"
                },
                "this_view_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties"
    },
    {
      "operation_id": "OBPv3.1.0-createCardAttribute",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createCardAttribute"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/cards/CARD_ID/attribute",
      "summary": "创建卡属性",
      "description": "<p>创建卡属性</p><p>卡属性用于描述带有键入的键值对列表的金融产品。 </p><p>每个卡属性都通过CARD_ID链接到其卡</p><p>类型字段必须是“ STRING”，“ INTEGER”，“ DOUBLE”或DATE_WITH_DAY”之一</p><p>身份验证是强制性的</p>",
      "description_markdown": " Create Card Attribute\n\nCard Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Card Attribute is linked to its Card by CARD_ID\n\nThe type field must be one of \"STRING\", \"INTEGER\", \"DOUBLE\" or DATE_WITH_DAY\"\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "name": "OVERDRAFT_START_DATE",
        "type": "DOUBLE",
        "value": "2012-04-23"
      },
      "success_response_body": {
        "name": "OVERDRAFT_START_DATE",
        "card_id": "36f8a9e6-c2b1-407a-8bd0-421b7119307e ",
        "attribute_type": "DOUBLE",
        "bank_id": {
          "value": "GENODEM1GLS"
        },
        "value": "2012-04-23",
        "card_attribute_id": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Card",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "attribute_type": {
            "type": "string",
            "enum": [
              "STRING",
              "INTEGER",
              "DOUBLE",
              "DATE_WITH_DAY"
            ]
          },
          "card_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "card_attribute_id": {
            "type": "string"
          },
          "bank_id": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/banks/BANK_ID/cards/CARD_ID/attribute"
    },
    {
      "operation_id": "OBPv3.1.0-getProductAttribute",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getProductAttribute"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/products/PRODUCT_CODE/attributes/PRODUCT_ATTRIBUTE_ID",
      "summary": "获取产品属性",
      "description": "<p>获取产品属性</p><p>产品属性用于描述带有类型化键值对列表的金融产品。 </p><p>每个产品属性均通过PRODUCT_CODE链接到其产品</p><p>通过其ID获得一个产品属性。 </p><p>身份验证是强制性的</p>",
      "description_markdown": " Get Product Attribute\n\n\nProduct Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Product Attribute is linked to its Product by PRODUCT_CODE\n\n\n       \n\nGet one product attribute by its id.\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "product_code": "saving1",
        "product_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "name": "OVERDRAFT_START_DATE",
        "type": "DATE_WITH_DAY",
        "value": "2012-04-23"
      },
      "error_response_bodies": [
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Product",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "product_attribute_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "product_code": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/products/PRODUCT_CODE/attributes/PRODUCT_ATTRIBUTE_ID"
    },
    {
      "operation_id": "OBPv3.1.0-getCardForBank",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCardForBank"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/cards/CARD_ID",
      "summary": "通过ID获取卡",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "\nThis will the datails of the card.\nIt shows the account infomation which linked the the card.\nAlso shows the card attributes of the card. \n\n       ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "card_id": "36f8a9e6-c2b1-407a-8bd0-421b7119307e ",
        "bank_id": "GENODEM1GLS",
        "card_number": "364435172576215",
        "card_type": "Credit",
        "name_on_card": "SusanSmith",
        "issue_number": "1",
        "serial_number": "1324234",
        "valid_from_date": "2017-09-18T22:00:00Z",
        "expires_date": "2017-09-18T22:00:00Z",
        "enabled": true,
        "cancelled": true,
        "on_hot_list": true,
        "technology": "technologyString1",
        "networks": [
          "networks1"
        ],
        "allows": [
          "credit",
          "debit"
        ],
        "account": {
          "id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
          "label": "My Account",
          "views_available": [
            {
              "id": "owner",
              "name": "Owner",
              "description": "This view is for the owner for the account."
            }
          ],
          "bank_id": "GENODEM1GLS"
        },
        "replacement": {
          "requested_date": "2017-09-18T22:00:00Z",
          "reason_requested": "RENEW"
        },
        "pin_reset": [
          {
            "requested_date": "2017-09-18T22:00:00Z",
            "reason_requested": "FORGOT"
          }
        ],
        "collected": "2017-09-18T22:00:00Z",
        "posted": "2017-09-18T22:00:00Z",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "card_attributes": [
          {
            "name": "OVERDRAFT_START_DATE",
            "card_id": "36f8a9e6-c2b1-407a-8bd0-421b7119307e ",
            "attribute_type": "STRING",
            "bank_id": {
              "value": "GENODEM1GLS"
            },
            "value": "2012-04-23",
            "card_attribute_id": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Card"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "card_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "card_id": {
                  "type": "string"
                },
                "attribute_type": {
                  "type": "string",
                  "enum": [
                    "STRING",
                    "INTEGER",
                    "DOUBLE",
                    "DATE_WITH_DAY"
                  ]
                },
                "name": {
                  "type": "string"
                },
                "card_attribute_id": {
                  "type": "string"
                },
                "bank_id": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "card_number": {
            "type": "string"
          },
          "valid_from_date": {
            "type": "string",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean"
          },
          "allows": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pin_reset": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "reason_requested": {
                  "type": "string"
                },
                "requested_date": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "replacement": {
            "type": "object",
            "properties": {
              "reason_requested": {
                "type": "string"
              },
              "requested_date": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "on_hot_list": {
            "type": "boolean"
          },
          "card_type": {
            "type": "string"
          },
          "name_on_card": {
            "type": "string"
          },
          "expires_date": {
            "type": "string",
            "format": "date-time"
          },
          "technology": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "posted": {
            "type": "string",
            "format": "date-time"
          },
          "account": {
            "type": "object",
            "properties": {
              "bank_id": {
                "type": "string"
              },
              "views_available": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              },
              "label": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "card_id": {
            "type": "string"
          },
          "collected": {
            "type": "string",
            "format": "date-time"
          },
          "issue_number": {
            "type": "string"
          },
          "serial_number": {
            "type": "string"
          },
          "cancelled": {
            "type": "boolean"
          },
          "networks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/banks/BANK_ID/cards/CARD_ID"
    },
    {
      "operation_id": "OBPv4.0.0-getCallContext",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCallContext"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/development/call_context",
      "summary": "获取当前通话的通话上下文",
      "description": "<p>获取当前通话的通话上下文。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get the Call Context of the current call.\n\nAuthentication is Mandatory\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCallContext",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/development/call_context"
    },
    {
      "operation_id": "OBPv1.2.1-getImagesForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getImagesForViewOnTransaction"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/images",
      "summary": "获取图像。",
      "description": "<p>返回在<a href=\"#1_2_1-getViewsForBankAccount\">视图</a> （VIEW_ID）上生成的交易TRANSACTION_ID图片。 <br />如果视图不是公开的，则需要通过OAuth进行身份验证。 </p>",
      "description_markdown": "Returns the transaction TRANSACTION_ID images made on a [view](#1_2_1-getViewsForBankAccount) (VIEW_ID).\n         Authentication via OAuth is required if the view is not public.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "images": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "label": "NONE",
            "URL": "www.openbankproject.com",
            "date": "2017-09-18T22:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "URL": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "display_name": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "label": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/images"
    },
    {
      "operation_id": "OBPv3.1.0-getConsents",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getConsents"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/my/consents",
      "summary": "取得同意",
      "description": "<p> OBP同意书允许同意书持有人呼叫一个或多个端点。 </p><p>必须使用SCA（严格的客户身份验证）来创建和授权同意书。 </p><p>也就是说，可以由授权用户通过OBP REST API创建同意书，但是必须通过带外（OOB）机制（例如发送到手机的代码）进行确认。 </p><p>每个同意书都具有以下状态之一：初始化，接受，拒绝，撤回，已接收，有效，撤回BYPSU，已过期，终止DBP。 </p><p>该端点获取当前用户创建的同意。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "\n\n\nAn OBP Consent allows the holder of the Consent to call one or more endpoints.\n\nConsents must be created and authorisied using SCA (Strong Customer Authentication).\n\nThat is, Consents can be created by an authorised User via the OBP REST API but they must be confirmed via an out of band (OOB) mechanism such as a code sent to a mobile phone.\n\nEach Consent has one of the following states: INITIATED, ACCEPTED, REJECTED, REVOKED, RECEIVED, VALID, REVOKEDBYPSU, EXPIRED, TERMINATEDBYTPP.\n\n\n\n      \n\n\n\nThis endpoint gets the Consents that the current User created.\n\nAuthentication is Mandatory\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "consents": [
          {
            "consent_id": "9d429899-24f5-42c8-8565-943ffa6a7945",
            "jwt": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4",
            "status": "INITIATED"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": false,
      "tags": [
        "Consent",
        "Account Information Service (AIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "consents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "jwt": {
                  "type": "string"
                },
                "consent_id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/my/consents"
    },
    {
      "operation_id": "OBPv3.1.0-getCustomerAddresses",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getCustomerAddresses"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/addresses",
      "summary": "获取客户地址",
      "description": "<p>获取由CUSTOMER_ID指定的客户地址。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Get the Addresses of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "addresses": [
          {
            "customer_address_id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
            "line_1": "No 1 the Road",
            "line_2": "The Place",
            "line_3": "The Hill",
            "city": "Berlin",
            "county": "",
            "state": "Brandenburg",
            "postcode": "13359",
            "country_code": "DE",
            "tags": [
              "mailing",
              "home"
            ],
            "status": "OK",
            "insert_date": "2017-09-18T22:00:00Z"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "KYC",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "city": {
                  "type": "string"
                },
                "insert_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "customer_id": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "postcode": {
                  "type": "string"
                },
                "line_1": {
                  "type": "string"
                },
                "line_2": {
                  "type": "string"
                },
                "line_3": {
                  "type": "string"
                },
                "customer_address_id": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "country_code": {
                  "type": "string"
                },
                "county": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetCustomerAddress",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/addresses"
    },
    {
      "operation_id": "OBPv4.0.0-createDirectDebit",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createDirectDebit"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/direct-debit",
      "summary": "创建直接借记",
      "description": "<p>为帐户创建直接借记。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Create direct debit for an account.\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "date_signed": "2017-09-18T22:00:00Z",
        "date_starts": "2017-09-18T22:00:00Z",
        "date_expires": "2017-09-18T22:00:00Z"
      },
      "success_response_body": {
        "direct_debit_id": "aa0533bd-eb22-4bff-af75-d45240361b05",
        "bank_id": "GENODEM1GLS",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "counterparty_id": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "date_signed": "2019-12-02T09:27:34Z",
        "date_starts": "2019-12-02T09:27:34Z",
        "date_expires": "2019-12-02T09:27:34Z",
        "date_cancelled": "2019-12-02T09:27:34Z",
        "active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-10001: Incorrect json format.",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-20057: User not found by userId.",
        "OBP-30017: Counterparty not found. Please specify a valid value for COUNTERPARTY_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Direct-Debit",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "date_signed": {
            "type": "string",
            "format": "date-time"
          },
          "date_cancelled": {
            "type": "string",
            "format": "date-time"
          },
          "date_expires": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "date_starts": {
            "type": "string",
            "format": "date-time"
          },
          "counterparty_id": {
            "type": "string"
          },
          "direct_debit_id": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/direct-debit"
    },
    {
      "operation_id": "OBPv2.1.0-updateConsumerRedirectUrl",
      "implemented_by": {
        "version": "OBPv2.1.0",
        "function": "updateConsumerRedirectUrl"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v2.1.0/management/consumers/CONSUMER_ID/consumer/redirect_url",
      "summary": "更新使用者RedirectUrl",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Update an existing redirectUrl for a Consumer specified by CONSUMER_ID.\n\n CONSUMER_ID can be obtained after you register the application. \n \n Or use the endpoint 'Get Consumers' to get it  \n \n       ",
      "example_request_body": {
        "redirect_url": "http://localhost:8888"
      },
      "success_response_body": {
        "consumer_id": 1213,
        "app_name": "SOFI",
        "app_type": "Web",
        "description": "Account Management",
        "developer_email": "eveline@example.com",
        "redirect_url": "www.openbankproject.com",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "created_by_user": {
          "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "email": "eveline@example.com",
          "provider_id": "Chris",
          "provider": "http://127.0.0.1:8080",
          "username": "felixsmith"
        },
        "enabled": true,
        "created": "2017-09-18T22:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Consumer",
        "API"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "redirect_url": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "app_name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "created_by_user_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_by_user": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "user_id": {
                "type": "string"
              }
            }
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "consumer_id": {
            "type": "integer"
          },
          "developer_email": {
            "type": "string"
          },
          "redirect_url": {
            "type": "string"
          },
          "app_type": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateConsumerRedirectUrl",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/consumers/CONSUMER_ID/consumer/redirect_url"
    },
    {
      "operation_id": "OBPv2.0.0-createUserCustomerLinks",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "createUserCustomerLinks"
      },
      "request_verb": "POST",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/user_customer_links",
      "summary": "创建用户客户链接。",
      "description": "<p>将用户链接到客户</p><p>身份验证是强制性的</p><p>必须具有CanCreateUserCustomerLink或CanCreateUserCustomerLinkAtAnyBank权利。 </p>",
      "description_markdown": "Link a User to a Customer\n\nAuthentication is Mandatory\n\nCanCreateUserCustomerLink OR CanCreateUserCustomerLinkAtAnyBank entitlements are required.\n",
      "example_request_body": {
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
      },
      "success_response_body": {
        "user_customer_link_id": "String",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "date_inserted": "2017-09-18T22:00:00Z",
        "is_active": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-30007: The User is already linked to a Customer at the bank specified by BANK_ID",
        "OBP-30025: Could not create user_customer_links ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "User"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user_customer_link_id": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "date_inserted": {
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateUserCustomerLink",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateUserCustomerLinkAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/user_customer_links"
    },
    {
      "operation_id": "OBPv1.2.1-updateAccountLabel",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateAccountLabel"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID",
      "summary": "更新帐户标签。",
      "description": "<p>更新帐户标签。标签是帐户所有者如何知道帐户的方式，例如“我的储蓄帐户” </p><p>身份验证是强制性的</p>",
      "description_markdown": "Update the label for the account. The label is how the account is known to the account owner e.g. 'My savings account'\n\n\nAuthentication is Mandatory\n\n       ",
      "example_request_body": {
        "id": "123123",
        "label": "label",
        "bank_id": "GENODEM1GLS"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "user does not have access to owner view on account"
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID"
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyUrl"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/url",
      "summary": "删除其他银行帐户的网址。",
      "description": "",
      "description_markdown": "",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "the view does not allow metadata access",
        "the view does not allow deleting a url",
        "URL cannot be deleted",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/url"
    },
    {
      "operation_id": "OBPv4.0.0-createTransactionRequestSepa",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "createTransactionRequestSepa"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/SEPA/transaction-requests",
      "summary": "映射（类型-&gt;字符串）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "\nSpecial instructions for SEPA:\n\nWhen using a SEPA Transaction Request, you specify the IBAN of a Counterparty in the body of the request.\nThe routing details (IBAN) of the counterparty will be forwarded to the core banking system for the transfer.\n\nInitiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\nlocalhost:8082/more?version=OBPv4.0.0&list-all-banks=false&core=&psd2=&obwg=#OBPv2_2_0-getCurrentFxRate\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\nAuthentication is Mandatory\n\n\n\n       ",
      "example_request_body": {
        "value": {
          "currency": "EUR",
          "amount": "10"
        },
        "to": {
          "iban": "123"
        },
        "description": "This is a SEPA Transaction Request",
        "charge_policy": "SHARED",
        "future_date": "20881230"
      },
      "success_response_body": {
        "id": "4050046c-63b3-4868-8a22-14b4181d33a6",
        "type": "SANDBOX_TAN",
        "from": {
          "bank_id": "GENODEM1GLS",
          "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "details": {
          "to_sandbox_tan": {
            "bank_id": "String",
            "account_id": "String"
          },
          "to_sepa": {
            "iban": "String"
          },
          "to_counterparty": {
            "counterparty_id": "String"
          },
          "to_transfer_to_phone": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "mobile_phone_number": "+44 07972 444 876"
            }
          },
          "to_transfer_to_atm": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "message": "String",
            "from": {
              "mobile_phone_number": "+44 07972 444 876",
              "nickname": "String"
            },
            "to": {
              "legal_name": "Eveline Tripman",
              "date_of_birth": "20181230",
              "mobile_phone_number": "+44 07972 444 876",
              "kyc_document": {
                "type": "String",
                "number": "String"
              }
            }
          },
          "to_transfer_to_account": {
            "value": {
              "currency": "EUR",
              "amount": "10"
            },
            "description": "String",
            "transfer_type": "String",
            "future_date": "20181230",
            "to": {
              "name": "String",
              "bank_code": "String",
              "branch_number": "String",
              "account": {
                "number": "String",
                "iban": "String"
              }
            }
          },
          "to_sepa_credit_transfers": {
            "debtorAccount": {
              "iban": "12345"
            },
            "instructedAmount": {
              "currency": "EUR",
              "amount": "10"
            },
            "creditorAccount": {
              "iban": "54321"
            },
            "creditorName": "John Miles"
          },
          "value": {
            "currency": "EUR",
            "amount": "100"
          },
          "description": "String"
        },
        "transaction_ids": [
          "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
        ],
        "status": "COMPLETED",
        "start_date": "2017-09-18T22:00:00Z",
        "end_date": "2017-09-18T22:00:00Z",
        "challenge": {
          "id": "be1a183d-b301-4b83-b855-5eeffdd3526f",
          "allowed_attempts": 3,
          "challenge_type": "SANDBOX_TAN"
        },
        "charge": {
          "summary": "Rent the flat",
          "value": {
            "currency": "EUR",
            "amount": "10"
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255.",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because you don't have access to the owner view of the from account or you don't have access to canCreateAnyTransactionRequest.",
        "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.",
        "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE",
        "OBP-10001: Incorrect json format.",
        "OBP-10002: Invalid Number. Could not convert value to a number.",
        "OBP-40008: Can't send a payment with a value of 0 or less.",
        "OBP-40003: Transaction Request Currency must be the same as From Account Currency.",
        "OBP-00003: Transaction Requests is disabled in this API instance.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Transaction-Request",
        "Payment Initiation Service (PIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "to": {
            "type": "object",
            "properties": {
              "iban": {
                "type": "string"
              }
            }
          },
          "description": {
            "type": "string"
          },
          "charge_policy": {
            "type": "string"
          },
          "future_date": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "challenge": {
            "type": "object",
            "properties": {
              "challenge_type": {
                "type": "string"
              },
              "allowed_attempts": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "string"
          },
          "charge": {
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "summary": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "properties": {
              "to_sandbox_tan": {
                "type": "object",
                "properties": {
                  "account_id": {
                    "type": "string"
                  },
                  "bank_id": {
                    "type": "string"
                  }
                }
              },
              "value": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "to_sepa": {
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string"
                  }
                }
              },
              "description": {
                "type": "string"
              },
              "to_transfer_to_atm": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "kyc_document": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      },
                      "date_of_birth": {
                        "type": "string"
                      },
                      "legal_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_sepa_credit_transfers": {
                "type": "object",
                "properties": {
                  "creditorName": {
                    "type": "string"
                  },
                  "creditorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  },
                  "instructedAmount": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "debtorAccount": {
                    "type": "object",
                    "properties": {
                      "iban": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_counterparty": {
                "type": "object",
                "properties": {
                  "counterparty_id": {
                    "type": "string"
                  }
                }
              },
              "to_transfer_to_phone": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "from": {
                    "type": "object",
                    "properties": {
                      "nickname": {
                        "type": "string"
                      },
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  },
                  "to": {
                    "type": "object",
                    "properties": {
                      "mobile_phone_number": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "to_transfer_to_account": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "object",
                    "properties": {
                      "account": {
                        "type": "object",
                        "properties": {
                          "iban": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          }
                        }
                      },
                      "branch_number": {
                        "type": "string"
                      },
                      "bank_code": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "transfer_type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      }
                    }
                  },
                  "future_date": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "string"
              },
              "bank_id": {
                "type": "string"
              }
            }
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/SEPA/transaction-requests"
    },
    {
      "operation_id": "OBPv2.2.0-getExplictCounterpartyById",
      "implemented_by": {
        "version": "OBPv2.2.0",
        "function": "getExplictCounterpartyById"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.2.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties/COUNTERPARTY_ID",
      "summary": "通过交易对手ID（明确）获取交易对手。",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Information returned about the Counterparty specified by COUNTERPARTY_ID:\n\nAuthentication is Mandatory\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "name": "CounterpartyName",
        "description": "My landlord",
        "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "this_bank_id": "GENODEM1GLS",
        "this_account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "this_view_id": "owner",
        "counterparty_id": "1d65db7c-a7b2-4839-af41-958276ab7790",
        "other_bank_routing_scheme": "bankCode",
        "other_bank_routing_address": "10",
        "other_branch_routing_scheme": "branchNumber",
        "other_branch_routing_address": "10010",
        "other_account_routing_scheme": "accountNumber",
        "other_account_routing_address": "7987987-2348987-234234",
        "other_account_secondary_routing_scheme": "accountId",
        "other_account_secondary_routing_address": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0",
        "is_beneficiary": true,
        "bespoke": [
          {
            "key": "englishName",
            "value": "english Name"
          }
        ],
        "metadata": {
          "public_alias": "String",
          "more_info": "String",
          "url": "String",
          "image_url": "String",
          "open_corporates_url": "String",
          "corporate_location": {
            "latitude": 11.45,
            "longitude": 11.45,
            "date": "2017-09-18T22:00:00Z",
            "user": {
              "id": "123",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            }
          },
          "physical_location": {
            "latitude": 11.45,
            "longitude": 11.45,
            "date": "2017-09-18T22:00:00Z",
            "user": {
              "id": "123",
              "provider": "http://127.0.0.1:8080",
              "username": "felixsmith"
            }
          },
          "private_alias": "String"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": true,
      "tags": [
        "Counterparty",
        "Payment Initiation Service (PIS)",
        "Counterparty-Metadata"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bespoke": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                }
              }
            }
          },
          "created_by_user_id": {
            "type": "string"
          },
          "other_bank_routing_scheme": {
            "type": "string"
          },
          "this_bank_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "other_account_secondary_routing_scheme": {
            "type": "string"
          },
          "other_branch_routing_address": {
            "type": "string"
          },
          "counterparty_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "other_account_routing_address": {
            "type": "string"
          },
          "other_bank_routing_address": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "private_alias": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "public_alias": {
                "type": "string"
              },
              "open_corporates_url": {
                "type": "string"
              },
              "more_info": {
                "type": "string"
              },
              "physical_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "image_url": {
                "type": "string"
              },
              "corporate_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "this_account_id": {
            "type": "string"
          },
          "other_branch_routing_scheme": {
            "type": "string"
          },
          "other_account_routing_scheme": {
            "type": "string"
          },
          "other_account_secondary_routing_address": {
            "type": "string"
          },
          "is_beneficiary": {
            "type": "boolean"
          },
          "this_view_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/counterparties/COUNTERPARTY_ID"
    },
    {
      "operation_id": "OBPv4.0.0-addTagForViewOnAccount",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "addTagForViewOnAccount"
      },
      "request_verb": "POST",
      "request_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/metadata/tags",
      "summary": "在帐户上添加标签。",
      "description": "<p>在<a href=\"#1_2_1-getViewsForBankAccount\">视图</a> VIEW_ID上发布有关帐户ACCOUNT_ID的标签。 </p><p>身份验证是强制性的</p><p>由于标签与用户链接，因此需要进行身份验证。 </p>",
      "description_markdown": "Posts a tag about an account ACCOUNT_ID on a [view](#1_2_1-getViewsForBankAccount) VIEW_ID.\n\nAuthentication is Mandatory\n\nAuthentication is required as the tag is linked with the user.",
      "example_request_body": {
        "value": "String"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "value": "OBP",
        "date": "2017-09-18T22:00:00Z",
        "user": {
          "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
          "provider": "http://127.0.0.1:8080",
          "display_name": "OBP"
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account-Metadata",
        "Account"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "display_name": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/metadata/tags"
    },
    {
      "operation_id": "OBPv3.1.0-deleteWebUiProps",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteWebUiProps"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/management/webui_props/WEB_UI_PROPS_ID",
      "summary": "删除WebUiProps",
      "description": "<p>删除由WEB_UI_PROPS_ID指定的WebUiProps。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Delete a WebUiProps specified by WEB_UI_PROPS_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "WebUi-Props",
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanDeleteWebUiProps",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/webui_props/WEB_UI_PROPS_ID"
    },
    {
      "operation_id": "OBPv3.1.0-updateAccount",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateAccount"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/accounts/ACCOUNT_ID",
      "summary": "更新账户。",
      "description": "<p>更新帐户。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Update the account. \n\nAuthentication is Mandatory\n\n       ",
      "example_request_body": {
        "label": "Label",
        "type": "CURRENT",
        "branch_id": "1234",
        "account_routing": {
          "scheme": "AccountNumber",
          "address": "4930396"
        }
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "label": "Label",
        "type": "CURRENT",
        "branch_id": "1234",
        "account_routing": {
          "scheme": "AccountNumber",
          "address": "4930396"
        }
      },
      "error_response_bodies": [
        "OBP-10001: Incorrect json format.",
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error.",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. "
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "account_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "branch_id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "account_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          },
          "account_id": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateAccount",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/banks/BANK_ID/accounts/ACCOUNT_ID"
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerData",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerData"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/data",
      "summary": "更新客户的其他数据",
      "description": "<p>更新CUSTOMER_ID指定的客户的其他数据。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Update the other data of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "face_image": {
          "url": "www.openbankproject",
          "date": "2017-09-18T22:00:00Z"
        },
        "relationship_status": "single",
        "dependants": 10,
        "highest_education_attained": "Master",
        "employment_status": "worker"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "eveline@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "2017-09-18T22:00:00Z"
        },
        "date_of_birth": "2017-09-18T22:00:00Z",
        "relationship_status": "single",
        "dependants": 10,
        "dob_of_dependants": [
          "2017-09-18T22:00:00Z"
        ],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "10"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2017-09-18T22:00:00Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "employment_status": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "dependants": {
            "type": "integer"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "url": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "employment_status": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "rating": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "dependants": {
            "type": "integer"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerIdentity",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/data"
    },
    {
      "operation_id": "OBPv3.1.0-getProduct",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getProduct"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/products/PRODUCT_CODE",
      "summary": "获取银行产品",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Returns information about a financial Product offered by the bank specified by BANK_ID and PRODUCT_CODE including:\n\n* Name\n* Code\n* Parent Product Code\n* Category\n* Family\n* Super Family\n* More info URL\n* Description\n* Terms and Conditions\n* License the data under this endpoint is released under\n\nAuthentication is Mandatory",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "code": "product_code",
        "parent_product_code": "parent",
        "name": "product name",
        "category": "category",
        "family": "family",
        "super_family": "super family",
        "more_info_url": "www.example.com/prod1/more-info.html",
        "details": "Details",
        "description": "Description",
        "meta": {
          "license": {
            "id": "5",
            "name": "TESOBE"
          }
        },
        "product_attributes": [
          {
            "product_code": "saving1",
            "product_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "name": "OVERDRAFT_START_DATE",
            "type": "DATE_WITH_DAY",
            "value": "2012-04-23"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30011: Product not found. Please specify a valid value for PRODUCT_CODE.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Product"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "super_family": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          },
          "product_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "product_attribute_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                }
              }
            }
          },
          "description": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "parent_product_code": {
            "type": "string"
          },
          "more_info_url": {
            "type": "string"
          },
          "family": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/products/PRODUCT_CODE"
    },
    {
      "operation_id": "OBPv3.1.0-createSystemView",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createSystemView"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/system-views",
      "summary": "创建系统视图。",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Create a system view\n\n Authentication is Mandatory and the user needs to have access to the owner view.\n The 'alias' field in the JSON can take one of three values:\n\n * _public_: to use the public alias if there is one specified for the other account.\n * _private_: to use the public alias if there is one specified for the other account.\n\n * _''(empty string)_: to use no alias; the view shows the real name of the other account.\n\n The 'hide_metadata_if_alias_used' field in the JSON can take boolean values. If it is set to `true` and there is an alias on the other account then the other accounts' metadata (like more_info, url, image_url, open_corporates_url, etc.) will be hidden. Otherwise the metadata will be shown.\n\n The 'allowed_actions' field is a list containing the name of the actions allowed on this view, all the actions contained will be set to `true` on the view creation, the rest will be set to `false`.\n ",
      "example_request_body": {
        "name": "test",
        "description": "This view is for family",
        "metadata_view": "test",
        "is_public": true,
        "which_alias_to_use": "family",
        "hide_metadata_if_alias_used": false,
        "allowed_actions": [
          "can_see_transaction_this_bank_account",
          "can_see_transaction_other_bank_account",
          "can_see_transaction_metadata",
          "can_see_transaction_label",
          "can_see_transaction_amount",
          "can_see_transaction_type",
          "can_see_transaction_currency",
          "can_see_transaction_start_date",
          "can_see_transaction_finish_date",
          "can_see_transaction_balance",
          "can_see_comments",
          "can_see_narrative",
          "can_see_tags",
          "can_see_images",
          "can_see_bank_account_owners",
          "can_see_bank_account_type",
          "can_see_bank_account_balance",
          "can_see_bank_account_currency",
          "can_see_bank_account_label",
          "can_see_bank_account_national_identifier",
          "can_see_bank_account_swift_bic",
          "can_see_bank_account_iban",
          "can_see_bank_account_number",
          "can_see_bank_account_bank_name",
          "can_see_other_account_national_identifier",
          "can_see_other_account_swift_bic",
          "can_see_other_account_iban",
          "can_see_other_account_bank_name",
          "can_see_other_account_number",
          "can_see_other_account_metadata",
          "can_see_other_account_kind",
          "can_see_more_info",
          "can_see_url",
          "can_see_image_url",
          "can_see_open_corporates_url",
          "can_see_corporate_location",
          "can_see_physical_location",
          "can_see_public_alias",
          "can_see_private_alias",
          "can_add_more_info",
          "can_add_url",
          "can_add_image_url",
          "can_add_open_corporates_url",
          "can_add_corporate_location",
          "can_add_physical_location",
          "can_add_public_alias",
          "can_add_private_alias",
          "can_delete_corporate_location",
          "can_delete_physical_location",
          "can_edit_narrative",
          "can_add_comment",
          "can_delete_comment",
          "can_add_tag",
          "can_delete_tag",
          "can_add_image",
          "can_delete_image",
          "can_add_where_tag",
          "can_see_where_tag",
          "can_delete_where_tag",
          "can_create_counterparty",
          "can_see_bank_routing_scheme",
          "can_see_bank_routing_address",
          "can_see_bank_account_routing_scheme",
          "can_see_bank_account_routing_address",
          "can_see_other_bank_routing_scheme",
          "can_see_other_bank_routing_address",
          "can_see_other_account_routing_scheme",
          "can_see_other_account_routing_address",
          "can_query_available_funds"
        ]
      },
      "success_response_body": {
        "id": "1234",
        "short_name": "short_name",
        "description": "description",
        "metadata_view": "owner",
        "is_public": true,
        "alias": "No",
        "hide_metadata_if_alias_used": true,
        "can_add_comment": true,
        "can_add_corporate_location": true,
        "can_add_image": true,
        "can_add_image_url": true,
        "can_add_more_info": true,
        "can_add_open_corporates_url": true,
        "can_add_physical_location": true,
        "can_add_private_alias": true,
        "can_add_public_alias": true,
        "can_add_tag": true,
        "can_add_url": true,
        "can_add_where_tag": true,
        "can_delete_comment": true,
        "can_add_counterparty": true,
        "can_delete_corporate_location": true,
        "can_delete_image": true,
        "can_delete_physical_location": true,
        "can_delete_tag": true,
        "can_delete_where_tag": true,
        "can_edit_owner_comment": true,
        "can_see_bank_account_balance": true,
        "can_query_available_funds": true,
        "can_see_bank_account_bank_name": true,
        "can_see_bank_account_currency": true,
        "can_see_bank_account_iban": true,
        "can_see_bank_account_label": true,
        "can_see_bank_account_national_identifier": true,
        "can_see_bank_account_number": true,
        "can_see_bank_account_owners": true,
        "can_see_bank_account_swift_bic": true,
        "can_see_bank_account_type": true,
        "can_see_comments": true,
        "can_see_corporate_location": true,
        "can_see_image_url": true,
        "can_see_images": true,
        "can_see_more_info": true,
        "can_see_open_corporates_url": true,
        "can_see_other_account_bank_name": true,
        "can_see_other_account_iban": true,
        "can_see_other_account_kind": true,
        "can_see_other_account_metadata": true,
        "can_see_other_account_national_identifier": true,
        "can_see_other_account_number": true,
        "can_see_other_account_swift_bic": true,
        "can_see_owner_comment": true,
        "can_see_physical_location": true,
        "can_see_private_alias": true,
        "can_see_public_alias": true,
        "can_see_tags": true,
        "can_see_transaction_amount": true,
        "can_see_transaction_balance": true,
        "can_see_transaction_currency": true,
        "can_see_transaction_description": true,
        "can_see_transaction_finish_date": true,
        "can_see_transaction_metadata": true,
        "can_see_transaction_other_bank_account": true,
        "can_see_transaction_start_date": true,
        "can_see_transaction_this_bank_account": true,
        "can_see_transaction_type": true,
        "can_see_url": true,
        "can_see_where_tag": true,
        "can_see_bank_routing_scheme": true,
        "can_see_bank_routing_address": true,
        "can_see_bank_account_routing_scheme": true,
        "can_see_bank_account_routing_address": true,
        "can_see_other_bank_routing_scheme": true,
        "can_see_other_bank_routing_address": true,
        "can_see_other_account_routing_scheme": true,
        "can_see_other_account_routing_address": true,
        "can_add_transaction_request_to_own_account": true,
        "can_add_transaction_request_to_any_account": true,
        "can_see_bank_account_credit_limit": true,
        "can_create_direct_debit": true,
        "can_create_standing_order": true
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "System-View",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "allowed_actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "is_public": {
            "type": "boolean"
          },
          "which_alias_to_use": {
            "type": "string"
          },
          "metadata_view": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "can_see_other_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_where_tag": {
            "type": "boolean"
          },
          "can_see_url": {
            "type": "boolean"
          },
          "can_create_direct_debit": {
            "type": "boolean"
          },
          "can_see_bank_account_swift_bic": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_address": {
            "type": "boolean"
          },
          "can_see_tags": {
            "type": "boolean"
          },
          "can_see_transaction_balance": {
            "type": "boolean"
          },
          "can_delete_corporate_location": {
            "type": "boolean"
          },
          "can_add_image_url": {
            "type": "boolean"
          },
          "can_see_public_alias": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_own_account": {
            "type": "boolean"
          },
          "can_add_comment": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_scheme": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "can_see_corporate_location": {
            "type": "boolean"
          },
          "can_see_other_account_bank_name": {
            "type": "boolean"
          },
          "can_see_more_info": {
            "type": "boolean"
          },
          "can_add_counterparty": {
            "type": "boolean"
          },
          "can_see_physical_location": {
            "type": "boolean"
          },
          "can_query_available_funds": {
            "type": "boolean"
          },
          "can_edit_owner_comment": {
            "type": "boolean"
          },
          "can_see_private_alias": {
            "type": "boolean"
          },
          "can_see_bank_account_credit_limit": {
            "type": "boolean"
          },
          "can_see_other_account_routing_address": {
            "type": "boolean"
          },
          "can_see_bank_account_balance": {
            "type": "boolean"
          },
          "can_add_public_alias": {
            "type": "boolean"
          },
          "can_see_bank_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_owners": {
            "type": "boolean"
          },
          "can_see_other_account_metadata": {
            "type": "boolean"
          },
          "can_delete_physical_location": {
            "type": "boolean"
          },
          "hide_metadata_if_alias_used": {
            "type": "boolean"
          },
          "can_see_transaction_this_bank_account": {
            "type": "boolean"
          },
          "can_see_image_url": {
            "type": "boolean"
          },
          "can_see_transaction_type": {
            "type": "boolean"
          },
          "can_see_images": {
            "type": "boolean"
          },
          "can_see_transaction_amount": {
            "type": "boolean"
          },
          "metadata_view": {
            "type": "string"
          },
          "can_see_transaction_metadata": {
            "type": "boolean"
          },
          "can_see_comments": {
            "type": "boolean"
          },
          "can_see_other_account_iban": {
            "type": "boolean"
          },
          "can_add_image": {
            "type": "boolean"
          },
          "can_see_bank_account_routing_scheme": {
            "type": "boolean"
          },
          "can_see_bank_account_type": {
            "type": "boolean"
          },
          "can_see_other_account_kind": {
            "type": "boolean"
          },
          "can_see_bank_account_currency": {
            "type": "boolean"
          },
          "can_add_where_tag": {
            "type": "boolean"
          },
          "can_see_transaction_start_date": {
            "type": "boolean"
          },
          "can_see_bank_account_label": {
            "type": "boolean"
          },
          "can_add_private_alias": {
            "type": "boolean"
          },
          "can_see_transaction_currency": {
            "type": "boolean"
          },
          "can_add_more_info": {
            "type": "boolean"
          },
          "can_delete_comment": {
            "type": "boolean"
          },
          "can_create_standing_order": {
            "type": "boolean"
          },
          "can_see_other_bank_routing_address": {
            "type": "boolean"
          },
          "can_see_transaction_other_bank_account": {
            "type": "boolean"
          },
          "can_see_bank_account_number": {
            "type": "boolean"
          },
          "can_add_corporate_location": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "can_add_url": {
            "type": "boolean"
          },
          "short_name": {
            "type": "string"
          },
          "can_delete_where_tag": {
            "type": "boolean"
          },
          "is_public": {
            "type": "boolean"
          },
          "can_see_owner_comment": {
            "type": "boolean"
          },
          "can_see_transaction_finish_date": {
            "type": "boolean"
          },
          "can_see_open_corporates_url": {
            "type": "boolean"
          },
          "can_add_physical_location": {
            "type": "boolean"
          },
          "can_see_bank_account_iban": {
            "type": "boolean"
          },
          "can_see_other_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_bank_routing_address": {
            "type": "boolean"
          },
          "can_delete_image": {
            "type": "boolean"
          },
          "can_add_transaction_request_to_any_account": {
            "type": "boolean"
          },
          "can_add_tag": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "can_see_other_account_routing_scheme": {
            "type": "boolean"
          },
          "can_add_open_corporates_url": {
            "type": "boolean"
          },
          "can_delete_tag": {
            "type": "boolean"
          },
          "can_see_transaction_description": {
            "type": "boolean"
          },
          "can_see_bank_account_national_identifier": {
            "type": "boolean"
          },
          "can_see_other_account_number": {
            "type": "boolean"
          },
          "can_see_bank_account_bank_name": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateSystemView",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/system-views"
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyPrivateAlias",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyPrivateAlias"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias",
      "summary": "更新交易对手私人别名",
      "description": "<p>更新交易对手（又称其他帐户）的私有别名OTHER_ACCOUNT_ID。 </p><p>身份验证是可选的<br />如果视图不是公共的，则需要认证。 </p>",
      "description_markdown": "Updates the private alias of the counterparty (AKA other account) OTHER_ACCOUNT_ID.\n\nAuthentication is Optional\nAuthentication is required if the view is not public.",
      "example_request_body": {
        "alias": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow updating the private alias",
        "Alias cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/private_alias"
    },
    {
      "operation_id": "OBPv3.1.0-createCustomer",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "createCustomer"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers",
      "summary": "创建客户。",
      "description": "<p>客户资源存储客户编号，法定姓名，电子邮件，电话号码，他们的出生日期，关系状态，学历，个人资料图片的网址，KYC状态等。 <br />日期格式必须为2013-01-21T23：08：00Z </p><p>身份验证是强制性的</p>",
      "description_markdown": "\nThe Customer resource stores the customer number, legal name, email, phone number, their date of birth, relationship status, education attained, a url for a profile image, KYC status etc.\nDates need to be in the format 2013-01-21T23:08:00Z\n\nAuthentication is Mandatory\n",
      "example_request_body": {
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "eveline@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "2017-09-18T22:00:00Z"
        },
        "date_of_birth": "2017-09-18T22:00:00Z",
        "relationship_status": "single",
        "dependants": 10,
        "dob_of_dependants": [
          "2017-09-18T22:00:00Z"
        ],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "10"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2017-09-18T22:00:00Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "eveline@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "2017-09-18T22:00:00Z"
        },
        "date_of_birth": "2017-09-18T22:00:00Z",
        "relationship_status": "single",
        "dependants": 10,
        "dob_of_dependants": [
          "2017-09-18T22:00:00Z"
        ],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "10"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2017-09-18T22:00:00Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-30006: Customer Number already exists. Please specify a different value for BANK_ID or CUSTOMER_NUMBER.",
        "OBP-20005: User not found. Please specify a valid value for USER_ID.",
        "OBP-30007: The User is already linked to a Customer at the bank specified by BANK_ID",
        "OBP-30024: Could not create Consumer ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "Person",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "employment_status": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "dependants": {
            "type": "integer"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "rating": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "employment_status": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "rating": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "dependants": {
            "type": "integer"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateCustomer",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateCustomerAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers"
    },
    {
      "operation_id": "OBPv1.4.0-getCustomerMessages",
      "implemented_by": {
        "version": "OBPv1.4.0",
        "function": "getCustomerMessages"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.4.0/banks/BANK_ID/customer/messages",
      "summary": "获取客户消息（当前）",
      "description": "<p>获取已登录客户的消息<br />发送给当前已验证用户的消息。 </p><p>需要通过OAuth进行身份验证。 </p>",
      "description_markdown": "Get messages for the logged in customer\nMessages sent to the currently authenticated user.\n\nAuthentication via OAuth is required.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "messages": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "date": "2017-09-18T22:00:00Z",
            "message": "String",
            "from_department": "String",
            "from_person": "String"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer-Message",
        "Customer"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "message": {
                  "type": "string"
                },
                "from_department": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "from_person": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customer/messages"
    },
    {
      "operation_id": "OBPv3.1.0-getAccountWebhooks",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getAccountWebhooks"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/management/banks/BANK_ID/account-web-hooks",
      "summary": "获取帐户Webhook",
      "description": "<p>获取帐户Webhooks。 </p><p>用于分页的可能的自定义URL参数： </p><ul><li>限制= NUM​​BER </li><li>偏移量= NUM​​BER </li><li> account_id = STRING </li><li> user_id = STRING </li></ul>",
      "description_markdown": "Get Account Webhooks.\n\nPossible custom URL parameters for pagination:\n\n* limit=NUMBER\n* offset=NUMBER\n* account_id=STRING\n* user_id=STRING\n\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "web_hooks": [
          {
            "account_webhook_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "bank_id": "GENODEM1GLS",
            "account_id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
            "trigger_name": "OnBalanceChange",
            "url": "https://localhost.openbankproject.com",
            "http_method": "POST",
            "http_protocol": "HTTP/1.1",
            "created_by_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
            "is_active": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Webhook",
        "Bank",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "web_hooks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank_id": {
                  "type": "string"
                },
                "created_by_user_id": {
                  "type": "string"
                },
                "http_method": {
                  "type": "string"
                },
                "is_active": {
                  "type": "boolean"
                },
                "http_protocol": {
                  "type": "string"
                },
                "account_webhook_id": {
                  "type": "string"
                },
                "trigger_name": {
                  "type": "string"
                },
                "account_id": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanGetWebhooks",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/management/banks/BANK_ID/account-web-hooks"
    },
    {
      "operation_id": "OBPv3.0.0-getOtherAccountByIdForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getOtherAccountByIdForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID",
      "summary": "通过ID获取其他帐户。",
      "description": "<p>返回有关“其他帐户”的数据，该“其他帐户”已通过BANK_ID与ACCOUNT_ID共享了至少一笔交易。 <br />身份验证是可选的</p><p>如果视图不是公共的，则需要认证。 </p>",
      "description_markdown": "Returns data about the Other Account that has shared at least one transaction with ACCOUNT_ID at BANK_ID.\nAuthentication is Optional\n\nAuthentication is required if the view is not public.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
        "holder": {
          "name": "OBP",
          "is_alias": true
        },
        "bank_routing": {
          "scheme": "Bank_ID",
          "address": "gh.29.uk"
        },
        "account_routings": [
          {
            "scheme": "AccountNumber",
            "address": "4930396"
          }
        ],
        "metadata": {
          "public_alias": "NONE",
          "private_alias": "NONE",
          "more_info": "www.openbankproject.com",
          "URL": "www.openbankproject.com",
          "image_URL": "www.openbankproject.com",
          "open_corporates_URL": "www.openbankproject.com",
          "corporate_location": {
            "latitude": 1.231,
            "longitude": 1.231,
            "date": "2017-09-18T22:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          },
          "physical_location": {
            "latitude": 1.231,
            "longitude": 1.231,
            "date": "2017-09-18T22:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        }
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Counterparty",
        "Account",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "holder": {
            "type": "object",
            "properties": {
              "is_alias": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "image_URL": {
                "type": "string"
              },
              "corporate_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "display_name": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "URL": {
                "type": "string"
              },
              "open_corporates_URL": {
                "type": "string"
              },
              "physical_location": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "display_name": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              },
              "public_alias": {
                "type": "string"
              },
              "private_alias": {
                "type": "string"
              },
              "more_info": {
                "type": "string"
              }
            }
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string"
                },
                "scheme": {
                  "type": "string"
                }
              }
            }
          },
          "bank_routing": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string"
              },
              "scheme": {
                "type": "string"
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID"
    },
    {
      "operation_id": "OBPv1.2.1-deleteCounterpartyImageUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "deleteCounterpartyImageUrl"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/image_url",
      "summary": "删除对方图片网址",
      "description": "<p>删除其他银行帐户的图片网址。 </p>",
      "description_markdown": "Delete image url of other bank account.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/image_url"
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerIdentity",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerIdentity"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/identity",
      "summary": "更新客户的身份数据",
      "description": "<p>更新CUSTOMER_ID指定的客户的身份数据。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Update the identity data of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "legal_name": "Eveline Tripman",
        "date_of_birth": "2017-09-18T22:00:00Z",
        "title": "Dr.",
        "name_suffix": "Sr"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "eveline@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "2017-09-18T22:00:00Z"
        },
        "date_of_birth": "2017-09-18T22:00:00Z",
        "relationship_status": "single",
        "dependants": 10,
        "dob_of_dependants": [
          "2017-09-18T22:00:00Z"
        ],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "10"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2017-09-18T22:00:00Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "name_suffix": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "legal_name": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "employment_status": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "rating": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "dependants": {
            "type": "integer"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerIdentity",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/identity"
    },
    {
      "operation_id": "OBPv4.0.0-getCoreAccountById",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "getCoreAccountById"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/my/banks/BANK_ID/accounts/ACCOUNT_ID/account",
      "summary": "按ID获取帐户（核心）",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Information returned about the account specified by ACCOUNT_ID:\n\n* Number - The human readable account number given by the bank that identifies the account.\n* Label - A label given by the owner of the account\n* Owners - Users that own this account\n* Type - The type of account\n* Balance - Currency and Value\n* Account Routings - A list that might include IBAN or national account identifiers\n* Account Rules - A list that might include Overdraft and other bank specific rules\n* Account Attributes - A list that might include custom defined account attribute\n* Tags - A list of Tags assigned to this account\n\nThis call returns the owner view and requires access to that view.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "id": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0",
        "bank_id": "GENODEM1GLS",
        "label": "My Account",
        "number": "546387432",
        "owners": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "provider": "http://127.0.0.1:8080",
            "display_name": "OBP"
          }
        ],
        "product_code": "AC",
        "balance": {
          "currency": "EUR",
          "amount": "10"
        },
        "account_routings": [
          {
            "scheme": "AccountNumber",
            "address": "4930396"
          }
        ],
        "views_basic": [
          {
            "id": "owner",
            "short_name": "Owner",
            "description": "This view is for the owner for the account.",
            "is_public": false
          }
        ],
        "account_attributes": [
          {
            "product_code": "saving1",
            "account_attribute_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
            "name": "OVERDRAFT_START_DATE",
            "type": "DATE_WITH_DAY",
            "value": "2012-04-23"
          }
        ],
        "tags": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "value": "OBP",
            "date": "2017-09-18T22:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": true,
      "is_obwg": false,
      "tags": [
        "Account",
        "Account Information Service (AIS)",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "account_attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "account_attribute_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "product_code": {
                  "type": "string"
                }
              }
            }
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "display_name": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "label": {
            "type": "string"
          },
          "views_basic": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "is_public": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "short_name": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "balance": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "product_code": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "display_name": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "value": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "account_routings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string"
                },
                "scheme": {
                  "type": "string"
                }
              }
            }
          },
          "id": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/my/banks/BANK_ID/accounts/ACCOUNT_ID/account"
    },
    {
      "operation_id": "OBPv3.1.0-updateCustomerCreditLimit",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "updateCustomerCreditLimit"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/customers/CUSTOMER_ID/credit-limit",
      "summary": "更新客户的信用额度",
      "description": "<p>更新CUSTOMER_ID指定的客户的信用额度。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Update the credit limit of the Customer specified by CUSTOMER_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "credit_limit": {
          "currency": "EUR",
          "amount": "1000"
        }
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "customer_number": "5987953",
        "legal_name": "Eveline Tripman",
        "mobile_phone_number": "+44 07972 444 876",
        "email": "eveline@example.com",
        "face_image": {
          "url": "www.openbankproject",
          "date": "2017-09-18T22:00:00Z"
        },
        "date_of_birth": "2017-09-18T22:00:00Z",
        "relationship_status": "single",
        "dependants": 10,
        "dob_of_dependants": [
          "2017-09-18T22:00:00Z"
        ],
        "credit_rating": {
          "rating": "OBP",
          "source": "OBP"
        },
        "credit_limit": {
          "currency": "EUR",
          "amount": "10"
        },
        "highest_education_attained": "Master",
        "employment_status": "worker",
        "kyc_status": true,
        "last_ok_date": "2017-09-18T22:00:00Z",
        "title": "Dr.",
        "branch_id": "DERBY6",
        "name_suffix": "Sr"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-10001: Incorrect json format.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "credit_limit": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dob_of_dependants": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "employment_status": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "relationship_status": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date-time"
          },
          "last_ok_date": {
            "type": "string",
            "format": "date-time"
          },
          "highest_education_attained": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "credit_rating": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string"
              },
              "rating": {
                "type": "string"
              }
            }
          },
          "name_suffix": {
            "type": "string"
          },
          "credit_limit": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          },
          "dependants": {
            "type": "integer"
          },
          "legal_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "face_image": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "branch_id": {
            "type": "string"
          },
          "mobile_phone_number": {
            "type": "string"
          },
          "kyc_status": {
            "type": "boolean"
          }
        }
      },
      "roles": [
        {
          "role": "CanUpdateCustomerCreditLimit",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/credit-limit"
    },
    {
      "operation_id": "OBPv3.0.0-addEntitlementRequest",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "addEntitlementRequest"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.0.0/entitlement-requests",
      "summary": "添加当前用户的权利请求。",
      "description": "<p>创建权利请求。 </p><p>任何登录的用户都可以使用此终结点来请求权利</p><p>权利用于向用户授予系统或银行级别的角色。 （有关帐户级别的权限，请参见视图） </p><p>对于系统级角色（例如CanGetAnyUser），将bank_id设置为空字符串，即“ bank_id”：“” </p><p>对于银行级别的角色（例如CanCreateAccount），将bank_id设置为有效值，例如“ bank_id”：“ my-bank-id” </p><p>身份验证是强制性的</p>",
      "description_markdown": "Create Entitlement Request.\n\nAny logged in User can use this endpoint to request an Entitlement\n\nEntitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)\n\nFor a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. \"bank_id\":\"\"\n\nFor a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. \"bank_id\":\"my-bank-id\"\n\n\n\nAuthentication is Mandatory\n\n        ",
      "example_request_body": {
        "bank_id": "GENODEM1GLS",
        "role_name": "String"
      },
      "success_response_body": {
        "entitlement_request_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
        "user": {
          "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "email": "eveline@example.com",
          "provider_id": "Chris",
          "provider": "http://127.0.0.1:8080",
          "username": "felixsmith",
          "entitlements": {
            "list": [
              {
                "entitlement_id": "6fb17583-1e49-4435-bb74-a14fe0996723",
                "role_name": "CanQueryOtherUser",
                "bank_id": "GENODEM1GLS"
              }
            ]
          }
        },
        "role_name": "CanQueryOtherUser",
        "bank_id": "GENODEM1GLS",
        "created": "2017-09-18T22:00:00Z"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20005: User not found. Please specify a valid value for USER_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-10007: Incorrect Role name: ",
        "OBP-30205: This entitlement is a Bank Role. Please set bank_id to a valid bank id.",
        "OBP-30206: This entitlement is a System Role. Please set bank_id to empty string.",
        "OBP-30214: Entitlement Request already exists for the user.",
        "OBP-30217: Entitlement Request cannot be added.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Role",
        "Entitlement",
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "role_name": {
            "type": "string"
          },
          "bank_id": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "entitlement_request_id": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "entitlements": {
                "type": "object",
                "properties": {
                  "list": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "bank_id": {
                          "type": "string"
                        },
                        "role_name": {
                          "type": "string"
                        },
                        "entitlement_id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "provider": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "user_id": {
                "type": "string"
              }
            }
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "role_name": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/entitlement-requests"
    },
    {
      "operation_id": "OBPv3.1.0-deleteUserAuthContexts",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteUserAuthContexts"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/users/USER_ID/auth-context",
      "summary": "删除用户的身份验证上下文",
      "description": "<p>删除由USER_ID指定的用户的身份验证上下文。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Delete the Auth Contexts of a User specified by USER_ID.\n\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanDeleteUserAuthContext",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/USER_ID/auth-context"
    },
    {
      "operation_id": "OBPv1.2.1-updateCounterpartyMoreInfo",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "updateCounterpartyMoreInfo"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/more_info",
      "summary": "更新交易对手更多信息",
      "description": "<p>从帐户的角度（例如，我的牙医）更新对方的更多信息描述。 </p>",
      "description_markdown": "Update the more info description of the counter party from the perpestive of the account e.g. My dentist.",
      "example_request_body": {
        "more_info": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow updating more info",
        "More Info cannot be updated",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "more_info": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/more_info"
    },
    {
      "operation_id": "OBPv3.1.0-getOAuth2ServerJWKsURIs",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getOAuth2ServerJWKsURIs"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/jwks-uris",
      "summary": "获取JSON Web密钥（JWK）URI",
      "description": "<p>获取OAuth2服务器的公共JSON Web密钥（JWK）URI。 <br />客户端应用程序需要验证ID令牌，自包含访问令牌和其他已发布的对象。 </p>",
      "description_markdown": "Get the OAuth2 server's public JSON Web Key (JWK) URIs.\n It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.\n\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jwks_uris": [
          {
            "jwks_uri": "https://www.googleapis.com/oauth2/v3/certs"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "API"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jwks_uris": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "jwks_uri": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/jwks-uris"
    },
    {
      "operation_id": "OBPv3.0.0-getFirehoseTransactionsForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getFirehoseTransactionsForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/firehose/accounts/ACCOUNT_ID/views/VIEW_ID/transactions",
      "summary": "获取帐户的Firehose交易",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "\nGet Transactions for an Account that has a firehose View.\n\nAllows bulk access to an account's transactions.\nUser must have the CanUseFirehoseAtAnyBank Role\n\nTo find ACCOUNT_IDs, use the getFirehoseAccountsAtOneBank call.\n\nFor VIEW_ID try 'owner'\nPossible custom headers for pagination:\n\n* sort_direction=ASC/DESC ==> default value: DESC. The sort field is the completed date.\n* limit=NUMBER ==> default value: 50\n* offset=NUMBER ==> default value: 0\n* from_date=DATE => default value: 0000-00-00T00:00:00.000Z\n* to_date=DATE => default value: 3049-01-01T00:00:00.000Z\n\n**Date format parameter**: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'(2017-09-19T02:31:05.000Z) ==> time zone is UTC.        \n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "transactions": [
          {
            "id": "String",
            "this_account": {
              "id": "String",
              "bank_routing": {
                "scheme": "Bank_ID",
                "address": "gh.29.uk"
              },
              "account_routings": [
                {
                  "scheme": "AccountNumber",
                  "address": "4930396"
                }
              ],
              "holders": [
                {
                  "name": "OBP",
                  "is_alias": true
                }
              ]
            },
            "other_account": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "holder": {
                "name": "OBP",
                "is_alias": true
              },
              "bank_routing": {
                "scheme": "Bank_ID",
                "address": "gh.29.uk"
              },
              "account_routings": [
                {
                  "scheme": "AccountNumber",
                  "address": "4930396"
                }
              ],
              "metadata": {
                "public_alias": "NONE",
                "private_alias": "NONE",
                "more_info": "www.openbankproject.com",
                "URL": "www.openbankproject.com",
                "image_URL": "www.openbankproject.com",
                "open_corporates_URL": "www.openbankproject.com",
                "corporate_location": {
                  "latitude": 1.231,
                  "longitude": 1.231,
                  "date": "2017-09-18T22:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                },
                "physical_location": {
                  "latitude": 1.231,
                  "longitude": 1.231,
                  "date": "2017-09-18T22:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              }
            },
            "details": {
              "type": "AC",
              "description": "this is for family",
              "posted": "2017-09-18T22:00:00Z",
              "completed": "2017-09-18T22:00:00Z",
              "new_balance": {
                "currency": "EUR",
                "amount": "10"
              },
              "value": {
                "currency": "EUR",
                "amount": "10"
              }
            },
            "metadata": {
              "narrative": "NONE",
              "comments": [
                {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "value": "OBP",
                  "date": "2017-09-18T22:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              ],
              "tags": [
                {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "value": "OBP",
                  "date": "2017-09-18T22:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              ],
              "images": [
                {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "label": "NONE",
                  "URL": "www.openbankproject.com",
                  "date": "2017-09-18T22:00:00Z",
                  "user": {
                    "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                    "provider": "http://127.0.0.1:8080",
                    "display_name": "OBP"
                  }
                }
              ],
              "where": {
                "latitude": 1.231,
                "longitude": 1.231,
                "date": "2017-09-18T22:00:00Z",
                "user": {
                  "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
                  "provider": "http://127.0.0.1:8080",
                  "display_name": "OBP"
                }
              }
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-00009: Account firehose is not allowed on this instance. Please set allow_account_firehose = true in props files. ",
        "OBP-00012: Customer firehose is not allowed on this instance. Please set allow_customer_firehose = true in props files. ",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction",
        "Account-Firehose",
        "Transaction-Firehose",
        "FirehoseData",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "this_account": {
                  "type": "object",
                  "properties": {
                    "holders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "is_alias": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "account_routings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "scheme": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "bank_routing": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "scheme": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "details": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        }
                      }
                    },
                    "new_balance": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        }
                      }
                    },
                    "posted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "completed": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user": {
                            "type": "object",
                            "properties": {
                              "display_name": {
                                "type": "string"
                              },
                              "provider": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "value": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "URL": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "display_name": {
                                "type": "string"
                              },
                              "provider": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "label": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "narrative": {
                      "type": "string"
                    },
                    "where": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "display_name": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "longitude": {
                          "type": "number"
                        },
                        "latitude": {
                          "type": "number"
                        }
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user": {
                            "type": "object",
                            "properties": {
                              "display_name": {
                                "type": "string"
                              },
                              "provider": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "value": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "other_account": {
                  "type": "object",
                  "properties": {
                    "holder": {
                      "type": "object",
                      "properties": {
                        "is_alias": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "image_URL": {
                          "type": "string"
                        },
                        "corporate_location": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "object",
                              "properties": {
                                "display_name": {
                                  "type": "string"
                                },
                                "provider": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            },
                            "date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "longitude": {
                              "type": "number"
                            },
                            "latitude": {
                              "type": "number"
                            }
                          }
                        },
                        "URL": {
                          "type": "string"
                        },
                        "open_corporates_URL": {
                          "type": "string"
                        },
                        "physical_location": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "type": "object",
                              "properties": {
                                "display_name": {
                                  "type": "string"
                                },
                                "provider": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            },
                            "date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "longitude": {
                              "type": "number"
                            },
                            "latitude": {
                              "type": "number"
                            }
                          }
                        },
                        "public_alias": {
                          "type": "string"
                        },
                        "private_alias": {
                          "type": "string"
                        },
                        "more_info": {
                          "type": "string"
                        }
                      }
                    },
                    "account_routings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string"
                          },
                          "scheme": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "bank_routing": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "scheme": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "roles": [
        {
          "role": "CanUseFirehoseAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/firehose/accounts/ACCOUNT_ID/views/VIEW_ID/transactions"
    },
    {
      "operation_id": "OBPv3.1.0-deleteProductAttribute",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "deleteProductAttribute"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/products/PRODUCT_CODE/attributes/PRODUCT_ATTRIBUTE_ID",
      "summary": "删除产品属性",
      "description": "<p>删除产品属性</p><p>产品属性用于描述带有类型化键值对列表的金融产品。 </p><p>每个产品属性均通过PRODUCT_CODE链接到其产品</p><p>按ID删除产品属性。 </p><p>身份验证是强制性的</p>",
      "description_markdown": " Delete Product Attribute\n\n\nProduct Attributes are used to describe a financial Product with a list of typed key value pairs.\n\nEach Product Attribute is linked to its Product by PRODUCT_CODE\n\n\n       \n\nDelete a Product Attribute by its id.\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Product",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/products/PRODUCT_CODE/attributes/PRODUCT_ATTRIBUTE_ID"
    },
    {
      "operation_id": "OBPv3.1.0-answerUserAuthContextUpdateChallenge",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "answerUserAuthContextUpdateChallenge"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.1.0/users/current/auth-context-updates/AUTH_CONTEXT_UPDATE_ID/challenge",
      "summary": "回答身份验证上下文更新挑战",
      "description": "<p>回答身份验证上下文更新挑战。 </p>",
      "description_markdown": "\nAnswer Auth Context Update Challenge.\n",
      "example_request_body": {
        "answer": "12345678"
      },
      "success_response_body": {
        "user_auth_context_update_id": "613c83ea-80f9-4560-8404-b9cd4ec42a7f",
        "user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "key": "CUSTOMER_NUMBER",
        "value": "78987432",
        "status": "INITIATED"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-10001: Incorrect json format.",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "user_auth_context_update_id": {
            "type": "string",
            "format": "date-time"
          },
          "key": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/users/current/auth-context-updates/AUTH_CONTEXT_UPDATE_ID/challenge"
    },
    {
      "operation_id": "OBPv1.2.1-getTransactionNarrative",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getTransactionNarrative"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative",
      "summary": "获得叙述。",
      "description": "<p>返回视图<a href=\"#1_2_1-getViewsForBankAccount\">主持</a>的交易的帐户所有者描述。 </p><p>如果视图不是公开的，则需要通过OAuth进行身份验证。 </p>",
      "description_markdown": "Returns the account owner description of the transaction [moderated](#1_2_1-getViewsForBankAccount) by the view.\n\nAuthentication via OAuth is required if the view is not public.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "narrative": "narative"
      },
      "error_response_bodies": [
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "narrative": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/narrative"
    },
    {
      "operation_id": "OBPv3.1.0-getMeeting",
      "implemented_by": {
        "version": "OBPv3.1.0",
        "function": "getMeeting"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.1.0/banks/BANK_ID/meetings/MEETING_ID",
      "summary": "开会",
      "description": "<p>获取由BANK_ID / MEETING_ID指定的会议<br />会议包含有关视频会议/聊天等的元数据，并用于促进会议。 </p><p>实际的会议/聊天由外部服务处理。 </p><p>需要登录。 </p><p>此调用是<strong>实验性的</strong> ，将来需要进一步的授权。 </p>",
      "description_markdown": "Get Meeting specified by BANK_ID / MEETING_ID\nMeetings contain meta data about, and are used to facilitate, video conferences / chats etc.\n\nThe actual conference/chats are handled by external services.\n\nLogin is required.\n\nThis call is **experimental** and will require further authorisation in the future.\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "meeting_id": "UUID-String",
        "provider_id": "Chris",
        "purpose_id": "String, eg: onboarding",
        "bank_id": "GENODEM1GLS",
        "present": {
          "staff_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
          "customer_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "keys": {
          "session_id": "String",
          "staff_token": "String",
          "customer_token": "String"
        },
        "when": "2017-09-18T22:00:00Z",
        "creator": {
          "name": "Simon ",
          "mobile_phone": "+44 07972 444 876",
          "email_address": "eveline@example.com"
        },
        "invitees": [
          {
            "contact_details": {
              "name": "Simon ",
              "mobile_phone": "+44 07972 444 876",
              "email_address": "eveline@example.com"
            },
            "status": "String, eg: Good"
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30104: Meeting not found.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Customer-Meeting",
        "KYC",
        "Customer",
        "User",
        "Experimental"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "present": {
            "type": "object",
            "properties": {
              "customer_user_id": {
                "type": "string"
              },
              "staff_user_id": {
                "type": "string"
              }
            }
          },
          "when": {
            "type": "string",
            "format": "date-time"
          },
          "provider_id": {
            "type": "string"
          },
          "creator": {
            "type": "object",
            "properties": {
              "email_address": {
                "type": "string"
              },
              "mobile_phone": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "purpose_id": {
            "type": "string"
          },
          "keys": {
            "type": "object",
            "properties": {
              "customer_token": {
                "type": "string"
              },
              "staff_token": {
                "type": "string"
              },
              "session_id": {
                "type": "string"
              }
            }
          },
          "invitees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                },
                "contact_details": {
                  "type": "object",
                  "properties": {
                    "email_address": {
                      "type": "string"
                    },
                    "mobile_phone": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "meeting_id": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/meetings/MEETING_ID"
    },
    {
      "operation_id": "OBPv1.2.1-addCounterpartyUrl",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "addCounterpartyUrl"
      },
      "request_verb": "POST",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/url",
      "summary": "将网址添加到其他银行帐户。",
      "description": "<p>代表交易对手的网址（首页网址等） </p>",
      "description_markdown": "A url which represents the counterparty (home page url etc.)",
      "example_request_body": {
        "URL": "String"
      },
      "success_response_body": {
        "success": "Success"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-10001: Incorrect json format.",
        "the view does not allow metadata access",
        "the view does not allow adding a url",
        "URL cannot be added",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Counterparty-Metadata",
        "Counterparty"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "URL": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID/metadata/url"
    },
    {
      "operation_id": "OBPv4.0.0-root",
      "implemented_by": {
        "version": "OBPv4.0.0",
        "function": "root"
      },
      "request_verb": "GET",
      "request_url": "/obp/v4.0.0/root",
      "summary": "获取API信息（根）",
      "description": "<p>返回有关以下内容的信息： </p><ul><li> API版本</li><li>信息托管</li><li>托管信息</li><li>能源信息</li><li> Git提交</li></ul>",
      "description_markdown": "Returns information about:\n\n* API version\n* Hosted by information\n* Hosted at information\n* Energy source information\n* Git Commit",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "version": "String",
        "version_status": "String",
        "git_commit": "String",
        "connector": "String",
        "hosted_by": {
          "organisation": "String",
          "email": "String",
          "phone": "String",
          "organisation_website": "String"
        },
        "hosted_at": {
          "organisation": "Amazon",
          "organisation_website": "https://aws.amazon.com/"
        },
        "energy_source": {
          "organisation": "Stromio",
          "organisation_website": "https://www.stromio.de/"
        }
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error.",
        "no connector set"
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "API",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "hosted_at": {
            "type": "object",
            "properties": {
              "organisation_website": {
                "type": "string"
              },
              "organisation": {
                "type": "string"
              }
            }
          },
          "git_commit": {
            "type": "string"
          },
          "hosted_by": {
            "type": "object",
            "properties": {
              "organisation_website": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "organisation": {
                "type": "string"
              }
            }
          },
          "connector": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "energy_source": {
            "type": "object",
            "properties": {
              "organisation_website": {
                "type": "string"
              },
              "organisation": {
                "type": "string"
              }
            }
          },
          "version_status": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/root"
    },
    {
      "operation_id": "OBPv3.0.0-createAtm",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "createAtm"
      },
      "request_verb": "POST",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/atms",
      "summary": "创建ATM",
      "description": "<p>为银行创建ATM。 </p><p>身份验证是强制性的</p>",
      "description_markdown": "Create ATM for the Bank.\n\nAuthentication is Mandatory\n\n",
      "example_request_body": {
        "id": "atm-id-123",
        "bank_id": "GENODEM1GLS",
        "name": "Atm by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 11.45,
          "longitude": 11.45
        },
        "meta": {
          "license": {
            "id": "5",
            "name": "TESOBE"
          }
        },
        "monday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "tuesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "wednesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "thursday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "friday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "saturday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "sunday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "is_accessible": "true",
        "located_at": "Full service store",
        "more_info": "short walk to the lake from here",
        "has_deposit_capability": "true"
      },
      "success_response_body": {
        "id": "atm-id-123",
        "bank_id": "GENODEM1GLS",
        "name": "Atm by the Lake",
        "address": {
          "line_1": "No 1 the Road",
          "line_2": "The Place",
          "line_3": "The Hill",
          "city": "Berlin",
          "county": "",
          "state": "Brandenburg",
          "postcode": "13359",
          "country_code": "DE"
        },
        "location": {
          "latitude": 11.45,
          "longitude": 11.45
        },
        "meta": {
          "license": {
            "id": "5",
            "name": "TESOBE"
          }
        },
        "monday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "tuesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "wednesday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "thursday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "friday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "saturday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "sunday": {
          "opening_time": "10:00",
          "closing_time": "18:00"
        },
        "is_accessible": "true",
        "located_at": "Full service store",
        "more_info": "short walk to the lake from here",
        "has_deposit_capability": "true"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-20006: User is missing one or more roles: ",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "ATM"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "has_deposit_capability": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "friday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "monday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "saturday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "thursday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "tuesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "wednesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "sunday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              },
              "county": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "located_at": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "has_deposit_capability": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "friday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "bank_id": {
            "type": "string"
          },
          "more_info": {
            "type": "string"
          },
          "is_accessible": {
            "type": "string"
          },
          "monday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "saturday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "thursday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "tuesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "wednesday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "sunday": {
            "type": "object",
            "properties": {
              "closing_time": {
                "type": "string"
              },
              "opening_time": {
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "license": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "address": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "line_1": {
                "type": "string"
              },
              "line_2": {
                "type": "string"
              },
              "line_3": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              },
              "county": {
                "type": "string"
              }
            }
          },
          "id": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "located_at": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanCreateAtm",
          "requires_bank_id": true
        },
        {
          "role": "CanCreateAtmAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/atms"
    },
    {
      "operation_id": "OBPv1.2.1-getCommentsForViewOnTransaction",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "getCommentsForViewOnTransaction"
      },
      "request_verb": "GET",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/comments",
      "summary": "获取评论。",
      "description": "<p>返回在<a href=\"#1_2_1-getViewsForBankAccount\">视图</a> （VIEW_ID）上进行的交易TRANSACTION_ID注释。 </p><p>如果视图不是公开的，则需要通过OAuth进行身份验证。 </p>",
      "description_markdown": "Returns the transaction TRANSACTION_ID comments made on a [view](#1_2_1-getViewsForBankAccount) (VIEW_ID).\n\nAuthentication via OAuth is required if the view is not public.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "comments": [
          {
            "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
            "value": "OBP",
            "date": "2017-09-18T22:00:00Z",
            "user": {
              "id": "5995d6a2-01b3-423c-a173-5481df49bdaf",
              "provider": "http://127.0.0.1:8080",
              "display_name": "OBP"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-30022: The current view does not have the permission: ",
        "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Transaction-Metadata",
        "Transaction"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "display_name": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "value": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/metadata/comments"
    },
    {
      "operation_id": "OBPv1.2.1-removePermissionForUserForBankAccountForAllViews",
      "implemented_by": {
        "version": "OBPv1.2.1",
        "function": "removePermissionForUserForBankAccountForAllViews"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v1.2.1/banks/BANK_ID/accounts/ACCOUNT_ID/permissions/PROVIDER/PROVIDER_ID/views",
      "summary": "撤消对帐户中所有视图的访问权限",
      "description": "<p> “撤销对某个用户帐户中所有视图的访问权限。 </p><p>用户在其PROVIDER处由PROVIDER_ID标识。 </p><p>该帐户由BANK_ID和ACCOUNT_ID指定。 </p><p>视图由VIEW_ID指定。 </p><p>提供者（可能是URL）必须经过URL编码。 </p><p> PROVIDER_ID通常等效于USERNAME。但是，请参阅“按ID获取用户”或“获取当前用户”以获取提供者信息。 </p><p>尝试撤消对公共视图的访问将返回错误消息。 </p><p>除非至少一个其他用户具有所有者视图访问权限，否则帐户所有者不能撤消对所有者视图的访问权限。 </p><p>身份验证是强制性的，用户需要有权访问所有者视图。 </p>",
      "description_markdown": "\"Revokes access to all Views on an Account for a certain User.\n\n\nThe User is identified by PROVIDER_ID at their PROVIDER.\n\nThe Account is specified by BANK_ID and ACCOUNT_ID.\n\nThe View is specified by VIEW_ID.\n\n\nPROVIDER (may be a URL so) must be URL Encoded.\n\nPROVIDER_ID is normally equivalent to USERNAME. However, see Get User by ID or GET Current User for Provider information.\n\nAttempting to revoke access to a public view will return an error message.\n\nAn Account Owner cannot revoke access to an Owner View unless at least one other User has Owner View access.\n\n      \n\nAuthentication is Mandatory and the user needs to have access to the owner view.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. ",
        "OBP-50000: Unknown Error.",
        "user does not have access to owner view on account"
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "View",
        "Account",
        "User",
        "OwnerViewRequired"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/permissions/PROVIDER/PROVIDER_ID/views"
    },
    {
      "operation_id": "OBPv3.0.0-glossary",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "glossary"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/api/glossary",
      "summary": "获取API词汇表",
      "description": "Map（类型-&gt;对象，属性-&gt; Map（html-&gt;地图（类型-&gt;字符串），降价-&gt;地图（类型-&gt;字符串）））",
      "description_markdown": "Returns the glossary of the API\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "glossary_items": [
          {
            "title": "Dr.",
            "description": {
              "markdown": "String",
              "html": "String"
            }
          }
        ]
      },
      "error_response_bodies": [
        "OBP-50000: Unknown Error."
      ],
      "is_core": true,
      "is_psd2": false,
      "is_obwg": true,
      "tags": [
        "Documentation"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "glossary_items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "object",
                  "properties": {
                    "html": {
                      "type": "string"
                    },
                    "markdown": {
                      "type": "string"
                    }
                  }
                },
                "title": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/api/glossary"
    },
    {
      "operation_id": "OBPv2.0.0-publicAccountsAllBanks",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "publicAccountsAllBanks"
      },
      "request_verb": "GET",
      "request_url": "/obp/v2.0.0/accounts/public",
      "summary": "在所有银行获取公共帐户。",
      "description": "<p>在所有银行获得公共帐户（匿名访问）。 <br />返回至少包含一个公共视图的帐户（is_public为true的视图） <br />对于每个帐户，API都会返回ID和可用的视图。 </p><p>身份验证是可选的</p>",
      "description_markdown": "Get public accounts at all banks (Anonymous access).\nReturns accounts that contain at least one public view (a view where is_public is true)\nFor each account the API returns the ID and the available views.\n\nAuthentication is Optional\n\n",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "accounts": [
          {
            "id": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0",
            "label": "NoneLabel",
            "bank_id": "GENODEM1GLS",
            "views_available": [
              {
                "id": "1",
                "short_name": "HHH",
                "is_public": true
              }
            ]
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "Could not get accounts.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Account-Public",
        "Account",
        "PublicData"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "views_available": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "is_public": {
                        "type": "boolean"
                      },
                      "short_name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "bank_id": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/accounts/public"
    },
    {
      "operation_id": "OBPv3.0.0-deleteEntitlementRequest",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "deleteEntitlementRequest"
      },
      "request_verb": "DELETE",
      "request_url": "/obp/v3.0.0/entitlement-requests/ENTITLEMENT_REQUEST_ID",
      "summary": "删除权利请求",
      "description": "<p>删除由ENTITLEMENT_REQUEST_ID指定的针对USER_ID指定的用户的权利请求</p><p>身份验证是强制性的</p>",
      "description_markdown": "Delete the Entitlement Request specified by ENTITLEMENT_REQUEST_ID for a user specified by USER_ID\n\n\nAuthentication is Mandatory\n      ",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "jsonString": "{}"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-20050: Current User is not a Super Admin!",
        "OBP-50200: Connector cannot return the data we requested.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "Role",
        "Entitlement",
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanDeleteEntitlementRequestsAtAnyBank",
          "requires_bank_id": false
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/entitlement-requests/ENTITLEMENT_REQUEST_ID"
    },
    {
      "operation_id": "OBPv3.0.0-getPermissionForUserForBankAccount",
      "implemented_by": {
        "version": "OBPv3.0.0",
        "function": "getPermissionForUserForBankAccount"
      },
      "request_verb": "GET",
      "request_url": "/obp/v3.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/permissions/PROVIDER/PROVIDER_ID",
      "summary": "获取用户的帐户访问权限。",
      "description": "映射（类型-&gt;字符串）",
      "description_markdown": "Returns the list of the views at BANK_ID for account ACCOUNT_ID that a user identified by PROVIDER_ID at their provider PROVIDER has access to.\nAll url parameters must be [%-encoded](http://en.wikipedia.org/wiki/Percent-encoding), which is often especially relevant for USER_ID and PROVIDER.\n\nAuthentication is Mandatory\n\nThe user needs to have access to the owner view.",
      "example_request_body": {
        "jsonString": "{}"
      },
      "success_response_body": {
        "views": [
          {
            "id": "1234",
            "short_name": "short_name",
            "description": "description",
            "metadata_view": "owner",
            "is_public": true,
            "alias": "No",
            "hide_metadata_if_alias_used": true,
            "can_add_comment": true,
            "can_add_corporate_location": true,
            "can_add_image": true,
            "can_add_image_url": true,
            "can_add_more_info": true,
            "can_add_open_corporates_url": true,
            "can_add_physical_location": true,
            "can_add_private_alias": true,
            "can_add_public_alias": true,
            "can_add_tag": true,
            "can_add_url": true,
            "can_add_where_tag": true,
            "can_delete_comment": true,
            "can_add_counterparty": true,
            "can_delete_corporate_location": true,
            "can_delete_image": true,
            "can_delete_physical_location": true,
            "can_delete_tag": true,
            "can_delete_where_tag": true,
            "can_edit_owner_comment": true,
            "can_see_bank_account_balance": true,
            "can_query_available_funds": true,
            "can_see_bank_account_bank_name": true,
            "can_see_bank_account_currency": true,
            "can_see_bank_account_iban": true,
            "can_see_bank_account_label": true,
            "can_see_bank_account_national_identifier": true,
            "can_see_bank_account_number": true,
            "can_see_bank_account_owners": true,
            "can_see_bank_account_swift_bic": true,
            "can_see_bank_account_type": true,
            "can_see_comments": true,
            "can_see_corporate_location": true,
            "can_see_image_url": true,
            "can_see_images": true,
            "can_see_more_info": true,
            "can_see_open_corporates_url": true,
            "can_see_other_account_bank_name": true,
            "can_see_other_account_iban": true,
            "can_see_other_account_kind": true,
            "can_see_other_account_metadata": true,
            "can_see_other_account_national_identifier": true,
            "can_see_other_account_number": true,
            "can_see_other_account_swift_bic": true,
            "can_see_owner_comment": true,
            "can_see_physical_location": true,
            "can_see_private_alias": true,
            "can_see_public_alias": true,
            "can_see_tags": true,
            "can_see_transaction_amount": true,
            "can_see_transaction_balance": true,
            "can_see_transaction_currency": true,
            "can_see_transaction_description": true,
            "can_see_transaction_finish_date": true,
            "can_see_transaction_metadata": true,
            "can_see_transaction_other_bank_account": true,
            "can_see_transaction_start_date": true,
            "can_see_transaction_this_bank_account": true,
            "can_see_transaction_type": true,
            "can_see_url": true,
            "can_see_where_tag": true,
            "can_see_bank_routing_scheme": true,
            "can_see_bank_routing_address": true,
            "can_see_bank_account_routing_scheme": true,
            "can_see_bank_account_routing_address": true,
            "can_see_other_bank_routing_scheme": true,
            "can_see_other_bank_routing_address": true,
            "can_see_other_account_routing_scheme": true,
            "can_see_other_account_routing_address": true,
            "can_add_transaction_request_to_own_account": true,
            "can_add_transaction_request_to_any_account": true,
            "can_see_bank_account_credit_limit": true,
            "can_create_direct_debit": true,
            "can_create_standing_order": true
          }
        ]
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "View",
        "Account",
        "User",
        "New-Style"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "jsonString": {
            "type": "string"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "views": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "can_see_other_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_where_tag": {
                  "type": "boolean"
                },
                "can_see_url": {
                  "type": "boolean"
                },
                "can_create_direct_debit": {
                  "type": "boolean"
                },
                "can_see_bank_account_swift_bic": {
                  "type": "boolean"
                },
                "can_see_bank_account_routing_address": {
                  "type": "boolean"
                },
                "can_see_tags": {
                  "type": "boolean"
                },
                "can_see_transaction_balance": {
                  "type": "boolean"
                },
                "can_delete_corporate_location": {
                  "type": "boolean"
                },
                "can_add_image_url": {
                  "type": "boolean"
                },
                "can_see_public_alias": {
                  "type": "boolean"
                },
                "can_add_transaction_request_to_own_account": {
                  "type": "boolean"
                },
                "can_add_comment": {
                  "type": "boolean"
                },
                "can_see_other_bank_routing_scheme": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "can_see_corporate_location": {
                  "type": "boolean"
                },
                "can_see_other_account_bank_name": {
                  "type": "boolean"
                },
                "can_see_more_info": {
                  "type": "boolean"
                },
                "can_add_counterparty": {
                  "type": "boolean"
                },
                "can_see_physical_location": {
                  "type": "boolean"
                },
                "can_query_available_funds": {
                  "type": "boolean"
                },
                "can_edit_owner_comment": {
                  "type": "boolean"
                },
                "can_see_private_alias": {
                  "type": "boolean"
                },
                "can_see_bank_account_credit_limit": {
                  "type": "boolean"
                },
                "can_see_other_account_routing_address": {
                  "type": "boolean"
                },
                "can_see_bank_account_balance": {
                  "type": "boolean"
                },
                "can_add_public_alias": {
                  "type": "boolean"
                },
                "can_see_bank_routing_scheme": {
                  "type": "boolean"
                },
                "can_see_bank_account_owners": {
                  "type": "boolean"
                },
                "can_see_other_account_metadata": {
                  "type": "boolean"
                },
                "can_delete_physical_location": {
                  "type": "boolean"
                },
                "hide_metadata_if_alias_used": {
                  "type": "boolean"
                },
                "can_see_transaction_this_bank_account": {
                  "type": "boolean"
                },
                "can_see_image_url": {
                  "type": "boolean"
                },
                "can_see_transaction_type": {
                  "type": "boolean"
                },
                "can_see_images": {
                  "type": "boolean"
                },
                "can_see_transaction_amount": {
                  "type": "boolean"
                },
                "metadata_view": {
                  "type": "string"
                },
                "can_see_transaction_metadata": {
                  "type": "boolean"
                },
                "can_see_comments": {
                  "type": "boolean"
                },
                "can_see_other_account_iban": {
                  "type": "boolean"
                },
                "can_add_image": {
                  "type": "boolean"
                },
                "can_see_bank_account_routing_scheme": {
                  "type": "boolean"
                },
                "can_see_bank_account_type": {
                  "type": "boolean"
                },
                "can_see_other_account_kind": {
                  "type": "boolean"
                },
                "can_see_bank_account_currency": {
                  "type": "boolean"
                },
                "can_add_where_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_start_date": {
                  "type": "boolean"
                },
                "can_see_bank_account_label": {
                  "type": "boolean"
                },
                "can_add_private_alias": {
                  "type": "boolean"
                },
                "can_see_transaction_currency": {
                  "type": "boolean"
                },
                "can_add_more_info": {
                  "type": "boolean"
                },
                "can_delete_comment": {
                  "type": "boolean"
                },
                "can_create_standing_order": {
                  "type": "boolean"
                },
                "can_see_other_bank_routing_address": {
                  "type": "boolean"
                },
                "can_see_transaction_other_bank_account": {
                  "type": "boolean"
                },
                "can_see_bank_account_number": {
                  "type": "boolean"
                },
                "can_add_corporate_location": {
                  "type": "boolean"
                },
                "alias": {
                  "type": "string"
                },
                "can_add_url": {
                  "type": "boolean"
                },
                "short_name": {
                  "type": "string"
                },
                "can_delete_where_tag": {
                  "type": "boolean"
                },
                "is_public": {
                  "type": "boolean"
                },
                "can_see_owner_comment": {
                  "type": "boolean"
                },
                "can_see_transaction_finish_date": {
                  "type": "boolean"
                },
                "can_see_open_corporates_url": {
                  "type": "boolean"
                },
                "can_add_physical_location": {
                  "type": "boolean"
                },
                "can_see_bank_account_iban": {
                  "type": "boolean"
                },
                "can_see_other_account_national_identifier": {
                  "type": "boolean"
                },
                "can_see_bank_routing_address": {
                  "type": "boolean"
                },
                "can_delete_image": {
                  "type": "boolean"
                },
                "can_add_transaction_request_to_any_account": {
                  "type": "boolean"
                },
                "can_add_tag": {
                  "type": "boolean"
                },
                "id": {
                  "type": "string"
                },
                "can_see_other_account_routing_scheme": {
                  "type": "boolean"
                },
                "can_add_open_corporates_url": {
                  "type": "boolean"
                },
                "can_delete_tag": {
                  "type": "boolean"
                },
                "can_see_transaction_description": {
                  "type": "boolean"
                },
                "can_see_bank_account_national_identifier": {
                  "type": "boolean"
                },
                "can_see_other_account_number": {
                  "type": "boolean"
                },
                "can_see_bank_account_bank_name": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/accounts/ACCOUNT_ID/permissions/PROVIDER/PROVIDER_ID"
    },
    {
      "operation_id": "OBPv2.0.0-addKycCheck",
      "implemented_by": {
        "version": "OBPv2.0.0",
        "function": "addKycCheck"
      },
      "request_verb": "PUT",
      "request_url": "/obp/v2.0.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_check/KYC_CHECK_ID",
      "summary": "添加KYC检查",
      "description": "<p>为CUSTOMER_ID指定的客户添加KYC支票。 KYC Checks存储KYC团队对客户进行的检查的详细信息，他们的评论和满意的状态。 </p>",
      "description_markdown": "Add a KYC check for the customer specified by CUSTOMER_ID. KYC Checks store details of checks on a customer made by the KYC team, their comments and a satisfied status.",
      "example_request_body": {
        "customer_number": "5987953",
        "date": "2017-09-18T22:00:00Z",
        "how": "online_meeting",
        "staff_user_id": "67876",
        "staff_name": "Simon",
        "satisfied": true,
        "comments": "String"
      },
      "success_response_body": {
        "bank_id": "GENODEM1GLS",
        "customer_id": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh",
        "id": "PlaceholderString",
        "customer_number": "5987953",
        "date": "2017-09-18T22:00:00Z",
        "how": "PlaceholderString",
        "staff_user_id": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1",
        "staff_name": "PlaceholderString",
        "satisfied": true,
        "comments": "PlaceholderString"
      },
      "error_response_bodies": [
        "OBP-20001: User not logged in. Authentication is required!",
        "OBP-10001: Incorrect json format.",
        "OBP-30001: Bank not found. Please specify a valid value for BANK_ID.",
        "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID.",
        "OBP-00004: Server error: could not add message",
        "OBP-50000: Unknown Error."
      ],
      "is_core": false,
      "is_psd2": false,
      "is_obwg": false,
      "tags": [
        "KYC",
        "Customer"
      ],
      "typed_request_body": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "customer_number": {
            "type": "string"
          },
          "staff_user_id": {
            "type": "string"
          },
          "staff_name": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "how": {
            "type": "string"
          },
          "satisfied": {
            "type": "boolean"
          }
        }
      },
      "typed_success_response_body": {
        "type": "object",
        "properties": {
          "bank_id": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "comments": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "staff_user_id": {
            "type": "string"
          },
          "customer_number": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "satisfied": {
            "type": "boolean"
          },
          "how": {
            "type": "string"
          },
          "staff_name": {
            "type": "string"
          }
        }
      },
      "roles": [
        {
          "role": "CanAddKycCheck",
          "requires_bank_id": true
        }
      ],
      "is_featured": false,
      "special_instructions": "",
      "specified_url": "/obp/v4.0.0/banks/BANK_ID/customers/CUSTOMER_ID/kyc_check/KYC_CHECK_ID"
    },
   
  ]
}